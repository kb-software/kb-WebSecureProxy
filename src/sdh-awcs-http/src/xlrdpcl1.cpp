//*SET TRY_120425_1=1;
//*SET TRY_101213_01=1;
//*SET D_TRACE_HL1=1;
//*SET D_PROB_101209=1;
//*set BNEWACC1=1;
/* end special setting KB 12.09 */
//*set D_TRACE_090302=1;
//*set D_FILE_BITMAP=1;
//*set D_TRACE_HL1=1;
#define D_FFLUSH                            /* 30.05.05 KB - flush stdout */
//*set D_TRACE_HL1=0;
//*set try$070518=1;
#define PROB_061004
#define CERTMS01                            /* 20.01.05 KB - certificate Microsoft */
#define PROB_050608
#define PROB_050610
#define PROB_050611
#define PROB_050618
#define PROB_050619
#define PROB_060725
#define PROB_060827
//#define B050514
//#define TRACEHL1
#define TRACEHL_COM1
#define TRACEHL_CL2SE_COM1                  /* 21.09.06 KB - client to server commands */
#define TRACEHL_BMP_060827
#ifdef TRACEHL1
#ifndef TRACEHL_BMP_060827
#define TRACEHL_BMP_060827
#endif
#endif
//#define TEMPSCR1                            /* 06.01.05 KB - send screen */
#define CERTMS01                            /* 20.01.05 KB - certificate Microsoft */
//#define TRACE_LOOP_1                        /* 24.01.05 KB - loop after error */
#define D_FFLUSH                            /* 30.05.05 KB - flush stdout */
#define D_FOR_TRACE1                        /* 31.05.05 KB - help in tracing */
#define D_BUG_HLJWT_INP1                    /* 17.07.07 KB - input from HOBlink JWT not encrypted */
/*+-------------------------------------------------------------------+*/
/*|                                                                   |*/
/*| PROGRAM NAME: xlrdpac1                                            |*/
/*| -------------                                                     |*/
/*|  DLL / Library for WebSecureProxy                                 |*/
/*|  RDP Accelerator                                                  |*/
/*|  KB 01.08.04                                                      |*/
/*|  Version 1.2 KB 15.02.12                                          |*/
/*|                                                                   |*/
/*| COPYRIGHT:                                                        |*/
/*| ----------                                                        |*/
/*|  Copyright (C) HOB 2004                                           |*/
/*|  Copyright (C) HOB Germany 2005                                   |*/
/*|  Copyright (C) HOB Germany 2006                                   |*/
/*|  Copyright (C) HOB Germany 2007                                   |*/
/*|  Copyright (C) HOB Germany 2008                                   |*/
/*|  Copyright (C) HOB Germany 2009                                   |*/
/*|  Copyright (C) HOB Germany 2010                                   |*/
/*|  Copyright (C) HOB Germany 2012                                   |*/
/*|  Copyright (C) HOB Germany 2013                                   |*/
/*|                                                                   |*/
/*| REQUIRED PROGRAMS:                                                |*/
/*| ------------------                                                |*/
/*|  MS Visual Studio 2005 (VC8)                                      |*/
/*|  GCC all plattforms                                               |*/
/*|                                                                   |*/
/*| FUNCTION:                                                         |*/
/*| ---------                                                         |*/
/*|  generated source from .pre (PRECOMP)                             |*/
/*|  this is the source for little endian                             |*/
/*|                                                                   |*/
/*+-------------------------------------------------------------------+*/

/* #define TRACEHL1 */

/*+-------------------------------------------------------------------+*/
/*| System and library header files.                                  |*/
/*+-------------------------------------------------------------------+*/

#define HCOMPR2
#include <stdlib.h>
#include <stdio.h>
#include <stddef.h>
#include <stdarg.h>
#include <string.h>
#include <stdint.h>
#ifndef HL_UNIX
#include <conio.h>
#endif
#include <time.h>
#ifndef HL_UNIX
#include <winsock2.h>
//#include <ws2tcpip.h>
#include <windows.h>
#else
//#include <unistd.h>
#include "hob-unix01.h"
#endif
#include "hob-cd-record-1.h"
#include "hob-encry-1.h"
#define DEF_HL_INCL_INET
#include "hob-xsclib01.h"
#include <hob-xslunic1.h>
#include "hob-rdpclient1.h"
#include "hob-stor-sdh.h"

#ifndef HL_WCHAR
#ifndef HL_UNIX
#define HL_WCHAR WCHAR
#else
#define HL_WCHAR unsigned short int
#endif
#endif

#define CHAR_CR                0X0D         /* carriage-return         */
#define CHAR_LF                0X0A         /* line-feed               */

#define D_AUX_STOR_SIZE      (32 * 1024)    /* size storage element    */
#define DEF_LEN_VIRTCH_STA   12
#define D_MAX_CRYPT_LEN      0X100
#define D_MAX_OFFSCR_DELETE  64             /* maximum indices in OFFSCR_DELETE_LIST */
#define D_MAX_BMC_MSTSC      32000          /* maximum length for bitmap compression */
#define D_MAX_OUT_BMC_MSTSC  4000           /* maximum output of bitmap compression */
#define D_USERID_SE2CL       1              /* userid from server to client */
#define D_DISPLAY_CHANNEL    0X03EB         /* default display channel */
#define D_EXTRA_CHANNEL      0X03E9         /* begin extra channels    */
#define D_R5_ORD_NO          32             /* RDP 5 maximum order number */
#define D_LEN_CLIENT_RAND    32             /* length client random    */
#define CONST_DEV_BITMAP     13             /* ask Microsoft why shorten length is needed */
#define D_RSA_KEY_SIZE       256            /* compare size RSA key    */
#define D_RSA_KEY_PADDING    8              /* padding of RSA key      */
//#define DEF_NO_COPY          128
#define DEF_CONST_RDP_03     0X03
#define DEF_CONST_ASN1_OS_04 0X04
#define DEF_CONST_ORDSEC_CACHE_GLYPHS_XRDP 0X03
#define DEF_CONST_ORDSEC_BRUSH 0X07
#define DEF_CONST_ORDSEC_MAX   0X05
#define DEF_CONST_ORDSEC_BRUSH_LEN 6        /* length of brush data    */
#define DEF_CONST_O01_BRUSH_LEN 7           /* length of brush data    */
#define DEF_CONST_O0E_BRUSH_LEN 7           /* length of brush data    */
#define DEF_UPDATE_BITMAP_CO 9              /* number of short update bitmap */
#define D_TYPE_PUB_PAR_DIR   1              /* public parms direct     */
#define D_TYPE_PUB_PAR_CERT  2              /* public parms certificate */
#define D_PPDIR_PUB_VAL      6              /* public parms direct public value */
#define D_PPDIR_SIG          8              /* public parms direct signature */
#define D_GLYCOT1            10             /* glyph coordinates       */
#define D_GLYCOT2            256            /* glyph coordinates       */
#define D_GLYLEFT            0              /* glyph coordinate left   */
#define D_GLYTOP             1              /* glyph coordinate top    */
#define D_GLYWIDTH           2              /* glyph coordinate width  */
#define D_GLYHEIGHT          3              /* glyph coordinate height */
#define D_SIZE_HASH          8              /* size of hash            */
#define D_DEMAND_ACT_PDU     0X11           /* demand active PDU       */
#define TS_DEACTIVATE_ALL_PDU 0X16          /* Deactivate All PDU Data */
#define PDUTYPE_DATAPDU      0X07           /* Data PDU                */
#define D_XYZ_ERROR          0X17           /* ??? 04.06.11 KB         */
#define PDUTYPE2_SYNCHRONIZE       0X1F     /* 31                      */
#define PDUTYPE2_REFRESH_RECT      0X21     /* 33                      */
#define PDUTYPE2_SUPPRESS_OUTPUT   0X23     /* 35                      */
#define PDUTYPE2_SHUTDOWN_REQUEST  0X24     /* 36                      */
#define SYNCMSGTYPE_SYNC     1
#define RNS_UD_24BPP_SUPPORT              0X0001
#define RNS_UD_16BPP_SUPPORT              0X0002
#define RNS_UD_15BPP_SUPPORT              0X0004
#define RNS_UD_32BPP_SUPPORT              0X0008
#define RNS_UD_CS_SUPPORT_ERRINFO_PDU     0X0001
#define RNS_UD_CS_WANT_32BPP_SESSION      0X0002
#define RNS_UD_CS_STRONG_ASYMMETRIC_KEYS  0X0008
#define CAPSTYPE_GENERAL     1              /* General Capability Set (section 2.2.7.1.1) */
#define CAPSTYPE_BITMAP      2              /* Bitmap Capability Set (section 2.2.7.1.2) */
#define CAPSTYPE_ORDER       3              /* Order Capability Set (section 2.2.7.1.3) */
#define CAPSTYPE_BITMAPCACHE 4              /* Revision 1 Bitmap Cache Capability Set (section 2.2.7.1.4.1) */
#define CAPSTYPE_CONTROL     5              /* Control Capability Set (section 2.2.7.2.2) */
#define CAPSTYPE_ACTIVATION  7              /* Window Activation Capability Set (section 2.2.7.2.3) */
#define CAPSTYPE_POINTER     8              /* Pointer Capability Set (section 2.2.7.1.5) */
#define CAPSTYPE_SHARE       9              /* Share Capability Set (section 2.2.7.2.4) */
#define CAPSTYPE_COLORCACHE  10             /* Color Table Cache Capability Set (see [MS-RDPEGDI] section 2.2.1.1) */
#define CAPSTYPE_SOUND       12             /* Sound Capability Set (section 2.2.7.1.11) */
#define CAPSTYPE_INPUT       13             /* Input Capability Set (section 2.2.7.1.6) */
#define CAPSTYPE_FONT        14             /* Font Capability Set (section 2.2.7.2.5) */
#define CAPSTYPE_BRUSH       15             /* Brush Capability Set (section 2.2.7.1.7) */
#define CAPSTYPE_GLYPHCACHE  16             /* Glyph Cache Capability Set (section 2.2.7.1.8) */
#define CAPSTYPE_OFFSCREENCACHE 17          /* Offscreen Bitmap Cache Capability Set (section 2.2.7.1.9) */
#define CAPSTYPE_BITMAPCACHE_HOSTSUPPORT 18  /* Bitmap Cache Host Support Capability Set (section 2.2.7.2.1) */
#define CAPSTYPE_BITMAPCACHE_REV2 19        /* Revision 2 Bitmap Cache Capability Set (section 2.2.7.1.4.2) */
#define CAPSTYPE_VIRTUALCHANNEL 20          /* Virtual Channel Capability Set (section 2.2.7.1.10) */
#define CAPSTYPE_DRAWNINEGRIDCACHE 21       /* DrawNineGrid Cache Capability Set ([MS-RDPEGDI] section 2.2.1.2) */
#define CAPSTYPE_DRAWGDIPLUS 22             /* Draw GDI+ Cache Capability Set ([MS-RDPEGDI] section 2.2.1.3) */
#define CAPSTYPE_RAIL        23             /* Remote Programs Capability Set ([MS-RDPERP] section 2.2.1.1.1) */
#define CAPSTYPE_WINDOW      24             /* Window List Capability Set ([MS-RDPERP] section 2.2.1.1.2) */
#define CAPSETTYPE_COMPDESK  25             /* Desktop Composition Extension Capability Set (section 2.2.7.2.8) */
#define CAPSETTYPE_MULTIFRAGMENTUPDATE 26   /* Multifragment Update Capability Set (section 2.2.7.2.6) */
#define CAPSETTYPE_LARGE_POINTER 27         /* Large Pointer Capability Set (section 2.2.7.2.7) */
#define TS_CACHED_BRUSH      0X80
#define BS_SOLID             0X00
#define BS_NULL              0X01
#define BS_HATCHED           0X02
#define BS_PATTERN           0X03
#define HS_HORIZONTAL        0X00
#define HS_VERTICAL          0X01
#define HS_FDIAGONAL         0X02
#define HS_BDIAGONAL         0X03
#define HS_CROSS             0X04
#define HS_DIAGCROSS         0X05
#define SV_SAVEBITS          0X00           /* Save bitmap operation   */
#define SV_RESTOREBITS       0X01           /* Restore bitmap operation */
#define MAX_PDU_LEN          0X00004000
#define TS_CACHE_BITMAP_UNCOMPRESSED_REV2 0X04
#define TS_CACHE_BITMAP_COMPRESSED_REV2   0X05
#define TS_CACHE_GLYPH                    0X03
#define TS_ALTSEC_STREAM_BITMAP_FIRST     0X02
#define TS_ALTSEC_STREAM_BITMAP_NEXT      0X03
#define TS_ALTSEC_CREATE_NINEGRID_BITMAP  0X04
#define TS_ALTSEC_FRAME_MARKER            0X0D
#define STREAM_BITMAP_REV2                0X04
#define CBR2_HEIGHT_SAME_AS_WIDTH         0X01
#define CBR2_PERSISTENT_KEY_PRESENT       0X02
#define CBR2_NO_BITMAP_COMPRESSION_HDR    0X08
#define CBR2_DO_NOT_CACHE                 0X10
#define CBR3_DO_NOT_CACHE                 0X10
#define TS_PROTOCOL_VERSION               0X10
#define PDUTYPE_CONFIRMACTIVEPDU          0X03
//#define PDUTYPE_DATAPDU                   0X07

#define M_ERROR_FRSE_ILLOGIC iml_line_no = __LINE__; goto pfrse96;



/* get a piece of storage                                              */
/* end of macro M_MALLOC()                                             */

/* copy field structure dsd_rdp_co from server to client               */
/* end of macro M_COPY_CO1_SE2CL()                                     */


/* some cryptographical data mixing steps used in key generation       */
/* end of macro M_SALTHASH()                                           */

/* macro to apply order coordinates - absolute                         */
/* end of macro M_APPLY_ORD_ABS()                                      */

/* macro to apply order coordinates - absolute                         */
/* end of macro NEW_APPLY_ORD_ABS()                                    */

//*if def BNEWACC1;
/* macro to continue depending on flag bits                            */
/* end of macro M_CONT_O_COOR_ABS()                                    */

/* macro to apply order coordinates - delta                            */
/* end of macro M_APPLY_ORD_DELTA()                                    */

/* macro to continue depending on flag bits                            */
/* end of macro M_CONT_O_COOR_DELTA()                                  */
//*cend;

/* macro to continue depending on flag bits for bounds absolute or delta */
/* end of macro M_CO_BOUNDS_APPLY()                                    */

/* macro to apply value litle endian                                   */
/* end of macro M_APPLY_LE()                                           */

/* macro to apply a single byte                                        */
/* end of macro M_CL_APPLY_SINGLE()                                    */

/* macro to prepare for a field with a single byte                     */
/* end of macro M_CL_PREPARE_SINGLE()                                  */

/* macro to prepare for multi-byte field                               */
/* end of macro M_CL_PREPARE_MULTI()                                   */

/* macro to continue depending on flag bits for order 00 / 0X00        */
/* end of macro M_CO_O00_FIELDS()                                      */

/* macro to continue depending on flag bits for order 01 / 0X01        */
/* end of macro M_CO_O01_FIELDS()                                      */

/* macro to continue depending on flag bits for order 02 / 0X02        */
/* end of macro M_CO_O02_FIELDS()                                      */

/* macro to continue depending on flag bits for order 7 / 0X07         */
/* end of macro M_CO_O07_FIELDS()                                      */

/* macro to continue depending on flag bits for order 8 / 0X08         */
/* end of macro M_CO_O08_FIELDS()                                      */

/* macro to continue depending on flag bits for order 09 / 0X09        */
/* end of macro M_CO_O09_FIELDS()                                      */

/* macro to continue depending on flag bits for order 10 / 0X0A        */
/* end of macro M_CO_O0A_FIELDS()                                      */

/* macro to continue depending on flag bits for order 11 / 0X0B        */
/* end of macro M_CO_O0B_FIELDS()                                      */

/* macro to continue depending on flag bits for order 13 / 0X0D        */
/* end of macro M_CO_O0D_FIELDS()                                      */

/* macro to continue depending on flag bits for order 14 / 0X0E        */
/* end of macro M_CO_O0E_FIELDS()                                      */

/* macro to continue depending on flag bits for order 15 / 0X0F        */
/* end of macro M_CO_O0F_FIELDS()                                      */

/* macro to continue depending on flag bits for order 16 / 0X10        */
/* end of macro M_CO_O10_FIELDS()                                      */

/* macro to continue depending on flag bits for order 17 / 0X11        */
/* end of macro M_CO_O11_FIELDS()                                      */

/* macro to continue depending on flag bits for order 18 / 0X12        */
/* end of macro M_CO_O12_FIELDS()                                      */

/* macro to continue depending on flag bits for order 19 / 0X13        */
/* end of macro M_CO_O13_FIELDS()                                      */

/* macro to continue depending on flag bits for order 20 / 0X14        */
/* end of macro M_CO_O14_FIELDS()                                      */

/* macro to continue depending on flag bits for order 21 / 0X15        */
/* end of macro M_CO_O15_FIELDS()                                      */

/* macro to continue depending on flag bits for order 22 / 0X16        */
/* end of macro M_CO_O16_FIELDS()                                      */

/* macro to continue depending on flag bits for order 24 / 0X18        */
/* end of macro M_CO_O18_FIELDS()                                      */

/* macro to continue depending on flag bits for order 25 / 0X19        */
/* end of macro M_CO_O19_FIELDS()                                      */

/* macro to continue depending on flag bits for order 26 / 0X1A        */
/* end of macro M_CO_O1A_FIELDS()                                      */

/* macro to continue depending on flag bits for order 27 / 0X1B        */
/* end of macro M_CO_O1B_FIELDS()                                      */

/* macro to check if temporary buffer is big enough                    */
/* end of macro M_TMPBUF_CL_1()                                        */

/* macro to check if temporary buffer is big enough                    */
/* end of macro M_TMPBUF_SE_1()                                        */

/* macro bitmap order 0 fill9                                          */
/* end of macro M_BITMAP_00_1()                                        */

/* macro bitmap order 1 Mix                                            */
/* end of macro M_BITMAP_01_1()                                        */

/* macro make frame buffer                                             */
/* end of macro M_FRAME_BUF_1()                                        */

/* macro make frame buffer                                             */
/* end of macro M_FRAME_BUF_2()                                        */

/* macro make frame buffer                                             */
/* end of macro M_FRAME_BUF_3()                                        */

/* macro make frame buffer                                             */
/* end of macro M_FRAME_BUF_4()                                        */

/* macro check PDU overflow                                            */
/* end of macro M_CHECK_PDU_OV()                                       */

/* macro to send bounds to the client, first part                      */
/* end of macro M_SEND_BOUNDS_P1()                                     */

/* macro to send bounds to the client, second part                     */
/* end of macro M_SEND_BOUNDS_P2()                                     */

/* macro to generate prototype statement for ROP2/3                    */
/* end of macro to generate prototype statement for ROP2/3             */
/* macro to generate functions for ROP2/3                              */
/* macro to generate definitions for ROP2/3                            */
/* end of macro to generate definitions for ROP2/3                     */
/* macro to generate functions for ROP2/3                              */
/* end of macro to generate functions for ROP2/3                       */
/* macro to generate LineTo operations, also for Polyline              */
/* end of macro to generate LineTo operations, also for Polyline       */

typedef unsigned int ( * amd_rop2_x_x )( unsigned int, unsigned int );


/* receive block from server, field position                           */
enum ied_fsfp_bl {
   ied_fsfp_invalid,                        /* invalid data received   */
   ied_fsfp_constant,                       /* is in constant          */
   ied_fsfp_status,                         /* status from server      */
   ied_fsfp_x224_p01,                       /* is in x224 header       */
   ied_fsfp_ignore,                         /* ignore data             */
   ied_fsfp_copy,                           /* copy data               */
   ied_fsfp_cmp_zero,                       /* compare with zeroes     */
   ied_fsfp_rec_type,                       /* receive record type     */
   ied_fsfp_byte01,                         /* receive byte 01         */
   ied_fsfp_lencons_2,                      /* two bytes length remain */
   ied_fsfp_lencons_1,                      /* one byte length remains */
   ied_fsfp_mcs_c1,                         /* x224 MCS command 1      */
   ied_fsfp_mcs_c2,                         /* x224 MCS command 2      */
   ied_fsfp_userid_se2cl,                   /* userid server to client */
   ied_fsfp_userid_cl2se,                   /* userid client to server */
   ied_fsfp_chno,                           /* channel number          */
   ied_fsfp_prio_seg,                       /* Priority / Segmentation */
   ied_fsfp_rt02,                           /* record type 2           */
   ied_fsfp_rt03,                           /* record type 3           */
   ied_fsfp_padd_1,                         /* padding                 */
   ied_fsfp_rdp4_hash,                      /* hash RDP4 block         */
   ied_fsfp_sch_len,                        /* Share Control Header length */
   ied_fsfp_sch_pdu_type,                   /* Share Control Header PDU type */
   ied_fsfp_sch_pdu_source,                 /* Share Control Header PDU source */
   ied_fsfp_r04_rdp_v,                      /* block 4 RDP version     */
   ied_fsfp_int_lit_e,                      /* int little endian       */
   ied_fsfp_int_big_e,                      /* int big endian          */
   ied_fsfp_asn1_tag,                       /* ASN.1 tag               */
   ied_fsfp_asn1_l1_fi,                     /* ASN.1 length field      */
   ied_fsfp_asn1_l1_p2,                     /* ASN.1 length part two   */
   ied_fsfp_mu_len_1,                       /* multi length 1          */
   ied_fsfp_mu_len_2,                       /* multi length 2          */
   ied_fsfp_r5_len_1,                       /* RDP 5 multi length 1    */
   ied_fsfp_r5_len_2,                       /* RDP 5 multi length 2    */
   ied_fsfp_r5_hash,                        /* RDP 5 hash              */
   ied_fsfp_r5_pdu_typ,                     /* RDP 5 PDU type          */
   ied_fsfp_r5_pdu_cofl,                    /* RDP 5 compression flags */
   ied_fsfp_r5_pdu_len,                     /* RDP 5 PDU length        */
   ied_fsfp_r5_pdu_compr,                   /* RDP 5 PDU compressed    */
   ied_fsfp_r5_pdu_no_ord,                  /* RDP 5 PDU number of orders */
   ied_fsfp_r5_pdu_ord_fl,                  /* RDP 5 control order flags   */
   ied_fsfp_r5_pdu_ord_prim,                /* RDP 5 primary order     */
   ied_fsfp_r5_pdu_ord_prfl,                /* RDP 5 primary order flags */
   ied_fsfp_r5_pdu_ord_bofl,                /* RDP 5 bounds flags      */
   ied_fsfp_r5_po_bounds_abs_left,          /* RDP 5 bounds absolute left */
   ied_fsfp_r5_po_bounds_abs_top,           /* RDP 5 bounds absolute top */
   ied_fsfp_r5_po_bounds_abs_right,         /* RDP 5 bounds absolute right */
   ied_fsfp_r5_po_bounds_abs_bottom,        /* RDP 5 bounds absolute bottom */
   ied_fsfp_r5_po_bounds_delta_left,        /* RDP 5 bounds delta left */
   ied_fsfp_r5_po_bounds_delta_top,         /* RDP 5 bounds delta top */
   ied_fsfp_r5_po_bounds_delta_right,       /* RDP 5 bounds delta right */
   ied_fsfp_r5_po_bounds_delta_bottom,      /* RDP 5 bounds delta bottom */
   ied_fsfp_r5_sec_cache_index,             /* RDP 5 secondary cache index */
   ied_fsfp_r5_sec_coor_left_1,             /* RDP 5 secondary coor left 1 */
   ied_fsfp_r5_sec_coor_left_2,             /* RDP 5 secondary coor left 2 */
   ied_fsfp_r5_sec_coor_top_1,              /* RDP 5 secondary coor top 1 */
   ied_fsfp_r5_sec_coor_top_2,              /* RDP 5 secondary coor top 2 */
   ied_fsfp_r5_sec_coor_width_1,            /* RDP 5 secondary coor width 1 */
   ied_fsfp_r5_sec_coor_width_2,            /* RDP 5 secondary coor width 2 */
   ied_fsfp_r5_sec_coor_height_1,           /* RDP 5 secondary coor height 1 */
   ied_fsfp_r5_sec_coor_height_2,           /* RDP 5 secondary coor height 2 */
   ied_fsfp_bitmap_header,                  /* bitmap header           */
   ied_fsfp_bitmap_compr_flag,              /* bitmap compression flag */
   ied_fsfp_bitmap_ign_byte,                /* bitmap ignore this byte */
   ied_fsfp_bitmap_uncomp_len,              /* bitmap length uncompressed */
   ied_fsfp_bitmap_out,                     /* output of bitmap elements */
   ied_fsfp_bitmap_spec_lef,                /* bitmap special length encoding flag */
   ied_fsfp_bitmap_comp_len,                /* bitmap length compressed */
   ied_fsfp_bitmap_comp_data,               /* bitmap compressed data  */
   ied_fsfp_r5_o00_abs_left,                /* RDP 5 order 0 absolute left */
   ied_fsfp_r5_o00_abs_top,                 /* RDP 5 order 0 absolute top */
   ied_fsfp_r5_o00_abs_width,               /* RDP 5 order 0 absolute width */
   ied_fsfp_r5_o00_abs_height,              /* RDP 5 order 0 absolute height */
   ied_fsfp_r5_o00_delta_left,              /* RDP 5 order 0 delta left */
   ied_fsfp_r5_o00_delta_top,               /* RDP 5 order 0 delta top */
   ied_fsfp_r5_o00_delta_width,             /* RDP 5 order 0 delta width */
   ied_fsfp_r5_o00_delta_height,            /* RDP 5 order 0 delta height */
   ied_fsfp_r5_o00_rop3,                    /* RDP 5 order 0 ROP3      */
   ied_fsfp_r5_o01_abs_left,                /* RDP 5 order 1 absolute left */
   ied_fsfp_r5_o01_abs_top,                 /* RDP 5 order 1 absolute top */
   ied_fsfp_r5_o01_abs_width,               /* RDP 5 order 1 absolute width */
   ied_fsfp_r5_o01_abs_height,              /* RDP 5 order 1 absolute height */
   ied_fsfp_r5_o01_delta_left,              /* RDP 5 order 1 delta left */
   ied_fsfp_r5_o01_delta_top,               /* RDP 5 order 1 delta top */
   ied_fsfp_r5_o01_delta_width,             /* RDP 5 order 1 delta width */
   ied_fsfp_r5_o01_delta_height,            /* RDP 5 order 1 delta height */
   ied_fsfp_r5_o01_rop3,                    /* RDP 5 order 1 ROP3      */
   ied_fsfp_r5_o01_col_backgr,              /* RDP 5 order 1 background colour */
   ied_fsfp_r5_o01_col_foregr,              /* RDP 5 order 1 foreground colour */
   ied_fsfp_r5_o01_brush_x,                 /* RDP 5 order 1 brush X   */
   ied_fsfp_r5_o01_brush_y,                 /* RDP 5 order 1 brush Y   */
   ied_fsfp_r5_o01_brush_style,             /* RDP 5 order 1 brush style */
   ied_fsfp_r5_o01_brush_hatch,             /* RDP 5 order 1 brush hatch */
   ied_fsfp_r5_o02_abs_left,                /* RDP 5 order 2 absolute left */
   ied_fsfp_r5_o02_abs_top,                 /* RDP 5 order 2 absolute top */
   ied_fsfp_r5_o02_abs_width,               /* RDP 5 order 2 absolute width */
   ied_fsfp_r5_o02_abs_height,              /* RDP 5 order 2 absolute height */
   ied_fsfp_r5_o02_delta_left,              /* RDP 5 order 2 delta left */
   ied_fsfp_r5_o02_delta_top,               /* RDP 5 order 2 delta top */
   ied_fsfp_r5_o02_delta_width,             /* RDP 5 order 2 delta width */
   ied_fsfp_r5_o02_delta_height,            /* RDP 5 order 2 delta height */
   ied_fsfp_r5_o02_rop3,                    /* RDP 5 order 2 ROP3      */
   ied_fsfp_r5_o02_abs_source_x,            /* RDP 5 order 2 abs source X */
   ied_fsfp_r5_o02_abs_source_y,            /* RDP 5 order 2 abs source Y */
   ied_fsfp_r5_o02_delta_source_x,          /* RDP 5 order 2 delta source X */
   ied_fsfp_r5_o02_delta_source_y,          /* RDP 5 order 2 delta source Y */
   ied_fsfp_r5_o07_abs_left,                /* RDP 5 order 7/0X07 absolute left */
   ied_fsfp_r5_o07_abs_top,                 /* RDP 5 order 7/0X07 absolute top */
   ied_fsfp_r5_o07_abs_right,               /* RDP 5 order 7/0X07 absolute right */
   ied_fsfp_r5_o07_abs_bottom,              /* RDP 5 order 7/0X07 absolute bottom */
   ied_fsfp_r5_o07_delta_left,              /* RDP 5 order 7/0X07 delta left */
   ied_fsfp_r5_o07_delta_top,               /* RDP 5 order 7/0X07 delta top */
   ied_fsfp_r5_o07_delta_right,             /* RDP 5 order 7/0X07 delta right */
   ied_fsfp_r5_o07_delta_bottom,            /* RDP 5 order 7/0X07 delta bottom */
   ied_fsfp_r5_o07_bitmapid,                /* RDP 5 order 7/0X07 bitmapId */
   ied_fsfp_r5_o08_abs_left,                /* RDP 5 order 8/0X08 absolute left */
   ied_fsfp_r5_o08_abs_top,                 /* RDP 5 order 8/0X08 absolute top */
   ied_fsfp_r5_o08_abs_right,               /* RDP 5 order 8/0X08 absolute right */
   ied_fsfp_r5_o08_abs_bottom,              /* RDP 5 order 8/0X08 absolute bottom */
   ied_fsfp_r5_o08_delta_left,              /* RDP 5 order 8/0X08 delta left */
   ied_fsfp_r5_o08_delta_top,               /* RDP 5 order 8/0X08 delta top */
   ied_fsfp_r5_o08_delta_right,             /* RDP 5 order 8/0X08 delta right */
   ied_fsfp_r5_o08_delta_bottom,            /* RDP 5 order 8/0X08 delta bottom */
   ied_fsfp_r5_o08_bitmapid,                /* RDP 5 order 8/0X08 bitmapId */
   ied_fsfp_r5_o08_no_delta_entries,        /* nDeltaEntries - number of delta entries */
   ied_fsfp_r5_o08_len_delta,               /* length CodedDeltaList   */
   ied_fsfp_r5_o09_backmode,                /* RDP 5 order 9 backmode  */
   ied_fsfp_r5_o09_abs_nxstart,             /* RDP 5 order 9 absolute nXStart */
   ied_fsfp_r5_o09_abs_nystart,             /* RDP 5 order 9 absolute nYStart */
   ied_fsfp_r5_o09_abs_nxend,               /* RDP 5 order 9 absolute nXEnd */
   ied_fsfp_r5_o09_abs_nyend,               /* RDP 5 order 9 absolute nYEnd */
   ied_fsfp_r5_o09_delta_nxstart,           /* RDP 5 order 9 delta nXStart */
   ied_fsfp_r5_o09_delta_nystart,           /* RDP 5 order 9 delta nYStart */
   ied_fsfp_r5_o09_delta_nxend,             /* RDP 5 order 9 delta nXEnd */
   ied_fsfp_r5_o09_delta_nyend,             /* RDP 5 order 9 delta nYEnd */
   ied_fsfp_r5_o09_backcolor,               /* RDP 5 order 9 BackColor */
   ied_fsfp_r5_o09_brop2,                   /* RDP 5 order 9 bRop2     */
   ied_fsfp_r5_o09_penstyle,                /* RDP 5 order 9 PenStyle  */
   ied_fsfp_r5_o09_penwidth,                /* RDP 5 order 9 PenWidth  */
   ied_fsfp_r5_o09_pencolor,                /* RDP 5 order 9 PenColor  */
   ied_fsfp_r5_o0a_abs_left,                /* RDP 5 order 10/0AH absolute left */
   ied_fsfp_r5_o0a_abs_top,                 /* RDP 5 order 10/0AH absolute top */
   ied_fsfp_r5_o0a_abs_width,               /* RDP 5 order 10/0AH absolute width */
   ied_fsfp_r5_o0a_abs_height,              /* RDP 5 order 10/0AH absolute height */
   ied_fsfp_r5_o0a_delta_left,              /* RDP 5 order 10/0AH delta left */
   ied_fsfp_r5_o0a_delta_top,               /* RDP 5 order 10/0AH delta top */
   ied_fsfp_r5_o0a_delta_width,             /* RDP 5 order 10/0AH delta width */
   ied_fsfp_r5_o0a_delta_height,            /* RDP 5 order 10/0AH delta height */
   ied_fsfp_r5_o0a_colour,                  /* RDP 5 order 10/0AH colour */
   ied_fsfp_r5_o0b_saveoffset,              /* RDP 5 order 11 SaveOffset */
   ied_fsfp_r5_o0b_abs_left,                /* RDP 5 order 11 absolute left */
   ied_fsfp_r5_o0b_abs_top,                 /* RDP 5 order 11 absolute top */
   ied_fsfp_r5_o0b_abs_right,               /* RDP 5 order 11 absolute right */
   ied_fsfp_r5_o0b_abs_bottom,              /* RDP 5 order 11 absolute bottom */
   ied_fsfp_r5_o0b_delta_left,              /* RDP 5 order 11 delta left */
   ied_fsfp_r5_o0b_delta_top,               /* RDP 5 order 11 delta top */
   ied_fsfp_r5_o0b_delta_right,             /* RDP 5 order 11 delta right */
   ied_fsfp_r5_o0b_delta_bottom,            /* RDP 5 order 11 delta bottom */
   ied_fsfp_r5_o0b_oper,                    /* RDP 5 order 11/0BH operation */
   ied_fsfp_r5_o0d_cache_id,                /* RDP 5 order 13/0DH cacheId */
   ied_fsfp_r5_o0d_abs_left,                /* RDP 5 order 13 absolute left */
   ied_fsfp_r5_o0d_abs_top,                 /* RDP 5 order 13 absolute top */
   ied_fsfp_r5_o0d_abs_width,               /* RDP 5 order 13/0DH absolute width */
   ied_fsfp_r5_o0d_abs_height,              /* RDP 5 order 13/0DH absolute height */
   ied_fsfp_r5_o0d_delta_left,              /* RDP 5 order 13 delta left */
   ied_fsfp_r5_o0d_delta_top,               /* RDP 5 order 13 delta top */
   ied_fsfp_r5_o0d_delta_width,             /* RDP 5 order 13/0DH delta width */
   ied_fsfp_r5_o0d_delta_height,            /* RDP 5 order 13/0DH delta height */
   ied_fsfp_r5_o0d_rop3,                    /* RDP 5 order 13 ROP3     */
   ied_fsfp_r5_o0d_abs_source_x,            /* RDP 5 order 13 abs source X */
   ied_fsfp_r5_o0d_abs_source_y,            /* RDP 5 order 13 abs source Y */
   ied_fsfp_r5_o0d_delta_source_x,          /* RDP 5 order 13 delta source X */
   ied_fsfp_r5_o0d_delta_source_y,          /* RDP 5 order 13 delta source Y */
   ied_fsfp_r5_o0d_bitmapcind,              /* RDP 5 order 13 BitmapCacheIndex */
   ied_fsfp_r5_o0e_cache_id,                /* RDP 5 order 14/0EH cacheId */
   ied_fsfp_r5_o0e_abs_left,                /* RDP 5 order 14 absolute left */
   ied_fsfp_r5_o0e_abs_top,                 /* RDP 5 order 14 absolute top */
   ied_fsfp_r5_o0e_abs_width,               /* RDP 5 order 14 absolute width */
   ied_fsfp_r5_o0e_abs_height,              /* RDP 5 order 14 absolute height */
   ied_fsfp_r5_o0e_delta_left,              /* RDP 5 order 14 delta left */
   ied_fsfp_r5_o0e_delta_top,               /* RDP 5 order 14 delta top */
   ied_fsfp_r5_o0e_delta_width,             /* RDP 5 order 14/0EH delta width */
   ied_fsfp_r5_o0e_delta_height,            /* RDP 5 order 14/0EH delta height */
   ied_fsfp_r5_o0e_rop3,                    /* RDP 5 order 14 ROP3     */
   ied_fsfp_r5_o0e_abs_source_x,            /* RDP 5 order 14 abs source X */
   ied_fsfp_r5_o0e_abs_source_y,            /* RDP 5 order 14 abs source Y */
   ied_fsfp_r5_o0e_delta_source_x,          /* RDP 5 order 14 delta source X */
   ied_fsfp_r5_o0e_delta_source_y,          /* RDP 5 order 14 delta source Y */
   ied_fsfp_r5_o0e_col_backgr,              /* RDP 5 order 14 background colour */
   ied_fsfp_r5_o0e_col_foregr,              /* RDP 5 order 14 foreground colour */
   ied_fsfp_r5_o0e_brush_x,                 /* RDP 5 order 14 brush X   */
   ied_fsfp_r5_o0e_brush_y,                 /* RDP 5 order 14 brush Y   */
   ied_fsfp_r5_o0e_brush_style,             /* RDP 5 order 14 brush style */
   ied_fsfp_r5_o0e_brush_hatch,             /* RDP 5 order 14 brush hatch */
   ied_fsfp_r5_o0e_bitmapcind,              /* RDP 5 order 14 BitmapCacheIndex */
   ied_fsfp_r5_o0f_abs_left,                /* RDP 5 order 15/0FH absolute left */
   ied_fsfp_r5_o0f_abs_top,                 /* RDP 5 order 15/0FH absolute top */
   ied_fsfp_r5_o0f_abs_width,               /* RDP 5 order 15/0FH absolute width */
   ied_fsfp_r5_o0f_abs_height,              /* RDP 5 order 15/0FH absolute height */
   ied_fsfp_r5_o0f_delta_left,              /* RDP 5 order 15/0FH delta left */
   ied_fsfp_r5_o0f_delta_top,               /* RDP 5 order 15/0FH delta top */
   ied_fsfp_r5_o0f_delta_width,             /* RDP 5 order 15/0FH delta width */
   ied_fsfp_r5_o0f_delta_height,            /* RDP 5 order 15/0FH delta height */
   ied_fsfp_r5_o0f_rop3,                    /* RDP 5 order 15 ROP3     */
   ied_fsfp_r5_o0f_no_delta_entries,        /* nDeltaEntries - number of delta entries */
   ied_fsfp_r5_o0f_len_delta,               /* length CodedDeltaList   */
   ied_fsfp_r5_o10_abs_left,                /* RDP 5 order 16/10H absolute left */
   ied_fsfp_r5_o10_abs_top,                 /* RDP 5 order 16/10H absolute top */
   ied_fsfp_r5_o10_abs_width,               /* RDP 5 order 16/10H absolute width */
   ied_fsfp_r5_o10_abs_height,              /* RDP 5 order 16/10H absolute height */
   ied_fsfp_r5_o10_delta_left,              /* RDP 5 order 16/10H delta left */
   ied_fsfp_r5_o10_delta_top,               /* RDP 5 order 16/10H delta top */
   ied_fsfp_r5_o10_delta_width,             /* RDP 5 order 16/10H delta width */
   ied_fsfp_r5_o10_delta_height,            /* RDP 5 order 16/10H delta height */
   ied_fsfp_r5_o10_rop3,                    /* RDP 5 order 16 ROP3     */
   ied_fsfp_r5_o10_col_backgr,              /* RDP 5 order 16/10H background colour */
   ied_fsfp_r5_o10_col_foregr,              /* RDP 5 order 16/10H foreground colour */
   ied_fsfp_r5_o10_brush_x,                 /* RDP 5 order 16 brush X  */
   ied_fsfp_r5_o10_brush_y,                 /* RDP 5 order 16 brush Y  */
   ied_fsfp_r5_o10_brush_style,             /* RDP 5 order 16 brush style */
   ied_fsfp_r5_o10_brush_hatch,             /* RDP 5 order 16/10H brush hatch */
   ied_fsfp_r5_o10_no_delta_entries,        /* nDeltaEntries - number of delta entries */
   ied_fsfp_r5_o10_len_delta,               /* length CodedDeltaList   */
   ied_fsfp_r5_o11_abs_left,                /* RDP 5 order 17/11H absolute left */
   ied_fsfp_r5_o11_abs_top,                 /* RDP 5 order 17/11H absolute top */
   ied_fsfp_r5_o11_abs_width,               /* RDP 5 order 17/11H absolute width */
   ied_fsfp_r5_o11_abs_height,              /* RDP 5 order 17/11H absolute height */
   ied_fsfp_r5_o11_delta_left,              /* RDP 5 order 17/11H delta left */
   ied_fsfp_r5_o11_delta_top,               /* RDP 5 order 17/11H delta top */
   ied_fsfp_r5_o11_delta_width,             /* RDP 5 order 17/11H delta width */
   ied_fsfp_r5_o11_delta_height,            /* RDP 5 order 17/11H delta height */
   ied_fsfp_r5_o11_rop3,                    /* RDP 5 order 17/11H ROP3 */
   ied_fsfp_r5_o11_abs_source_x,            /* RDP 5 order 17/11H abs source X */
   ied_fsfp_r5_o11_abs_source_y,            /* RDP 5 order 17/11H abs source Y */
   ied_fsfp_r5_o11_delta_source_x,          /* RDP 5 order 17/11H delta source X */
   ied_fsfp_r5_o11_delta_source_y,          /* RDP 5 order 17/11H delta source Y */
   ied_fsfp_r5_o11_no_delta_entries,        /* nDeltaEntries - number of delta entries */
   ied_fsfp_r5_o11_len_delta,               /* length CodedDeltaList   */
   ied_fsfp_r5_o12_abs_left,                /* RDP 5 order 18/12H absolute left */
   ied_fsfp_r5_o12_abs_top,                 /* RDP 5 order 18/12H absolute top */
   ied_fsfp_r5_o12_abs_width,               /* RDP 5 order 18/12H absolute width */
   ied_fsfp_r5_o12_abs_height,              /* RDP 5 order 18/12H absolute height */
   ied_fsfp_r5_o12_delta_left,              /* RDP 5 order 18/12H delta left */
   ied_fsfp_r5_o12_delta_top,               /* RDP 5 order 18/12H delta top */
   ied_fsfp_r5_o12_delta_width,             /* RDP 5 order 18/12H delta width */
   ied_fsfp_r5_o12_delta_height,            /* RDP 5 order 18/12H delta height */
   ied_fsfp_r5_o12_color_red,               /* RDP 5 order 18/12H RedOrPaletteIndex */
   ied_fsfp_r5_o12_color_green,             /* RDP 5 order 18/12H Green */
   ied_fsfp_r5_o12_color_blue,              /* RDP 5 order 18/12H Blue */
   ied_fsfp_r5_o12_no_delta_entries,        /* RDP 5 order 18/12H nDeltaEntries - number of delta entries */
   ied_fsfp_r5_o12_len_delta,               /* RDP 5 order 18/12H length CodedDeltaList */
   ied_fsfp_r5_o13_cache_id,                /* RDP 5 order 19 cache Id */
// ied_fsfp_r5_o13_deltas,                  /* RDP 5 order 19 deltas   */
   ied_fsfp_r5_o13_fdrawing,                /* RDP 5 order 19/13H fDrawing */
   ied_fsfp_r5_o13_col_backgr,              /* RDP 5 order 19 background colour */
   ied_fsfp_r5_o13_col_foregr,              /* RDP 5 order 19 foreground colour */
   ied_fsfp_r5_o13_abs_left,                /* RDP 5 order 19 absolute left */
   ied_fsfp_r5_o13_abs_top,                 /* RDP 5 order 19 absolute top */
   ied_fsfp_r5_o13_abs_right,               /* RDP 5 order 19 absolute right */
   ied_fsfp_r5_o13_abs_bottom,              /* RDP 5 order 19 absolute bottom */
   ied_fsfp_r5_o13_delta_left,              /* RDP 5 order 19 delta left */
   ied_fsfp_r5_o13_delta_top,               /* RDP 5 order 19 delta top */
   ied_fsfp_r5_o13_delta_right,             /* RDP 5 order 19 delta right */
   ied_fsfp_r5_o13_delta_bottom,            /* RDP 5 order 19 delta bottom */
   ied_fsfp_r5_o13_r2_abs_left,             /* RDP 5 order 19 rect2 absolute left */
   ied_fsfp_r5_o13_r2_abs_top,              /* RDP 5 order 19 rect2 absolute top */
   ied_fsfp_r5_o13_r2_abs_right,            /* RDP 5 order 19 rect2 absolute right */
   ied_fsfp_r5_o13_r2_abs_bottom,           /* RDP 5 order 19 rect2 absolute bottom */
   ied_fsfp_r5_o13_r2_delta_left,           /* RDP 5 order 19 rect2 delta left */
   ied_fsfp_r5_o13_r2_delta_top,            /* RDP 5 order 19 rect2 delta top */
   ied_fsfp_r5_o13_r2_delta_right,          /* RDP 5 order 19 rect2 delta right */
   ied_fsfp_r5_o13_r2_delta_bottom,         /* RDP 5 order 19 rect2 delta bottom */
   ied_fsfp_r5_o13_abs_start_x,             /* RDP 5 order 19 abs start X */
   ied_fsfp_r5_o13_abs_start_y,             /* RDP 5 order 19 abs start Y */
   ied_fsfp_r5_o13_delta_start_x,           /* RDP 5 order 19 delta start X */
   ied_fsfp_r5_o13_delta_start_y,           /* RDP 5 order 19 delta start Y */
   ied_fsfp_r5_o13_len_glyph,               /* RDP 5 order 19 length glyph */
   ied_fsfp_r5_o14_abs_start_x,             /* RDP 5 order 20/14H start X */
   ied_fsfp_r5_o14_abs_start_y,             /* RDP 5 order 20/14H start Y */
   ied_fsfp_r5_o14_delta_start_x,           /* RDP 5 order 20/14H delta start X */
   ied_fsfp_r5_o14_delta_start_y,           /* RDP 5 order 20/14H delta start Y */
   ied_fsfp_r5_o14_brop2,                   /* RDP 5 order 20/14H bRop2 */
   ied_fsfp_r5_o14_fillmode,                /* RDP 5 order 20/14H FillMode */
   ied_fsfp_r5_o14_brushcolor,              /* RDP 5 order 20/14H BrushColor */
   ied_fsfp_r5_o14_no_delta_entries,        /* nDeltaEntries - number of delta entries */
   ied_fsfp_r5_o14_len_delta,               /* length CodedDeltaList   */
   ied_fsfp_r5_o15_abs_start_x,             /* RDP 5 order 21/15H start X */
   ied_fsfp_r5_o15_abs_start_y,             /* RDP 5 order 21/15H start Y */
   ied_fsfp_r5_o15_delta_start_x,           /* RDP 5 order 21/15H delta start X */
   ied_fsfp_r5_o15_delta_start_y,           /* RDP 5 order 21/15H delta start Y */
   ied_fsfp_r5_o15_brop2,                   /* RDP 5 order 21/15H bRop2 */
   ied_fsfp_r5_o15_fillmode,                /* RDP 5 order 21/15H FillMode */
   ied_fsfp_r5_o15_col_backgr,              /* RDP 5 order 21/15H background colour */
   ied_fsfp_r5_o15_col_foregr,              /* RDP 5 order 21/15H foreground colour */
   ied_fsfp_r5_o15_brush_x,                 /* RDP 5 order 21/15H brush X */
   ied_fsfp_r5_o15_brush_y,                 /* RDP 5 order 21/15H brush Y */
   ied_fsfp_r5_o15_brush_style,             /* RDP 5 order 21/15H brush style */
   ied_fsfp_r5_o15_brush_hatch,             /* RDP 5 order 21/15H brush hatch */
   ied_fsfp_r5_o15_no_delta_entries,        /* nDeltaEntries - number of delta entries */
   ied_fsfp_r5_o15_len_delta,               /* length CodedDeltaList   */
   ied_fsfp_r5_o16_abs_start_x,             /* RDP 5 order 22/0X16 absolute start X */
   ied_fsfp_r5_o16_abs_start_y,             /* RDP 5 order 22/0X16 absolute start Y */
   ied_fsfp_r5_o16_delta_start_x,           /* RDP 5 order 22/0X16 delta start X */
   ied_fsfp_r5_o16_delta_start_y,           /* RDP 5 order 22/0X16 delta start Y */
   ied_fsfp_r5_o16_brop2,                   /* RDP 5 order 22/0X16 bRop2 */
   ied_fsfp_r5_o16_brushcacheentry,         /* RDP 5 order 22/0X16 BrushCacheEntry */
   ied_fsfp_r5_o16_pencolor,                /* RDP 5 order 22/0X16 PenColor */
   ied_fsfp_r5_o16_num_delta_entries,       /* RDP 5 order 22/0X16 number of points along the polyline path */
   ied_fsfp_r5_o16_len_delta_entries,       /* RDP 5 order 22/0X16 length of points along the polyline path */
   ied_fsfp_r5_o18_cache_id,                /* RDP 5 order 24 cache Id */
   ied_fsfp_r5_o18_fdrawing,                /* RDP 5 order 24/18H fDrawing */
   ied_fsfp_r5_o18_col_backgr,              /* RDP 5 order 24 background colour */
   ied_fsfp_r5_o18_col_foregr,              /* RDP 5 order 24 foreground colour */
   ied_fsfp_r5_o18_abs_left,                /* RDP 5 order 24 absolute left */
   ied_fsfp_r5_o18_abs_top,                 /* RDP 5 order 24 absolute top */
   ied_fsfp_r5_o18_abs_right,               /* RDP 5 order 24 absolute right */
   ied_fsfp_r5_o18_abs_bottom,              /* RDP 5 order 24 absolute bottom */
   ied_fsfp_r5_o18_delta_left,              /* RDP 5 order 24 delta left */
   ied_fsfp_r5_o18_delta_top,               /* RDP 5 order 24 delta top */
   ied_fsfp_r5_o18_delta_right,             /* RDP 5 order 24 delta right */
   ied_fsfp_r5_o18_delta_bottom,            /* RDP 5 order 24 delta bottom */
   ied_fsfp_r5_o18_r2_abs_left,             /* RDP 5 order 24 rect2 absolute left */
   ied_fsfp_r5_o18_r2_abs_top,              /* RDP 5 order 24 rect2 absolute top */
   ied_fsfp_r5_o18_r2_abs_right,            /* RDP 5 order 24 rect2 absolute right */
   ied_fsfp_r5_o18_r2_abs_bottom,           /* RDP 5 order 24 rect2 absolute bottom */
   ied_fsfp_r5_o18_r2_delta_left,           /* RDP 5 order 24 rect2 delta left */
   ied_fsfp_r5_o18_r2_delta_top,            /* RDP 5 order 24 rect2 delta top */
   ied_fsfp_r5_o18_r2_delta_right,          /* RDP 5 order 24 rect2 delta right */
   ied_fsfp_r5_o18_r2_delta_bottom,         /* RDP 5 order 24 rect2 delta bottom */
   ied_fsfp_r5_o18_abs_start_x,             /* RDP 5 order 24 abs start X */
   ied_fsfp_r5_o18_abs_start_y,             /* RDP 5 order 24 abs start Y */
   ied_fsfp_r5_o18_delta_start_x,           /* RDP 5 order 24 delta start X */
   ied_fsfp_r5_o18_delta_start_y,           /* RDP 5 order 24 delta start Y */
   ied_fsfp_r5_o18_len_glyph,               /* RDP 5 order 24 length glyph */
   ied_fsfp_r5_o19_abs_left,                /* RDP 5 order 25/0X19 absolute left */
   ied_fsfp_r5_o19_abs_top,                 /* RDP 5 order 25/0X19 absolute top */
   ied_fsfp_r5_o19_abs_right,               /* RDP 5 order 25/0X19 absolute right */
   ied_fsfp_r5_o19_abs_bottom,              /* RDP 5 order 25/0X19 absolute bottom */
   ied_fsfp_r5_o19_delta_left,              /* RDP 5 order 25/0X19 delta left */
   ied_fsfp_r5_o19_delta_top,               /* RDP 5 order 25/0X19 delta top */
   ied_fsfp_r5_o19_delta_right,             /* RDP 5 order 25/0X19 delta right */
   ied_fsfp_r5_o19_delta_bottom,            /* RDP 5 order 25/0X19 delta bottom */
   ied_fsfp_r5_o19_brop2,                   /* RDP 5 order 25/0X19 bRop2 */
   ied_fsfp_r5_o19_fillmode,                /* RDP 5 order 25/0X19 FillMode */
   ied_fsfp_r5_o19_color,                   /* RDP 5 order 25/0X19 foreground color */
   ied_fsfp_r5_o1a_abs_left,                /* RDP 5 order 26/0X1A absolute left */
   ied_fsfp_r5_o1a_abs_top,                 /* RDP 5 order 26/0X1A absolute top */
   ied_fsfp_r5_o1a_abs_right,               /* RDP 5 order 26/0X1A absolute right */
   ied_fsfp_r5_o1a_abs_bottom,              /* RDP 5 order 26/0X1A absolute bottom */
   ied_fsfp_r5_o1a_delta_left,              /* RDP 5 order 26/0X1A delta left */
   ied_fsfp_r5_o1a_delta_top,               /* RDP 5 order 26/0X1A delta top */
   ied_fsfp_r5_o1a_delta_right,             /* RDP 5 order 26/0X1A delta right */
   ied_fsfp_r5_o1a_delta_bottom,            /* RDP 5 order 26/0X1A delta bottom */
   ied_fsfp_r5_o1a_brop2,                   /* RDP 5 order 26/0X1A bRop2 */
   ied_fsfp_r5_o1a_fillmode,                /* RDP 5 order 26/0X1A FillMode */
   ied_fsfp_r5_o1a_col_backgr,              /* RDP 5 order 26/0X1A background colour */
   ied_fsfp_r5_o1a_col_foregr,              /* RDP 5 order 26/0X1A foreground colour */
   ied_fsfp_r5_o1a_brush_x,                 /* RDP 5 order 26/0X1A brush X */
   ied_fsfp_r5_o1a_brush_y,                 /* RDP 5 order 26/0X1A brush Y */
   ied_fsfp_r5_o1a_brush_style,             /* RDP 5 order 26/0X1A brush style */
   ied_fsfp_r5_o1a_brush_hatch,             /* RDP 5 order 26/0X1A brush hatch */
   ied_fsfp_r5_o1b_cache_id,                /* RDP 5 order 27/0X1B cache Id */
   ied_fsfp_r5_o1b_flaccel,                 /* RDP 5 order 27/0X1B flAccel */
   ied_fsfp_r5_o1b_ulcharinc,               /* RDP 5 order 27/0X1B ulCharInc */
   ied_fsfp_r5_o1b_fopredundant,            /* RDP 5 order 27/0X1B fOpRedundant */
   ied_fsfp_r5_o1b_col_backgr,              /* RDP 5 order 27/0X1B background colour */
   ied_fsfp_r5_o1b_col_foregr,              /* RDP 5 order 27/0X1B foreground colour */
   ied_fsfp_r5_o1b_abs_left,                /* RDP 5 order 27/0X1B absolute left */
   ied_fsfp_r5_o1b_abs_top,                 /* RDP 5 order 27/0X1B absolute top */
   ied_fsfp_r5_o1b_abs_right,               /* RDP 5 order 27/0X1B absolute right */
   ied_fsfp_r5_o1b_abs_bottom,              /* RDP 5 order 27/0X1B absolute bottom */
   ied_fsfp_r5_o1b_delta_left,              /* RDP 5 order 27/0X1B delta left */
   ied_fsfp_r5_o1b_delta_top,               /* RDP 5 order 27/0X1B delta top */
   ied_fsfp_r5_o1b_delta_right,             /* RDP 5 order 27/0X1B delta right */
   ied_fsfp_r5_o1b_delta_bottom,            /* RDP 5 order 27/0X1B delta bottom */
   ied_fsfp_r5_o1b_r2_left,                 /* RDP 5 order 27/0X1B rect2 left */
   ied_fsfp_r5_o1b_r2_top,                  /* RDP 5 order 27/0X1B rect2 top */
   ied_fsfp_r5_o1b_r2_right,                /* RDP 5 order 27/0X1B rect2 right */
   ied_fsfp_r5_o1b_r2_bottom,               /* RDP 5 order 27/0X1B rect2 bottom */
   ied_fsfp_r5_o1b_brush_x,                 /* RDP 5 order 26/0X1A brush X */
   ied_fsfp_r5_o1b_brush_y,                 /* RDP 5 order 27/0X1B brush Y */
   ied_fsfp_r5_o1b_brush_style,             /* RDP 5 order 27/0X1B brush style */
   ied_fsfp_r5_o1b_brush_hatch,             /* RDP 5 order 27/0X1B brush hatch */
   ied_fsfp_r5_o1b_abs_start_x,             /* RDP 5 order 27/0X1B start X */
   ied_fsfp_r5_o1b_abs_start_y,             /* RDP 5 order 24 start Y */
   ied_fsfp_r5_o1b_delta_start_x,           /* RDP 5 order 27/0X1B delta start X */
   ied_fsfp_r5_o1b_delta_start_y,           /* RDP 5 order 27/0X1B delta start Y */
   ied_fsfp_r5_o1b_len_glyph,               /* RDP 5 order 27/0X1B length glyph */
   ied_fsfp_r5_pdu_ord_len,                 /* RDP 5 PDU order length  */
   ied_fsfp_r5_pdu_sec_data,                /* RDP 5 PDU Secondary Drawing Orders data */
   ied_fsfp_r5_po_new_buf_ind,              /* RDP 5 PDU new order, buffer index */
   ied_fsfp_r5_po_new_buf_param,            /* RDP 5 PDU new order, buffer param */
   ied_fsfp_r5_po_new_buf_no_free,          /* RDP 5 PDU new order, number of buffers to free */
   ied_fsfp_r5_po_new_buf_free_ind,         /* RDP 5 PDU new order, index of buffer to free */
   ied_fsfp_as_sbf_bm_flags,                /* RDP order ALTSEC Stream Bitmap First BitmapFlags */
   ied_fsfp_as_sbf_bm_bpp,                  /* RDP order ALTSEC Stream Bitmap First BitmapBpp */
   ied_fsfp_as_sbf_bm_type,                 /* RDP order ALTSEC Stream Bitmap First BitmapType */
   ied_fsfp_as_sbf_bm_width,                /* RDP order ALTSEC Stream Bitmap First BitmapWidth */
   ied_fsfp_as_sbf_bm_height,               /* RDP order ALTSEC Stream Bitmap First BitmapHeight */
   ied_fsfp_as_sbf_bm_size,                 /* RDP order ALTSEC Stream Bitmap First BitmapSize */
   ied_fsfp_as_sbf_block_size,              /* RDP order ALTSEC Stream Bitmap First BitmapBlockSize */
   ied_fsfp_as_sbf_data,                    /* RDP order ALTSEC Stream Bitmap First data */
   ied_fsfp_as_sbn_bm_flags,                /* RDP order ALTSEC Stream Bitmap Next BitmapFlags */
   ied_fsfp_as_sbn_bm_type,                 /* RDP order ALTSEC Stream Bitmap Next BitmapType */
   ied_fsfp_as_sbn_block_size,              /* RDP order ALTSEC Stream Bitmap Next BitmapBlockSize */
   ied_fsfp_as_sbn_data,                    /* RDP order ALTSEC Stream Bitmap Next data */
   ied_fsfp_as_cnb_bm_bpp,                  /* RDP order ALTSEC Create NineGrid Bitmap BitmapBpp */
   ied_fsfp_as_cnb_bm_id,                   /* RDP order ALTSEC Create NineGrid Bitmap BitmapId */
   ied_fsfp_as_cnb_cx,                      /* RDP order ALTSEC Create NineGrid Bitmap cx */
   ied_fsfp_as_cnb_cy,                      /* RDP order ALTSEC Create NineGrid Bitmap cy */
   ied_fsfp_as_cnb_fl_flags,                /* RDP order ALTSEC Create NineGrid Bitmap flFlags */
   ied_fsfp_as_cnb_left_width,              /* RDP order ALTSEC Create NineGrid Bitmap ulLeftWidth */
   ied_fsfp_as_cnb_right_width,             /* RDP order ALTSEC Create NineGrid Bitmap ulRightWidth */
   ied_fsfp_as_cnb_top_height,              /* RDP order ALTSEC Create NineGrid Bitmap ulTopHeight */
   ied_fsfp_as_cnb_bottom_height,           /* RDP order ALTSEC Create NineGrid Bitmap ulBottomHeight */
   ied_fsfp_as_cnb_cr_transparent,          /* RDP order ALTSEC Create NineGrid Bitmap crTransparent */
   ied_fsfp_as_frm_action,                  /* RDP order ALTSEC frame marker action */
   ied_fsfp_send_from_server,               /* send data to client     */
   ied_fsfp_end_com,                        /* end of communication    */
   ied_fsfp_no_session,                     /* no more session         */
#ifdef XYZ1
                   ied_fcfp_int_lit_e,      /* int little endian       */
                    ied_frclnv_usxx,        /* userid invalid - not fo */
#endif
                    ied_frclnvx_pasxxord };  /* password invalid        */


/* receive block from server                                           */
enum ied_frse_bl {
   ied_frse_start,                          /* start of communication  */
   ied_frse_sta_02,                         /* start second field      */
   ied_frse_rec_04,                         /* receive block 4         */
   ied_frse_r04_asn1_1,                     /* block 4 ASN-1 field 1   */
   ied_frse_r04_asn1_2,                     /* block 4 ASN-1 field 2   */
   ied_frse_r04_asn1_3,                     /* block 4 ASN-1 field 3   */
   ied_frse_r04_asn1_4,                     /* block 4 ASN-1 field 4   */
   ied_frse_r04_sel_t,                      /* block 4 selection tag   */
   ied_frse_r04_sel_l,                      /* block 4 selection length */
   ied_frse_r04_rdp_v,                      /* block 4 RDP version     */
   ied_frse_r04_ch_disp,                    /* block 4 display channel */
   ied_frse_r04_vch_no,                     /* block 4 no virtual channels */
   ied_frse_r04_vch_var,                    /* block 4 variable channel */
   ied_frse_r04_vch_del,                    /* block 4 vch delemiter   */
   ied_frse_r04_keytype,                    /* block 4 security keytype */
   ied_frse_r04_sec_level,                  /* block 4 security level  */
   ied_frse_r04_l_serv_rand,                /* block 4 length server random */
   ied_frse_r04_l_pub_par,                  /* block 4 length public parameters */
   ied_frse_r04_d_serv_rand,                /* block 4 data server random */
   ied_frse_r04_type_pub_par,               /* block 4 type public parameters */
   ied_frse_r04_ppdir_tag,                  /* block 4 public parms direct tag */
   ied_frse_r04_ppdir_len,                  /* block 4 public parms direct lenght */
   ied_frse_r04_d_pub_par,                  /* block 4 data public parameters */
   ied_frse_rec_07,                         /* receive block 7         */
   ied_frse_cjresp_rec,                     /* receive block channel join response */
   ied_frse_lic_pr_1_rec,                   /* receive block licence protocol */
   ied_frse_lic_pr_type,                    /* licencing block to check */
   ied_frse_lic_pr_req_rand,                /* server license request random */
   ied_frse_lic_pr_req_cert,                /* server license request certificate */
   ied_frse_lic_pr_req_scopelist,           /* parse the scopelist of server license request packet */
   ied_frse_lic_pr_chll,                    /* platform challenge      */
   ied_frse_lic_pr_new_license,             /* new license or upgrade license */
   ied_frse_lic_pr_lic_error_mes1,          /* Licensing Error Message */
   ied_frse_lic_pr_lic_error_mes2,          /* Licensing Error Message */
   ied_frse_act_pdu_rec,                    /* receive block active PDU */
   ied_frse_actpdu_parse_shareid,           /* parse shareid           */
   ied_frse_actpdu_sdl,                     /* get source descriptor length */
   ied_frse_actpdu_len_cap,                 /* get length capabilities */
   ied_frse_actpdu_no_cap,                  /* get number capabilities */
   ied_frse_actpdu_cap_ind,                 /* get capabilities index  */
   ied_frse_actpdu_cap_len,                 /* get capabilities length */
   ied_frse_actpdu_trail,                   /* trailer of act PDU      */
   ied_frse_deaap_rec,                      /* Deactivate All PDU Data */
   ied_frse_deactivate_all,                 /* deactivate all PDU      */
   ied_frse_error_bl_01,                    /* receive error block 01  */
   ied_frse_error_bl_02,                    /* receive error block 02  */
   ied_frse_any_pdu_rec,                    /* receive any PDU type    */
   ied_frse_rdp4_vch_ulen,                  /* virtual channel uncompressed data length */
   ied_frse_r5_pdu_ord_buf,                 /* RDP 5 PDU order buffer  */
   ied_frse_r5_pdu_primord,                 /* RDP 5 PDU primary order */
   ied_frse_r5_pdu_apply_order,             /* RDP 5 PDU apply order   */
   ied_frse_r5_ign_single_unic,             /* ignore one single Unicode character */
   ied_frse_r5_o01_brush_data,              /* RDP 5 order 1 brush data */
   ied_frse_r5_o0e_brush_data,              /* RDP 5 order 14 brush data */
   ied_frse_r5_o10_brush_data,              /* RDP 5 order 16 brush data */
   ied_frse_r5_o15_brush_data,              /* RDP 5 order 21/15H brush data */
   ied_frse_r5_o1a_brush_data,              /* RDP 5 order 26/0X1A brush data */
   ied_frse_r5_o1b_brush_data,              /* RDP 5 order 27/0X1B brush data */
   ied_frse_xyz_end_pdu,                    /* end of PDU              */
/* 18.06.05 KB UUUU */
   ied_frse_xyz_end_order,                  /* end of order            */
// ied_frse_r04_rdp_v,                      /* block 4 RDP version     */
                    ied_ad_inv_user_x,        /* userid invalid - not fo */
                    ied_ad_inv_password_x };  /* password invalid        */

struct dsd_progaddr_1 {                     /* program addresses       */
   BOOL (* amc_decomp_01_x) ( struct dsd_call_rdpclient_1 *, struct dsd_cache_1 *, char *, int );
   amd_rop2_x_x amrc_rop2_x_x[ 16 ];        /* ROP2 functions          */
};



struct dsd_offscr_b_1 {                     /* offscreen buffer        */
   unsigned short int usc_dim_x;            /* dimension x pixels      */
   unsigned short int usc_dim_y;            /* dimension y pixels      */
   void *     ac_offscr_buffer;             /* offscreen buffer        */
};

struct dsd_bmp_cache_b_1 {                  /* Bitmap Cache Buffer     */
   unsigned short int usc_dim_x;            /* dimension x pixels      */
   unsigned short int usc_dim_y;            /* dimension y pixels      */
   int        imc_no_pixel;                 /* number of pixel in buffer */
   void *     ac_bmp_cache_buffer;          /* Bitmap Cache Buffer     */
};

struct dsd_raord_scr {                      /* RA order screen         */
   struct dsd_raord_scr *adsc_next;         /* next in chain           */
   int        imc_left;                     /* coordinate left         */
   int        imc_top;                      /* coordinate top          */
   int        imc_right;                    /* coordinate right        */
   int        imc_bottom;                   /* coordinate bottom       */
};


//#define D_LOINFO_COMPR_ENA   128            /* compression enabled     */
//#define D_LOINFO_COMPR_LDIC  512            /* use large dictionary    */
#define D_LOINFO_COMPR_ENA   0X0080         /* compression enabled     */
#define D_LOINFO_COMPR_LDIC  0X0200         /* use large dictionary    */
#define D_LOINFO_COMPR_BULK  0X0400         /* use bulk compression    */

struct dsd_rdp_vc_1 {                       /* RDP virtual channel     */
   char       byrc_name[8];                 /* name of channel         */
   int        imc_flags;                    /* flags                   */
   unsigned short int usc_vch_no;           /* virtual channel no com  */
   unsigned short int usc_hob_vch;          /* virtual channel HOB special */
};



struct dsd_rdp_client_1 {                   /* RDP client part         */
   struct dsd_rdp_co_client dsc_rdp_co_1;  /* RDP communication      */
   enum ied_fsfp_bl iec_fsfp_bl;            /* field position          */
   enum ied_frse_bl iec_frse_bl;            /* receive block from server */
   char *     achc_cert_key;                /* RSA key                 */
   int        imc_len_cert_key;             /* length RSA key          */
// char       chrc_cert_exp[4];             /* RSA exponent            */
   char       chrc_cert_exp[3];             /* RSA exponent            */
   int        imc_pos_inp_frame;            /* position in input frame */
   int        imc_no_cmd_frame;             /* number of commands in frame */
   int        imc_order_flags;              /* order flags of command  */
   union {
     int      imc_prot_1;                   /* for protocol decoding   */
     int      imc_prot_akku;                /* akkumulator of protocol decoding */
   };
   union {
     int      imc_prot_2;                   /* for protocol decoding   */
     int      imc_prot_count_in;            /* count input of protocol decoding */
   };
   union {
     int      imc_prot_3;                   /* for protocol decoding   */
     int      imc_prot_aux1;                /* auxiliary one of protocol decoding */
   };
   union {
     int      imc_prot_4;                   /* for protocol decoding   */
     int      imc_prot_save1;               /* save one of protocol decoding */
   };
   union {
     int      imc_prot_5;                   /* for protocol decoding   */
     int      imc_prot_pdu_type;            /* PDU type                */
   };
   int        imc_prot_6;                   /* for protocol decoding   */
   int        imc_prot_7;                   /* for protocol decoding   */
   int        imc_prot_8;                   /* for protocol decoding   */
   int        imc_prot_chno;                /* for protocol decoding   */
   int        imc_prot_prfl;                /* primary order flags     */
   int        imc_cmp_dim_x;                /* compare dimension x pixels */
   int        imc_cmp_dim_y;                /* compare dimension y pixels */
   void *     ac_paint_buffer;              /* buffer to paint to      */
   char       *axxc_pibu_line;              /* pixel buffer line start */
   char       *axxc_pibu_cur;               /* pixel buffer current    */
   char       *axxc_pibu_end;               /* pixel buffer end        */
   BOOL       boc_fill9;                    /* last command was Fill 9 */
   unsigned short int xxc_mix;              /* Mix Value               */
/* initialize parameters at demand active PDU */
   int        imc_bounds_left;              /* bounds coordinates      */
   int        imc_bounds_top;               /* bounds coordinates      */
   int        imc_bounds_right;             /* bounds coordinates      */
   int        imc_bounds_bottom;            /* bounds coordinates      */
   short int  isrc_bitmap_data[ DEF_UPDATE_BITMAP_CO ];  /* number of short update bitmap */
/* 10.08.09 KB - is really needed ??? */
   unsigned char ucc_order_flags_1;         /* send order flags        */
   char *     achc_prot_1;                  /* for protocol decoding   */
// char *     achc_prot_2;                  /* for protocol decoding   */
   char *     achc_prot_2;                  /* for protocol decoding   */
   char *     achc_prot_3;                  /* for protocol decoding   */
#ifdef B060821
   char       chrc_prot_1[ 128 ];           /* for protocol decoding   */
#endif
   char       chrc_prot_1[ 4096 ];          /* for protocol decoding   */
//*IF DEF D$RDP$HOOK;
//*CEND;
   union {
     char     chrc_prot_2[ 128 ];           /* for protocol decoding   */
     short int isrc_buf_param[ 3 ];         /* for new RDP 5.1 order   */
     struct dsd_awcs_stream_bitmap_first dsc_asbf;  /* command Stream Bitmap First */
     struct dsd_awcs_stream_bitmap_next dsc_asbn;  /* command Stream Bitmap Next */
     struct dsd_awcs_create_ninegrid_bitmap dsc_acnb;  /* command Create NineGrid Bitmap */
     struct dsd_awcs_frame_marker dsc_afrm;  /* command frame marker   */
   };
   unsigned short int usc_prot_buf_ind;     /* new order buffer index  */
   char       chc_prot_rt02;                /* for protocol decoding   */
   char       chc_prot_rt03;                /* for protocol decoding   */
   char       chc_prot_r5_first;            /* for protocol decoding   */
   char       chc_prot_r5_pdu_type;         /* for protocol decoding   */
   char       chc_prot_r5_pdu_cofl;         /* for protocol decoding   */
   char       chc_prot_r5_pdu_ord_fl;       /* for protocol decoding   */
   unsigned char ucc_prot_r5_pdu_ord_prim;  /* primary order number    */
   char       chc_prot_r5_pdu_ord_bofl;     /* bounds flags            */
   char       chc_prot_r5_pdu_ord_type;     /* RDP 5 PDU order type    */
   unsigned char ucc_prot_r5_pdu_ord_width;  /* RDP 5 PDU order width  */
   unsigned char ucc_prot_r5_pdu_ord_height;  /* RDP 5 PDU order height */
// char       chc_prot_r5_pdu_ord_cache_ind;  /* RDP 5 PDU cache index */
/* following field no more needed? UUUU 24.08.06 KB */
   struct dsd_cache_1 *adsc_prot_cache_1;   /* cache of order          */
   unsigned int umc_vch_ulen;               /* virtual channel length uncompressed */
   char       chrc_vch_segfl[2];            /* virtual channel segmentation flags */
   int        imc_count_order;              /* count orders            */
#ifdef TRACEHL_BMP_060827
   int        imc_count_mbp;                /* count bitmaps           */
#endif
   int        imc_len_temp;                 /* length temporary buffer */
   void *     ac_temp_buffer;               /* temporary buffer        */
};


struct dsd_cache_1 {                        /* cache for pixels        */
   struct dsd_cache_1 *adsc_next;           /* next in chain           */
   int        inc_id;                       /* cache id                */
   int        inc_ind;                      /* cache index             */
};

struct dsd_pix_buf_1 {                      /* pixel buffer            */
   struct dsd_pix_buf_1 *adsc_next;         /* next in chain           */
   unsigned short int usc_ind;              /* index of pixel buffer   */
   unsigned short int usc_width;            /* width of buffer         */
   unsigned short int usc_height;           /* height of buffer        */
};

struct dsd_rdpa_f {                         /* rdp accelerator frame   */
// ied_frse_bl iec_frse_bl;                 /* receive block from server */
// ied_frcl_bl iec_frcl_bl;                 /* receive block from client */
   struct dsd_rdp_client_1 dsc_rdp_cl_1;    /* rdp client part         */
   char       chrl_server_random[32];       /* specify server-random   */
   void *     ac_screen_buffer;             /* screen buffer           */
   struct dsd_cache_1 *adsc_cache_1;        /* chain of caches         */
   struct dsd_stor_sdh_1 dsc_stor_sdh_1;    /* storage management      */
#ifdef HELP_DEBUG
   BOOL       boc_help_debug_1;             /* stop debugger           */
#endif
#ifdef TEMPSCR1
   BOOL       boc_temp_scr_1;               /* screen buffer send      */
#endif
#ifdef TRACEHL_CL2SE_COM1                   /* 21.09.06 KB - client to server commands */
   int        inc_count_frse;               /* count from server       */
#endif
};

struct dsd_output_area_1 {                  /* output of subroutine    */
   char       *achc_lower;                     /* lower addr output area  */
   char       *achc_upper;                     /* higher addr output area */
   struct dsd_raord_scr *adsc_raord_scr;    /* chain of ra orders      */
   struct dsd_gather_i_1 **aadsc_gai1_out_to_server;  /* output data to server */
   struct dsd_se_co1 **aadsc_se_co1_chain;  /* chain commands from server */
};

static const unsigned char ucrs_crypt_ini_01[] = {  /* initialize crypto */
   0X41
};

static const unsigned char ucrs_crypt_ini_02[] = {  /* initialize crypto */
   0X42, 0X42
};

static const unsigned char ucrs_crypt_ini_03[] = {  /* initialize crypto */
   0X43, 0X43, 0X43
};

static const unsigned char ucrs_crypt_ini_04[] = {  /* initialize crypto */
   0X58
};

static const unsigned char ucrs_crypt_ini_05[] = {  /* initialize crypto */
   0X59, 0X59
};

static const unsigned char ucrs_crypt_ini_06[] = {  /* initialize crypto */
   0X5A, 0X5A, 0X5A
};

static const unsigned char ucrs_secl_01[] = {  /* send to client - first block */
   0X03, 0X00, 0X00, 0X0B, 0X06, 0XD0, 0X00, 0X00, 0X12, 0X34, 0X00
};

static const unsigned char ucrs_secl_02[] = {  /* send to client - first block */
   0X03, 0X00, 0X00, 0X13,
   0X0E, 0XD0, 0X00, 0X00, 0X12, 0X34, 0X00,
   0X02, 0X01, 0X08, 0X00, 0X00, 0X00, 0X00, 0X00
};

static const unsigned char ucrs_sese_01[] = {  /* send to server - first bl */
   0X03, 0X00, 0X00, 0X13,
   0X0E, 0XE0, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X01, 0X00, 0X08, 0X00, 0X00, 0X00, 0X00, 0X00
};


static const unsigned char ucrs_rec_se_01_cmp1[] = {  /* compare received from server first block */
   0XD0, 0X00, 0X00, 0X12, 0X34, 0X00
};

static const unsigned char ucrs_x224_mcs[] = {  /* X224 Data plus MCS  */
   0X02, 0XF0, 0X80, 0X7F, 0X65
};

static const unsigned char ucrs_x224_r05_errect[] = {  /* X224 Data MCS Errect Domain Request */
   0X03, 0X00, 0X00, 0X0C, 0X02, 0XF0, 0X80, 0X04
};

static const unsigned char ucrs_x224_errect_domain_pdu[] = {  /* X224 Data MCS Errect Domain Request */
   0X03, 0X00, 0X00, 0X0C, 0X02, 0XF0, 0X80, 0X04,
   0X01, 0X00, 0X01, 0X00,
   0X03, 0X00, 0X00, 0X08, 0X02, 0XF0, 0X80, 0X28
};

static const unsigned char ucrs_x224_r06_attuser[] = {  /* X224 Data MCS Attach User Request */
   0X03, 0X00, 0X00, 0X08, 0X02, 0XF0, 0X80, 0X28
};

static const unsigned char ucrs_x224_r07_aurep[] = {  /* X224 Data MCS Attach User Reply */
   0X03, 0X00, 0X00, 0X0B, 0X02, 0XF0, 0X80, 0X2E
};

static const unsigned char ucrs_x224_cjreq_1[] = {  /* X224 Data MCS Channel Join Request */
   0X03, 0X00, 0X00, 0X0C, 0X02, 0XF0, 0X80, 0X38
};

static const unsigned char ucrs_x224_cjresp_1[] = {  /* X224 Data MCS Channel Join Response */
   0X03, 0X00, 0X00, 0X0F, 0X02, 0XF0, 0X80, 0X3E
};

static const unsigned char ucrs_lic_err_hash[] = {
  DEF_CONST_RDP_03, 0X00, 0X00, 0X24, 0X20, 0XF0, 0X80, 0X64,
  0XFF, 0XFF, 0XFF, 0XFF, 0X70, 0X14, 0X80, 0X00, 0X00, 0X00,
  0XFF, 0X03, 0X10, 0X00, 0X03, 0X00, 0X00, 0X00,
  0X01, 0X00, 0X00, 0X00, 0X04, 0X00, 0X00, 0X00
};

static const unsigned char ucrs_lic_bef_cert[] = {
  0X08, 0X00, 0X00, 0X00,  /* length of following string, within Product Info */
  0X41, 0X00, 0X30, 0X00, 0X32, 0X00, 0X00, 0X00,  /* "A02", MS-RDPELE 2.2.2.1.1 */
  0X0D, 0X00, 0X04, 0X00,  /* Key Exchange List: blobtype and length */
  0X01, 0X00, 0X00, 0X00,  /* called KEY_EXCHANGE_ALG_RSA in MS-RDPELE 2.2.2.1 */
  0X03, 0X00               /* Blobtype of Server Certificate */
};

static const unsigned char ucrs_ks_01[] = {
   0XD1, 0X26, 0X9E
};

static const unsigned char ucrs_x224_p01[] = {  /* X224 Data part 01   */
   0X02, 0XF0, 0X80
};

static const unsigned char ucrs_x224_p02[] = {  /* X224 record 2 part 02 */
   0X04, 0X01, 0X01, 0X04, 0X01,
   0X01, 0X01, 0X01, 0XFF, 0X30, 0X19, 0X02, 0X01,
   0X22, 0X02, 0X01, 0X02, 0X02, 0X01, 0X00, 0X02,
   0X01, 0X01, 0X02, 0X01, 0X00, 0X02, 0X01, 0X01,
   0X02, 0X02, 0XFF, 0XFF, 0X02, 0X01, 0X02, 0X30,
   0X19, 0X02, 0X01, 0X01, 0X02, 0X01, 0X01, 0X02,
   0X01, 0X01, 0X02, 0X01, 0X01, 0X02, 0X01, 0X00,
   0X02, 0X01, 0X01, 0X02, 0X02, 0X04, 0X20, 0X02,
   0X01, 0X02, 0X30, 0X1C, 0X02, 0X02, 0XFF, 0XFF,
   0X02, 0X02, 0XFC, 0X17, 0X02, 0X02, 0XFF, 0XFF,
   0X02, 0X01, 0X01, 0X02, 0X01, 0X00, 0X02, 0X01,
   0X01, 0X02, 0X02, 0XFF, 0XFF, 0X02, 0X01, 0X02
};

static const unsigned char ucrs_x224_p03[] = {  /* X224 record 2 part 03 */
   0X00, 0X05, 0X00, 0X14, 0X7C, 0X00, 0X01
};

static const unsigned char ucrs_x224_p04[] = {  /* X224 record 2 part 04 */
   0X00, 0X08, 0X00, 0X10, 0X00, 0X01, 0XC0, 0X00,
   0X44, 0X75, 0X63, 0X61
};

static const unsigned char ucrs_x224_p05[] = {  /* X224 record 2 part 05 */
   0X01, 0XC0, 0XD8, 0X00, 0X04, 0X00, 0X08, 0X00
};

/* Bitmap Size Tag Present + SAS Sequence                              */
static const unsigned char ucrs_x224_p06[] = {  /* X224 record 2 part 06 */
   0X01, 0XCA, 0X03, 0XAA,
};

static const unsigned char ucrs_x224_buildno[] = {  /* X224 record 2 build number */
#ifdef OLD01
   0XCE, 0X0E, 0X00, 0X00
#else
   0X93, 0X08, 0X00, 0X00
#endif
};

static const unsigned char ucrs_logon_info_c1[] = {  /* Constant Logon Info */
   0X07, 0X04, 0X07, 0X04
};

// JB: turned of primitives.
// This structure is only used in the client! The hook directly sends
// the capabilities.
static const unsigned char ucrs_capabilities_resp[] = {  /* X224 send capabilities */
   0X06, 0X00,
   0XDE, 0X01,                              /* length of combined capabilities */
   0X4D, 0X53, 0X54, 0X53, 0X43, 0X00,      /* MSTSC                   */
   0X13, 0X00,                              /* number of capabilities  */
   0X00, 0X00,                              /* padding                 */
   CAPSTYPE_GENERAL, 0X00,
   0X18, 0X00,                              /* length                  */
   0X01, 0X00, 0X03, 0X00, 0X00, 0X02, 0X00, 0X00,
   0X00, 0X00, 0X1D, 0X04, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00,
   CAPSTYPE_BITMAP, 0X00,
   0X1C, 0X00,                              /* length                  */
   0X10, 0X00, 0X01, 0X00, 0X01, 0X00, 0X01, 0X00,
   0X80, 0X02, 0XE0, 0X01, 0X00, 0X00, 0X01, 0X00,
   0X01, 0X00, 0X00, 0X08, 0X01, 0X00, 0X00, 0X00,
   CAPSTYPE_ORDER, 0X00,
   0X58, 0X00,                              /* length                  */
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X01, 0X00, 0X14, 0X00,
   0X00, 0X00, 0X01, 0X00, 0X00, 0X00, 0X6A, 0X00, // 0x40: only solid and pattern brushes
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, // DstBlt,      PatBlt,            ScrBlt,          MemBlt,     Mem3Blt,   ignored,   ignored,  DrawNineGrid
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, // LineTo,      MultiDrawNineGrid, ignored,         SaveBitmap, ignored,   ignored,   ignored,  MultiDstBlt
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, // MultiPatBlt, MultiScrBlt,       MultiOpaqueRect, FastIndex,  PolygonSC, PolygonCB, Polyline, ignored
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, // FastGlyph,   EllipseSC,         EllipseCB,       GlyphIndex, ignored,   ignored,   ignored,  ignored
   0XA1, 0X06, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, //
   0X00, 0X84, 0X03, 0X00, 0X00, 0X00, 0X00, 0X00,
   0XE4, 0X04, 0X00, 0X00,
   CAPSTYPE_BITMAPCACHE_REV2, 0X00,
   0X28, 0X00,                              /* length                  */
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00,
   CAPSTYPE_COLORCACHE, 0X00,               /* 10 = 0X0A               */
   0X08, 0X00,                              /* length                  */
   0X06, 0X00, 0X00, 0X00,
   CAPSTYPE_ACTIVATION, 0X00,               /* 7 = 0X07                */
   0X0C, 0X00,                              /* length                  */
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   CAPSTYPE_CONTROL, 0X00,                  /* 5 = 0X05                */
   0X0C, 0X00,                              /* length                  */
   0X00, 0X00, 0X00, 0X00, 0X02, 0X00, 0X02, 0X00,
   CAPSTYPE_POINTER, 0X00,                  /* 8 = 0X08                */
   0X0A, 0X00,                              /* length                  */
   0X01, 0X00, 0X14, 0X00, 0X15, 0X00,
   CAPSTYPE_SHARE, 0X00,                    /* 9 = 0X09                */
   0X08, 0X00,                              /* length                  */
   0X00, 0X00, 0X00, 0X00,
   CAPSTYPE_INPUT, 0X00,                    /* 13 = 0X0D               */
   0X58, 0X00,                              /* length                  */
   0X91, 0X00, 0X20, 0X00, 0X07, 0X04, 0X00, 0X00,
   0X04, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X0C, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00,
   CAPSTYPE_SOUND, 0X00,                    /* 12 = 0X0C               */
   0X08, 0X00,                              /* length                  */
   0X01, 0X00, 0X00, 0X00,
   CAPSTYPE_FONT, 0X00,                     /* 14 = 0X0E               */
   0X08, 0X00,                              /* length                  */
   0X00, 0X00, 0X00, 0X00,
   CAPSTYPE_GLYPHCACHE, 0X00,               /* 16 = 0X10               */
   0X34, 0X00,                              /* length                  */
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   CAPSTYPE_BRUSH, 0X00,                    /* 15 = 0X0F               */
   0X08, 0X00,                              /* length                  */
   0X00, 0X00, 0X00, 0X00,
   CAPSTYPE_OFFSCREENCACHE, 0X00,           /* 17 = 0X11               */
   0X0C, 0X00,                              /* length                  */
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   CAPSTYPE_VIRTUALCHANNEL, 0X00,           /* 20 = 0X14               */
   0X08, 0X00,                              /* length                  */
   0X01, 0X00, 0X00, 0X00,
   CAPSTYPE_DRAWNINEGRIDCACHE, 0X00,        /* 21 = 0X15               */
   0X0C, 0X00,                              /* length                  */
   0X00, 0X00, 0X00, 0X00, 0X00, 0X0A, 0X00, 0X01,
   CAPSTYPE_DRAWGDIPLUS, 0X00,              /* 22 = 0X16               */
   0X28, 0X00,                              /* length                  */
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00,
   CAPSETTYPE_MULTIFRAGMENTUPDATE, 0X00,    /* 26 = 0X1A               */
   0X08, 0X00,                              /* length                  */
   0X00, 0X00, 0X00, 0X00
};

static const unsigned char ucrs_share_id[] = {  /* shareId             */
   0XEA, 0X03, 0X01, 0X00
};

static const unsigned char ucrs_pdu_header_01[] = {
  DEF_CONST_RDP_03, 0, 0, 0XFF,
  0X02, 0XF0, 0X80, 0X64, 0XFF, 0XFF, 0XFF, 0XFF,
  0X70, 0XFF, 0X08, 0X00, 0X00, 0X00
};

static const unsigned char ucrs_ts_synchronize_pdu[] = {
   0X00, 0X01,
   /* PDUTYPE2_SYNCHRONIZE (31)                                        */
   0X08, 0X00, 0X1F, 0X00, 0X00, 0X00, 0X01, 0X00,
   0XEA, 0X03
};

static const unsigned char ucrs_ctrl_pdu_data_cooperate[] = {  /* controlPduData */
   /* CTRLACTION_COOPERATE 0x0004                                      */
   0X00, 0X01,
   /* PDUTYPE2_CONTROL (20).                                           */
   0X0C, 0X00, 0X14, 0X00, 0X00, 0X00, 0X04, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00
};

static const unsigned char ucrs_ctrl_pdu_data_request_control[] = {  /* controlPduData */
   /* CTRLACTION_REQUEST_CONTROL (0x0001)                              */
   0X00, 0X01,
   /* PDUTYPE2_CONTROL (20).                                           */
   0X0C, 0X00, 0X14, 0X00, 0X00, 0X00, 0X01, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00
};

static const unsigned char ucrs_font_list_pdu[] = {
   0X00, 0X01,
   /* PDUTYPE2_FONTLIST (39).                                          */
   0X00, 0X00, 0X27, 0X00, 0X00, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X03, 0X00, 0X32, 0X00
};

static const unsigned char ucrs_x224_encry[] = {  /* X224 record 2 encryption */
   0X01, 0XCA, 0X01, 0X00, 0X00, 0X00, 0X00, 0X00,  // postBeta2ColorDepth(2), clientProductId(2), serialNumber(4)
   0X10, 0X00, 0X07, 0X00, 0X01, 0X00, 0X00, 0X00,  // highColorDepth(2), supportedColorDepths(2), earlyCapabilityFlags(2), clientDigProductId(2)
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,  // clientDigProductId(8)
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,  // clientDigProductId(8)
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,  // clientDigProductId(8)
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,  // clientDigProductId(8)
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,  // clientDigProductId(8)
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,  // clientDigProductId(8)
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,  // clientDigProductId(8)
   0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,  // clientDigProductId(6), connectionType(1), pad1octet(1)
   0X00, 0X00, 0X00, 0X00,                          // serverSelectedProtocol(4) -> RDP7
   0X04, 0XC0, 0X0C, 0X00, 0X0D, 0X00, 0X00, 0X00,
   0X00, 0X00, 0X00, 0X00, 0X02, 0XC0, 0X0C, 0X00,
   0X1B, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00
};

#ifdef B060907
static const unsigned char ucrs_desktop_tag[] = {  /* Desktop Tag      */
   0X01, 0XC0
};
#endif

#ifndef B060907_XXX
static const unsigned char ucrs_r02c01[] = {  /* record 2 const 1      */
   0X00, 0X08, 0X00
};
#else
static const unsigned char ucrs_r02c01[] = {  /* record 2 const 1      */
   0X04, 0X00, 0X08, 0X00
};
#endif

static const unsigned char ucrs_bitmap_tag[] = {  /* Bitmap Size Tag   */
   0X01, 0XCA
};

static const unsigned char ucrs_r02c02[] = {  /* record 2 const 2      */
   0X01, 0XCA, 0X03, 0XAA
};

#ifdef B060907
static const unsigned char ucrs_virtch_tag[] = {  /* Virtual Channel Tag */
   0X03, 0XC0
};
#endif

static const unsigned char ucrs_source_desc[] = {  /* Source Descriptor */
   0X52, 0X44, 0X50, 0X00                   /* RDP zero-terminated */
};

static const unsigned char ucrs_asn1_prot_id[] = {  /* ASN-1 protocol Id */
   0X00, 0X05, 0X00, 0X14, 0X7C, 0X00, 0X01, 0X2A,
   0X14, 0X76, 0X0A, 0X01, 0X01, 0X00, 0X01, 0XC0,
   0X00, 0X4D, 0X63, 0X44, 0X6E
};

static const unsigned char ucrs_r04_asn1_1[] = {  /* ASN-1 variables   */
   0X0A, 0X01, 0X00,
   0X02, 0X01, 0X00,
   0X30, 0X1A, 0X02, 0X01, 0X22, 0X02, 0X01, 0X03,
   0X02, 0X01, 0X00, 0X02, 0X01, 0X01, 0X02, 0X01,
   0X00, 0X02, 0X01, 0X01, 0X02, 0X03, 0X00, 0XFF,
   0XF8, 0X02, 0X01, 0X02
};

static const unsigned char ucrs_r04_vers_f[] = {  /* version field     */
   0X01, 0X0C, 0X0C, 0X00, 0X04, 0X00, 0X08, 0X00, 0X00, 0X00, 0X00, 0X00
};


static const unsigned char ucrs_rdp_pre_cert[] = {
   0X02, 0X00, 0X00, 0X80
};


static const int imrs_colour_tab[] = {      /* colour table            */
   0, 1, -1, 2, -1, -1, -1, 3
};
static const char chrs_zeroes[] = { 0, 0, 0, 0 };  /* zeroes for padding */

#ifdef TRACEHL_COM1
static int ims_no_order = 0;                /* count orders            */
#endif
static char chs_save_tra1;

static void m_gen_keys( struct dsd_call_rdpclient_1 *, char *, struct dsd_rdp_co_client *, char * );
static BOOL m_prepare_keys( struct dsd_call_rdpclient_1 *, struct dsd_rdp_co_client * );
static void m_update_keys( struct dsd_rdp_co_client *, struct dsd_rdp_encry *, char * );
static void m_gen_lic_keys( struct dsd_rdp_lic_d *, char * );
static BOOL m_make_screen( struct dsd_call_rdpclient_1 *, char * );
static BOOL m_decomp_01_s( struct dsd_call_rdpclient_1 *, struct dsd_cache_1 *, char *, int );
static BOOL m_send_cl2se_rdp5( struct dsd_call_rdpclient_1 *,
                               struct dsd_output_area_1 *, char *, int, int );
static void m_send_cl2se_conf_act_pdu( struct dsd_call_rdpclient_1 *, struct dsd_output_area_1 * );
static BOOL m_send_cl2se_license( struct dsd_call_rdpclient_1 *, struct dsd_output_area_1 *,
                                  struct dsd_cc_pass_license *,
                                  char *, int, char *, int );
static BOOL m_pass_se_update_sc( struct dsd_call_rdpclient_1 *,
                                 struct dsd_output_area_1 *,
                                 struct dsd_sc_draw_sc * );
static BOOL m_send_vch_tose( struct dsd_call_rdpclient_1 *,
                             struct dsd_output_area_1 *,
                             struct dsd_rdp_vch_io *,
                             char * );
static inline int m_pos_array_glyph( int *, int, int );
static unsigned short int m_rop2_0_s( unsigned short int, unsigned short int );
static unsigned short int m_rop2_1_s( unsigned short int, unsigned short int );
static unsigned short int m_rop2_2_s( unsigned short int, unsigned short int );
static unsigned short int m_rop2_3_s( unsigned short int, unsigned short int );
static unsigned short int m_rop2_4_s( unsigned short int, unsigned short int );
static unsigned short int m_rop2_5_s( unsigned short int, unsigned short int );
static unsigned short int m_rop2_6_s( unsigned short int, unsigned short int );
static unsigned short int m_rop2_7_s( unsigned short int, unsigned short int );
static unsigned short int m_rop2_8_s( unsigned short int, unsigned short int );
static unsigned short int m_rop2_9_s( unsigned short int, unsigned short int );
static unsigned short int m_rop2_a_s( unsigned short int, unsigned short int );
static unsigned short int m_rop2_b_s( unsigned short int, unsigned short int );
static unsigned short int m_rop2_c_s( unsigned short int, unsigned short int );
static unsigned short int m_rop2_d_s( unsigned short int, unsigned short int );
static unsigned short int m_rop2_e_s( unsigned short int, unsigned short int );
static unsigned short int m_rop2_f_s( unsigned short int, unsigned short int );
static unsigned int m_rop2_0_24oi( unsigned int, unsigned int );
static unsigned int m_rop2_1_24oi( unsigned int, unsigned int );
static unsigned int m_rop2_2_24oi( unsigned int, unsigned int );
static unsigned int m_rop2_3_24oi( unsigned int, unsigned int );
static unsigned int m_rop2_4_24oi( unsigned int, unsigned int );
static unsigned int m_rop2_5_24oi( unsigned int, unsigned int );
static unsigned int m_rop2_6_24oi( unsigned int, unsigned int );
static unsigned int m_rop2_7_24oi( unsigned int, unsigned int );
static unsigned int m_rop2_8_24oi( unsigned int, unsigned int );
static unsigned int m_rop2_9_24oi( unsigned int, unsigned int );
static unsigned int m_rop2_a_24oi( unsigned int, unsigned int );
static unsigned int m_rop2_b_24oi( unsigned int, unsigned int );
static unsigned int m_rop2_c_24oi( unsigned int, unsigned int );
static unsigned int m_rop2_d_24oi( unsigned int, unsigned int );
static unsigned int m_rop2_e_24oi( unsigned int, unsigned int );
static unsigned int m_rop2_f_24oi( unsigned int, unsigned int );
static unsigned short int m_rop3_00_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_01_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_02_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_03_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_04_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_05_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_06_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_07_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_08_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_09_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_0a_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_0b_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_0c_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_0d_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_0e_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_0f_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_10_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_11_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_12_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_13_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_14_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_15_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_16_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_17_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_18_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_19_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_1a_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_1b_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_1c_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_1d_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_1e_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_1f_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_20_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_21_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_22_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_23_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_24_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_25_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_26_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_27_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_28_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_29_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_2a_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_2b_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_2c_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_2d_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_2e_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_2f_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_30_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_31_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_32_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_33_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_34_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_35_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_36_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_37_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_38_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_39_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_3a_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_3b_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_3c_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_3d_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_3e_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_3f_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_40_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_41_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_42_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_43_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_44_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_45_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_46_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_47_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_48_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_49_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_4a_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_4b_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_4c_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_4d_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_4e_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_4f_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_50_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_51_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_52_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_53_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_54_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_55_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_56_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_57_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_58_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_59_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_5a_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_5b_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_5c_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_5d_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_5e_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_5f_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_60_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_61_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_62_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_63_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_64_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_65_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_66_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_67_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_68_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_69_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_6a_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_6b_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_6c_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_6d_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_6e_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_6f_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_70_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_71_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_72_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_73_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_74_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_75_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_76_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_77_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_78_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_79_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_7a_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_7b_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_7c_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_7d_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_7e_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_7f_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_80_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_81_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_82_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_83_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_84_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_85_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_86_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_87_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_88_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_89_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_8a_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_8b_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_8c_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_8d_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_8e_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_8f_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_90_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_91_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_92_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_93_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_94_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_95_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_96_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_97_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_98_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_99_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_9a_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_9b_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_9c_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_9d_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_9e_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_9f_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_a0_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_a1_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_a2_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_a3_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_a4_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_a5_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_a6_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_a7_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_a8_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_a9_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_aa_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_ab_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_ac_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_ad_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_ae_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_af_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_b0_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_b1_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_b2_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_b3_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_b4_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_b5_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_b6_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_b7_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_b8_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_b9_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_ba_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_bb_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_bc_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_bd_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_be_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_bf_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_c0_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_c1_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_c2_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_c3_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_c4_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_c5_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_c6_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_c7_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_c8_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_c9_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_ca_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_cb_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_cc_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_cd_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_ce_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_cf_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_d0_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_d1_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_d2_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_d3_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_d4_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_d5_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_d6_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_d7_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_d8_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_d9_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_da_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_db_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_dc_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_dd_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_de_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_df_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_e0_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_e1_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_e2_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_e3_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_e4_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_e5_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_e6_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_e7_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_e8_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_e9_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_ea_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_eb_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_ec_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_ed_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_ee_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_ef_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_f0_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_f1_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_f2_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_f3_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_f4_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_f5_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_f6_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_f7_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_f8_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_f9_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_fa_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_fb_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_fc_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_fd_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_fe_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned short int m_rop3_ff_s( unsigned short int, unsigned short int, unsigned short int );
static unsigned int m_rop3_00_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_01_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_02_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_03_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_04_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_05_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_06_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_07_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_08_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_09_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_0a_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_0b_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_0c_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_0d_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_0e_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_0f_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_10_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_11_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_12_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_13_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_14_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_15_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_16_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_17_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_18_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_19_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_1a_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_1b_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_1c_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_1d_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_1e_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_1f_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_20_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_21_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_22_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_23_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_24_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_25_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_26_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_27_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_28_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_29_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_2a_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_2b_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_2c_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_2d_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_2e_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_2f_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_30_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_31_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_32_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_33_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_34_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_35_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_36_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_37_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_38_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_39_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_3a_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_3b_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_3c_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_3d_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_3e_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_3f_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_40_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_41_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_42_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_43_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_44_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_45_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_46_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_47_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_48_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_49_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_4a_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_4b_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_4c_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_4d_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_4e_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_4f_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_50_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_51_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_52_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_53_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_54_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_55_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_56_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_57_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_58_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_59_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_5a_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_5b_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_5c_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_5d_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_5e_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_5f_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_60_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_61_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_62_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_63_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_64_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_65_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_66_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_67_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_68_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_69_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_6a_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_6b_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_6c_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_6d_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_6e_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_6f_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_70_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_71_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_72_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_73_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_74_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_75_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_76_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_77_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_78_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_79_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_7a_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_7b_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_7c_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_7d_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_7e_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_7f_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_80_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_81_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_82_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_83_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_84_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_85_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_86_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_87_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_88_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_89_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_8a_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_8b_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_8c_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_8d_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_8e_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_8f_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_90_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_91_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_92_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_93_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_94_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_95_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_96_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_97_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_98_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_99_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_9a_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_9b_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_9c_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_9d_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_9e_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_9f_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_a0_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_a1_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_a2_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_a3_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_a4_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_a5_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_a6_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_a7_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_a8_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_a9_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_aa_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_ab_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_ac_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_ad_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_ae_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_af_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_b0_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_b1_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_b2_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_b3_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_b4_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_b5_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_b6_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_b7_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_b8_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_b9_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_ba_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_bb_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_bc_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_bd_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_be_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_bf_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_c0_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_c1_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_c2_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_c3_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_c4_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_c5_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_c6_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_c7_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_c8_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_c9_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_ca_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_cb_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_cc_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_cd_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_ce_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_cf_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_d0_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_d1_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_d2_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_d3_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_d4_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_d5_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_d6_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_d7_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_d8_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_d9_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_da_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_db_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_dc_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_dd_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_de_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_df_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_e0_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_e1_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_e2_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_e3_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_e4_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_e5_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_e6_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_e7_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_e8_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_e9_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_ea_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_eb_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_ec_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_ed_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_ee_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_ef_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_f0_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_f1_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_f2_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_f3_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_f4_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_f5_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_f6_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_f7_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_f8_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_f9_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_fa_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_fb_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_fc_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_fd_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_fe_24oi( unsigned int, unsigned int, unsigned int );
static unsigned int m_rop3_ff_24oi( unsigned int, unsigned int, unsigned int );
static inline short int m_get_le2( char * );
static inline int m_get_le4( char * );
static inline void m_put_le2( char *, int );
static inline void m_put_le4( char *, int );
static inline void m_put_be2( char *, int );
#ifdef TRACEHL_BMP_060827
#ifndef D_CONSOLE_OUT
#define D_CONSOLE_OUT
#endif
#endif
#ifdef TRACEHL1
#ifndef D_CONSOLE_OUT
#define D_CONSOLE_OUT
#endif
#endif
#ifdef D_CONSOLE_OUT
static void m_console_out( char *achp_buff, int implength );
#else
static const char chrstrans[]
     = { '0', '1', '2', '3', '4', '5', '6', '7',
         '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };
#endif
static const char chrstrans[]
     = { '0', '1', '2', '3', '4', '5', '6', '7',
         '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };
static int m_sdh_printf( struct dsd_call_rdpclient_1 *, char *, ... );
static void m_sdh_console_out( struct dsd_call_rdpclient_1 *, char *achp_buff, int implength );
static char * m_ret_t_ied_fsfp_bl( ied_fsfp_bl );
static char * m_ret_t_ied_frse_bl( ied_frse_bl );

static const struct dsd_progaddr_1 dsrs_progaddr_1[4] = {  /* program addresses */
   {                                        /* char, 8 bits per pixel */
     &m_decomp_01_s,
   &m_rop2_0_24oi,
   &m_rop2_1_24oi,
   &m_rop2_2_24oi,
   &m_rop2_3_24oi,
   &m_rop2_4_24oi,
   &m_rop2_5_24oi,
   &m_rop2_6_24oi,
   &m_rop2_7_24oi,
   &m_rop2_8_24oi,
   &m_rop2_9_24oi,
   &m_rop2_a_24oi,
   &m_rop2_b_24oi,
   &m_rop2_c_24oi,
   &m_rop2_d_24oi,
   &m_rop2_e_24oi,
   &m_rop2_f_24oi,
   },
   {                                        /* short, 15 or 16 bits per pixel */
     &m_decomp_01_s,
   &m_rop2_0_24oi,
   &m_rop2_1_24oi,
   &m_rop2_2_24oi,
   &m_rop2_3_24oi,
   &m_rop2_4_24oi,
   &m_rop2_5_24oi,
   &m_rop2_6_24oi,
   &m_rop2_7_24oi,
   &m_rop2_8_24oi,
   &m_rop2_9_24oi,
   &m_rop2_a_24oi,
   &m_rop2_b_24oi,
   &m_rop2_c_24oi,
   &m_rop2_d_24oi,
   &m_rop2_e_24oi,
   &m_rop2_f_24oi,
   },
   {                                        /* int, 24 bits per pixel  */
     &m_decomp_01_s,
   &m_rop2_0_24oi,
   &m_rop2_1_24oi,
   &m_rop2_2_24oi,
   &m_rop2_3_24oi,
   &m_rop2_4_24oi,
   &m_rop2_5_24oi,
   &m_rop2_6_24oi,
   &m_rop2_7_24oi,
   &m_rop2_8_24oi,
   &m_rop2_9_24oi,
   &m_rop2_a_24oi,
   &m_rop2_b_24oi,
   &m_rop2_c_24oi,
   &m_rop2_d_24oi,
   &m_rop2_e_24oi,
   &m_rop2_f_24oi,
   },
   {                                        /* int, 32 bits per pixel  */
     &m_decomp_01_s,
   &m_rop2_0_24oi,
   &m_rop2_1_24oi,
   &m_rop2_2_24oi,
   &m_rop2_3_24oi,
   &m_rop2_4_24oi,
   &m_rop2_5_24oi,
   &m_rop2_6_24oi,
   &m_rop2_7_24oi,
   &m_rop2_8_24oi,
   &m_rop2_9_24oi,
   &m_rop2_a_24oi,
   &m_rop2_b_24oi,
   &m_rop2_c_24oi,
   &m_rop2_d_24oi,
   &m_rop2_e_24oi,
   &m_rop2_f_24oi,
   }
};
//----- 10.07.09
/* Predefined hatch brush patterns. */
static const unsigned char ucrs_brush_01[ 6 * 8 ] = {
   /* LSB least significant bit is for leftmost pixel                  */
   /* HS_HORIZONTAL                                                    */
   0XFF, 0XFF, 0XFF, 0XFF, 0X00, 0XFF, 0XFF, 0XFF,
   /* HS_VERTICAL                                                      */
   0XEF, 0XEF, 0XEF, 0XEF, 0XEF, 0XEF, 0XEF, 0XEF,
   /* HS_FDIAGONAL                                                     */
   0X7F, 0XBF, 0XDF, 0XEF, 0XF7, 0XFB, 0XFD, 0XFE,
   /* HS_BDIAGONAL                                                     */
   0XFE, 0XFD, 0XFB, 0XF7, 0XEF, 0XDF, 0XBF, 0X7F,
   /* HS_CROSS                                                         */
   0XEF, 0XEF, 0XEF, 0XEF, 0X00, 0XEF, 0XEF, 0XEF,
   /* HS_DIAGCROSS                                                     */
   0X7E, 0XBD, 0XDB, 0XE7, 0XE7, 0XDB, 0XBD, 0X7E
};
//----- 10.07.09
static const unsigned char ucrs_invert_bits[ 256 ] = {
   0,   128, 64,  192, 32,  160, 96,  224,
   16,  144, 80,  208, 48,  176, 112, 240,
   8,   136, 72,  200, 40,  168, 104, 232,
   24,  152, 88,  216, 56,  184, 120, 248,
   4,   132, 68,  196, 36,  164, 100, 228,
   20,  148, 84,  212, 52,  180, 116, 244,
   12,  140, 76,  204, 44,  172, 108, 236,
   28,  156, 92,  220, 60,  188, 124, 252,
   2,   130, 66,  194, 34,  162, 98,  226,
   18,  146, 82,  210, 50,  178, 114, 242,
   10,  138, 74,  202, 42,  170, 106, 234,
   26,  154, 90,  218, 58,  186, 122, 250,
   6,   134, 70,  198, 38,  166, 102, 230,
   22,  150, 86,  214, 54,  182, 118, 246,
   14,  142, 78,  206, 46,  174, 110, 238,
   30,  158, 94,  222, 62,  190, 126, 254,
   1,   129, 65,  193, 33,  161, 97,  225,
   17,  145, 81,  209, 49,  177, 113, 241,
   9,   137, 73,  201, 41,  169, 105, 233,
   25,  153, 89,  217, 57,  185, 121, 249,
   5,   133, 69,  197, 37,  165, 101, 229,
   21,  149, 85,  213, 53,  181, 117, 245,
   13,  141, 77,  205, 45,  173, 109, 237,
   29,  157, 93,  221, 61,  189, 125, 253,
   3,   131, 67,  195, 35,  163, 99,  227,
   19,  147, 83,  211, 51,  179, 115, 243,
   11,  139, 75,  203, 43,  171, 107, 235,
   27,  155, 91,  219, 59,  187, 123, 251,
   7,   135, 71,  199, 39,  167, 103, 231,
   23,  151, 87,  215, 55,  183, 119, 247,
   15,  143, 79,  207, 47,  175, 111, 239,
   31,  159, 95,  223, 63,  191, 127, 255
};
static int    ims_trace_frse = 0;
static int    ims_trace_tose = 0;
static int    ims_trace_call_18 = 0;
static int    ims_trace_call_0d = 0;

/* subroutine to process the copy library function                     */
extern "C" void m_rdpclient_1( struct dsd_call_rdpclient_1 *adsp_hl_clib_1 ) {
   BOOL       bol1;                         /* working variable        */
   int        iml1, iml2, iml3, iml4, iml5, iml6;  /* working variables */
// int        iml5, iml6;                   /* working variables       */
   char       byl1;                         /* working-variable        */
   int        iml_x, iml_y;                 /* working variables       */
   int        iml_rec;                      /* data received remaining */
   int        iml_line_no;                  /* line number for errors  */
   int        iml_source_no;                /* source line no for errors */
   char       chl_w1;                       /* working variable        */
   char       *achl1, *achl2;               /* working variables       */
   char       *achl3, *achl4;               /* working variables       */
   char       *achl5;                       /* working variable        */
   BOOL       bol_compressed;               /* save compressed         */
   struct dsd_output_area_1 dsl_output_area_1;  /* output of subroutine */
   struct dsd_gather_i_1 *adsl_gai1_inp_1;  /* input data              */
   struct dsd_gather_i_1 *adsl_gai1_inp_w2;  /* input data             */
// struct dsd_gather_i_1 *adsl_gai1_out_2;  /* output data             */
   struct dsd_sc_draw_sc dsl_sc_draw_sc;    /* draw on screen          */
   struct dsd_gather_i_1 dsl_gai1_comp_data;  /* compressed data       */
   struct dsd_gather_i_1 *adsl_gai1_inp_save_compr;  /* save current gather input */
   int        iml_compr_len;                /* length compressed       */
   int        iml_compr_inp;                /* input to compression    */
   char       *achl_out_1;                  /* output-area             */
   int        iml_out_len;                  /* length output           */
   struct dsd_aux_get_workarea dsl_aux_get_workarea;  /* acquire additional work area */
   struct dsd_gather_i_1 *adsl_gai1_out_save;  /* output data          */
   struct dsd_bmp_cache_b_1 *adsl_bmpc_b_1;  /* Bitmap Cache Buffer    */
   struct dsd_cc_co1 *adsl_cc_co1_w1;       /* client commands, working variable */
   struct dsd_se_co1 *adsl_se_co1_w1;       /* command from server     */
   struct dsd_se_co1 *adsl_se_co1_last;     /* command from server     */
   struct dsd_gather_i_1 *adsl_gai1_w1;     /* chain of data           */
   struct dsd_gather_i_1 *adsl_gai1_w2;     /* chain of data           */
#ifdef HELP_DEBUG
   struct dsd_rdpa_f *ADSL_RDPA_F;
   struct dsd_rdp_server_1 *D_ADSL_RSE1;
   struct dsd_rdp_client_1 *D_ADSL_RCL1;
   struct dsd_rdp_co_client *D_ADSL_RCO1;  /* RDP communication client */
   struct dsd_output_area_1 *ADSL_OA1;
#endif
   char       *achl_inp_start;              /* start of input area     */
#define D_NO_TRACE_ORD_FL 128
   char       *achrl_trace_ord_fl[ D_NO_TRACE_ORD_FL ];
   char       chrl_trace_ord_fl_order[ D_NO_TRACE_ORD_FL ];
   char       chrl_work_1[ D_MAX_CRYPT_LEN ];  /* work area            */
   char       chrl_work_2[ 65536 ];         /* work area               */

   m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d m_hlclib01() called inc_func=%d.",
                 __LINE__, 9339,
                 adsp_hl_clib_1->inc_func );
   if (adsp_hl_clib_1->boc_eof_server) {    /* End-of-File Server      */
     m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d m_hlclib01() boc_eof_server TRUE",
                   __LINE__, 9350 );
   }
#ifdef D_FOR_TRACE1                         /* 31.05.05 KB - help in tracing */
   iml1 = 0;
#endif                                      /* 31.05.05 KB - help in tracing */
   iml_line_no = 0;                         /* line number for errors  */
   adsl_gai1_out_save = NULL;               /* clear output data       */
#ifndef HELP_DEBUG
#define ADSL_RDPA_F ((struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext)
#define ADSL_OA1 (&dsl_output_area_1)
#else
   ADSL_RDPA_F = (struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext;
   ADSL_OA1 = &dsl_output_area_1;
#endif
#ifdef HELP_DEBUG
   if (adsp_hl_clib_1->inc_func != DEF_IFUNC_START) {
     if (ADSL_RDPA_F) {                     /* memory defined          */
       if (ADSL_RDPA_F->boc_help_debug_1) {  /* stop debugger          */
         m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d m_hlclib01() called boc_help_debug_1 set",
                       __LINE__, 9389 );
         int inh1 = 0;
         inh1++;
       }
     }
   }
#endif
   memset( achrl_trace_ord_fl, 0, sizeof(achrl_trace_ord_fl) );
   memset( chrl_trace_ord_fl_order, 0, sizeof(chrl_trace_ord_fl_order) );
   iml_line_no = 0;                         /* line number for errors  */
   iml_source_no = 0;                       /* source line no for errors */
   switch (adsp_hl_clib_1->inc_func) {
     case DEF_IFUNC_START:
       goto pfsta00;                        /* start communication     */
     case DEF_IFUNC_REFLECT:
       goto pfrse00;                        /* from server             */
     case DEF_IFUNC_CLOSE:
       if (adsp_hl_clib_1->ac_ext == NULL) return;
       goto p_cleanup_00;                   /* do cleanup now          */
     default:
       m_sdh_printf( adsp_hl_clib_1, "xlrdpa1-l%05d-W m_hlclib01() called inc_func=%d - value invalid",
                     __LINE__, adsp_hl_clib_1->inc_func );
       return;
   }

   pfsta00:                                 /* start communication     */
   m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d m_hlclib01() called pfsta00 " __DATE__,
                 __LINE__, 9460 );
#ifdef D_FFLUSH                             /* 30.05.05 KB - flush stdout */
   setbuf( stdout, 0 );
#endif                                      /* 30.05.05 KB - flush stdout */
   bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                      DEF_AUX_MEMGET,
                                      &adsp_hl_clib_1->ac_ext,
                                      sizeof(struct dsd_rdpa_f) );
   if (bol1 == FALSE) {                     /* aux returned error      */
     adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
     return;
   }
#ifdef HELP_DEBUG
   ADSL_RDPA_F = (struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext;
#endif
   memset( ADSL_RDPA_F, 0, sizeof(struct dsd_rdpa_f) );
   ADSL_RDPA_F->dsc_stor_sdh_1.amc_aux = adsp_hl_clib_1->amc_aux;
   ADSL_RDPA_F->dsc_stor_sdh_1.vpc_userfld = adsp_hl_clib_1->vpc_userfld;
   ADSL_RDPA_F->dsc_stor_sdh_1.imc_stor_size = D_AUX_STOR_SIZE;  /* size of storage element */
   m_aux_stor_start( &ADSL_RDPA_F->dsc_stor_sdh_1 );
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_chno_cont = D_DISPLAY_CHANNEL + 1;  /* channel number control */
   adsp_hl_clib_1->adsc_rdp_co = &ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1;  /* RDP communication */
   ADSL_RDPA_F->dsc_rdp_cl_1.iec_frse_bl = ied_frse_start;  /* receive block from client */
   ADSL_RDPA_F->dsc_rdp_cl_1.iec_fsfp_bl = ied_fsfp_invalid;  /* invalid data received */
   /* see 2.2.2.2.1.1.2 Primary Drawing Order (PRIMARY_DRAWING_ORDER)  */
   ADSL_RDPA_F->dsc_rdp_cl_1.ucc_prot_r5_pdu_ord_prim = 0X01;
// ADSL_RDPA_F->dsc_rdp_cl_1.imc_pos_inp_frame = 0;  /* start of frame */
// ADSL_RDPA_F->iec_frcl_bl = ied_frcl_start;  /* receive block from client */
// ADSL_RDPA_F->inc_send_server_len = 0;    /* send nothing to client  */
   return;

   pfrse00:                                 /* from server - to client */
// to-do 20.04.12 KB - afterwards again
   ADSL_OA1->aadsc_gai1_out_to_server = &adsp_hl_clib_1->adsc_gai1_out_to_server;  /* output data to server */
   ADSL_OA1->aadsc_se_co1_chain = &adsp_hl_clib_1->adsc_se_co1_ch;  /* chain commands from server */
   /* prepare area to send to server                                   */
   ADSL_OA1->achc_lower = adsp_hl_clib_1->achc_work_area;  /* addr work-area */
   ADSL_OA1->achc_upper = ADSL_OA1->achc_lower + adsp_hl_clib_1->inc_len_work_area;  /* length work-area */
   if (adsp_hl_clib_1->adsc_gather_i_1_in == NULL) goto pfrse80;
   m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d m_hlclib01() $T01 pfrse00 - something received from server",
                 __LINE__, 9685 );
   ims_trace_frse++;
   m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d m_hlclib01() $T01 pfrse00 - something received from server %d.",
                 __LINE__, 9694, ims_trace_frse );
   ADSL_OA1->aadsc_gai1_out_to_server = &adsp_hl_clib_1->adsc_gai1_out_to_server;  /* output data to server */
   ADSL_OA1->aadsc_se_co1_chain = &adsp_hl_clib_1->adsc_se_co1_ch;  /* chain commands from server */
   adsl_gai1_inp_1 = adsp_hl_clib_1->adsc_gather_i_1_in;
#ifndef HELP_DEBUG
#define D_ADSL_RCL1 (&ADSL_RDPA_F->dsc_rdp_cl_1)
#define D_ADSL_RCO1 (&D_ADSL_RCL1->dsc_rdp_co_1)
#else
// ADSL_RDPA_F = (struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext;
   D_ADSL_RCL1 = &ADSL_RDPA_F->dsc_rdp_cl_1;
   D_ADSL_RCO1 = &D_ADSL_RCL1->dsc_rdp_co_1;
#endif

   ADSL_OA1->adsc_raord_scr = NULL;         /* chain of ra orders      */

   memset( &dsl_gai1_comp_data, 0, sizeof(struct dsd_gather_i_1) );  /* compressed data */
   achl_inp_start = adsl_gai1_inp_1->achc_ginp_cur;  /* start of input area */

   /* loop to process the input data                                   */
   pfrse20:                                 /* process next byte input */
   if (adsl_gai1_inp_1) {                   /* more gather input       */
     iml_rec = adsl_gai1_inp_1->achc_ginp_end
                 - adsl_gai1_inp_1->achc_ginp_cur;
     if (iml_rec > 0) {                     /* data to process         */
       goto pfrse24;                        /* data to process found   */
     }
     adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;
     if (adsl_gai1_inp_1) {                 /* more data to follow     */
       m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d pfrse20 start-next-block inp_cur=%p length=%d/%04X char=%02X.",
                     __LINE__, 9855,  /* line number for errors  */
                     adsl_gai1_inp_1->achc_ginp_cur,
                     adsl_gai1_inp_1->achc_ginp_end - adsl_gai1_inp_1->achc_ginp_cur,
                     adsl_gai1_inp_1->achc_ginp_end - adsl_gai1_inp_1->achc_ginp_cur,
                     *((unsigned char *) adsl_gai1_inp_1->achc_ginp_cur) );
       achl_inp_start = adsl_gai1_inp_1->achc_ginp_cur;  /* start of input area */
       goto pfrse20;                        /* check if more input     */
     }
   }
   if (dsl_gai1_comp_data.achc_ginp_cur) {  /* decompressed data       */
     adsl_gai1_inp_1 = adsl_gai1_inp_save_compr;  /* restore current gather input */
     dsl_gai1_comp_data.achc_ginp_cur = NULL;  /* no more in decompressed data */
     achl_inp_start = adsl_gai1_inp_1->achc_ginp_cur;  /* start of input area */
     goto pfrse20;                          /* check if more input     */
   }
#ifdef D_FFLUSH                             /* 30.05.05 KB - flush stdout */
   fflush( stdout );
#endif                                      /* 30.05.05 KB - flush stdout */
//   goto pfrse60;
//   return;
//#ifdef TRACEHL1
#ifdef TEMPSCR2                             /* 15.06.05 KB - send screen */
   ADSL_RDPA_F->dsc_rdp_se_1.dsc_rdp_co_1.imc_s_coldep = 16;
#ifdef OLD01
   if (D_ADSL_RCL1->imc_count_order >= 1244) {
#ifdef FORKEDIT
   }
#endif
#else
   if (D_ADSL_RCL1->imc_count_order >= 1243) {
#endif
     printf( "l%05d s%05d send screen now\n",
             __LINE__, 9912 );
     memset( &dsl_sc_draw_sc, 0, sizeof(struct dsd_sc_draw_sc) );  /* draw on screen */
     dsl_sc_draw_sc.imc_left = 0;
     dsl_sc_draw_sc.imc_top = 0;
     dsl_sc_draw_sc.imc_right = D_ADSL_RCO1->imc_dim_x;
     dsl_sc_draw_sc.imc_bottom = D_ADSL_RCO1->imc_dim_y;
     if ((ADSL_RDPA_F->dsc_rdp_se_1.dsc_rdp_co_1.umc_loinf_options & D_LOINFO_COMPR_ENA) == 0) {  /* compression not enabled */
       m_send_draw_sc_s_normal( adsp_hl_clib_1, ADSL_OA1, &dsl_sc_draw_sc, chrl_work_2 );
     } else {                             /* compression enabled     */
       bol1 = m_send_draw_sc_s_compr( adsp_hl_clib_1, ADSL_OA1, &dsl_sc_draw_sc, chrl_work_2 );
       if (bol1 == FALSE) goto p_cleanup_00;  /* do cleanup now        */
     }
   }
#endif /* TEMPSCR2                          15.06.05 KB - send screen  */
//#endif
   goto pfrse80;                            /* search what to send     */

   pfrse24:                                 /* data to process found   */
   m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d pfrse24 iec_frse_bl=%d %s + iec_fsfp_bl=%d %s addr=%p pos=%04X cont=%02X.",
                 __LINE__, 9974,  /* line number for errors  */
                 ADSL_RDPA_F->dsc_rdp_cl_1.iec_frse_bl,
                 m_ret_t_ied_frse_bl( ADSL_RDPA_F->dsc_rdp_cl_1.iec_frse_bl ),
                 ADSL_RDPA_F->dsc_rdp_cl_1.iec_fsfp_bl,
                 m_ret_t_ied_fsfp_bl( ADSL_RDPA_F->dsc_rdp_cl_1.iec_fsfp_bl ),
                 adsl_gai1_inp_1->achc_ginp_cur,
                 adsl_gai1_inp_1->achc_ginp_cur - achl_inp_start,
                 *((unsigned char *) adsl_gai1_inp_1->achc_ginp_cur) );
   switch (D_ADSL_RCL1->iec_fsfp_bl) {      /* field position in rec   */
     case ied_fsfp_invalid:                 /* invalid data received   */
       M_ERROR_FRSE_ILLOGIC                 /* program illogic         */
     case ied_fsfp_constant:                /* compare with constant   */
       switch (D_ADSL_RCL1->iec_frse_bl) {
         case ied_frse_start:
           achl1 = (char *) ucrs_rec_se_01_cmp1;  /* compare received from server first block */
           iml1 = sizeof(ucrs_rec_se_01_cmp1);
           break;
         case ied_frse_r04_asn1_4:          /* block 4 ASN-1 field 4   */
           achl1 = (char *) ucrs_asn1_prot_id;
           iml1 = sizeof(ucrs_asn1_prot_id);
           break;
#ifdef XYZ1
         case ied_frse_r04_rdp_v:           /* block 4 RDP version     */
           achl1 = (char *) ucrs_rdp_version;
           iml1 = sizeof(ucrs_rdp_version);
           break;
#endif
         case ied_frse_actpdu_len_cap:      /* get length capabilities */
           achl1 = (char *) ucrs_source_desc;
           iml1 = sizeof(ucrs_source_desc);
           break;
         default:
           goto pfrse96;                    /* program illogic         */
       }
       iml2 = iml1;                         /* save length             */
       if (iml1 > (D_ADSL_RCL1->imc_prot_1 + iml_rec)) {
         iml1 = D_ADSL_RCL1->imc_prot_1 + iml_rec;
       }
       iml1 -= D_ADSL_RCL1->imc_prot_1;
       if (memcmp( achl1 + D_ADSL_RCL1->imc_prot_1,
                   adsl_gai1_inp_1->achc_ginp_cur,
                   iml1 )) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_1 += iml1;
       adsl_gai1_inp_1->achc_ginp_cur += iml1;
       D_ADSL_RCL1->imc_pos_inp_frame -= iml1;  /* length constant     */
       if (D_ADSL_RCL1->imc_prot_1 < iml2) {
         goto pfrse20;                      /* process next data       */
       }
       switch (D_ADSL_RCL1->iec_frse_bl) {
         case ied_frse_start:
           if (D_ADSL_RCL1->imc_pos_inp_frame == 0) {  /* nothing more in packet */
             goto pfrse_send_secbl;         /* send second block to server */
           }
           D_ADSL_RCL1->imc_prot_save1 = -1;  /* first retrieve type   */
           D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_akku = 0;  /* clear value             */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
           goto pfrse20;                    /* process next data       */
         case ied_frse_r04_asn1_4:          /* block 4 ASN-1 field 4   */
/* UUUU 16.12.04 KB */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_mu_len_1;  /* multi length 1 */
           goto pfrse20;                    /* process next data       */
         case ied_frse_actpdu_len_cap:      /* get length capabilities */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_actpdu_no_cap;  /* get number capabilities */
           goto pfrse20;                    /* process next data       */
//       default:
//         goto pfrse96;                    /* program illogic         */
       }
           goto pfrse96;                    /* program illogic         */
     case ied_fsfp_ignore:                  /* ignore this data        */
       /* compute how many to ignore                                   */
       iml1 = D_ADSL_RCL1->imc_pos_inp_frame
                - D_ADSL_RCL1->imc_prot_2;
       if (iml1 > iml_rec) iml1 = iml_rec;
       adsl_gai1_inp_1->achc_ginp_cur += iml1;
       D_ADSL_RCL1->imc_pos_inp_frame -= iml1;  /* length constant     */
       if (D_ADSL_RCL1->imc_pos_inp_frame > D_ADSL_RCL1->imc_prot_2) {
         goto pfrse20;                      /* needs more data         */
       }
       switch (D_ADSL_RCL1->iec_frse_bl) {
         case ied_frse_r04_asn1_1:          /* block 4 ASN-1 field 1   */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_asn1_2;  /* block 4 ASN-1 field 2 */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_asn1_tag;
           goto pfrse20;                    /* needs more data         */
         case ied_frse_r04_asn1_2:          /* block 4 ASN-1 field 2   */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_asn1_3;  /* block 4 ASN-1 field 3 */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_asn1_tag;
           goto pfrse20;                    /* needs more data         */
         case ied_frse_r04_asn1_3:          /* block 4 ASN-1 field 3   */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_asn1_4;  /* block 4 ASN-1 field 4 */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_asn1_tag;
           goto pfrse20;                    /* needs more data         */
         case ied_frse_r04_rdp_v:           /* block 4 RDP version     */
           if (D_ADSL_RCL1->imc_pos_inp_frame <= 0) {  /* at end of block */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_sel_t;  /* block 4 selection */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
           goto pfrse20;                    /* process next data       */
         case ied_frse_r04_ppdir_tag:       /* block 4 public parms direct tag */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
           goto pfrse20;                    /* process next data       */
         case ied_frse_actpdu_no_cap:       /* get number capabilities */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_actpdu_cap_ind;  /* get capabilities index */
           goto pfrse20;                    /* process next data       */
/* 05.01.05 KB - invalid */
         case ied_frse_any_pdu_rec:         /* RDP 5 PDU length        */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_rec_type;  /* receive record type */
           goto pfrse20;                    /* process next data       */
         case ied_frse_lic_pr_chll:         /* platform challenge      */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
           goto pfrse20;                    /* process next data       */
         case ied_frse_deaap_rec:           /* Deactivate All PDU Data */
           D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_count_in <= 0) {  /* at least one byte must follow */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_akku = 0;  /* clear value             */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
           goto pfrse20;                    /* process next data       */
         case ied_frse_xyz_end_pdu:         /* end of PDU              */
           if (D_ADSL_RCL1->imc_pos_inp_frame == 0) {  /* at end of block      */
             D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_rec_type;  /* receive record type */
             D_ADSL_RCL1->iec_frse_bl = ied_frse_any_pdu_rec;  /* ????ive block active PDU */
             goto pfrse20;                          /* process next data       */
           }
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_typ;  /* RDP 5 PDU type */
           goto pfrse20;                    /* process next data       */
/* 18.06.05 KB UUUU */
         case ied_frse_xyz_end_order:       /* end of order            */
           goto pfrse_end_order;            /* end of this order       */
         case ied_frse_r5_pdu_apply_order:  /* RDP 5 PDU apply order   */
           goto pfrse_po_apply_order;       /* apply the order         */
       }
           goto pfrse96;                    /* program illogic         */
     case ied_fsfp_copy:                    /* copy data               */
       /* compute how many to copy                                     */
       iml1 = D_ADSL_RCL1->imc_pos_inp_frame
                - D_ADSL_RCL1->imc_prot_2;
       if (iml1 > iml_rec) iml1 = iml_rec;
       memcpy( D_ADSL_RCL1->achc_prot_1,
               adsl_gai1_inp_1->achc_ginp_cur,
               iml1 );
       D_ADSL_RCL1->achc_prot_1 += iml1;
       adsl_gai1_inp_1->achc_ginp_cur += iml1;
       D_ADSL_RCL1->imc_pos_inp_frame -= iml1;  /* length constant     */
       if (D_ADSL_RCL1->imc_pos_inp_frame > D_ADSL_RCL1->imc_prot_2) {
         goto pfrse20;                      /* needs more data         */
       }
       switch (D_ADSL_RCL1->iec_frse_bl) {
         case ied_frse_r04_d_serv_rand:     /* block 4 data server random */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame
                                     - D_ADSL_RCO1->imc_l_pub_par;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_type_pub_par;  /* block 4 type public parameters */
           goto pfrse20;                    /* process next data       */
         case ied_frse_r04_ppdir_len:       /* block 4 public parms direct lenght */
           if (D_ADSL_RCL1->imc_prot_5 == 0) {  /* was first parameter */
             if (D_ADSL_RCL1->imc_pos_inp_frame == 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             D_ADSL_RCL1->imc_prot_5 = D_ADSL_RCL1->imc_prot_4;
             D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_ppdir_tag;  /* get public parms direct tag */
             D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
             if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
             D_ADSL_RCL1->imc_prot_1 = 0;   /* clear value             */
             D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
             goto pfrse20;                  /* process next data       */
           }
           if (D_ADSL_RCL1->imc_pos_inp_frame > 0) {  /* more data in block */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
/* maybe other sequence of tags */
           printf( "14.05.05 KB both tags\n" );
           {
             if (memcmp( D_ADSL_RCL1->chrc_prot_1, "RSA1", 4)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             iml1 = m_get_le4( D_ADSL_RCL1->chrc_prot_1 + 4 );
             if (iml1 != (D_ADSL_RCL1->imc_prot_6 - 20)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
// to-do 29.01.10 KB where does length of exponent come from ???
             printf( "14.05.05 KB received server - public modulus: %02X %02X %02X %02X\n",
                     *((unsigned char *) D_ADSL_RCL1->chrc_prot_1 + 20 + 0),
                     *((unsigned char *) D_ADSL_RCL1->chrc_prot_1 + 20 + 1),
                     *((unsigned char *) D_ADSL_RCL1->chrc_prot_1 + 20 + 2),
                     *((unsigned char *) D_ADSL_RCL1->chrc_prot_1 + 20 + 3) );
             printf( "14.05.05 KB received server - exponent:       %02X %02X %02X %02X\n",
                     *((unsigned char *) D_ADSL_RCL1->chrc_prot_1 + 16 + 0),
                     *((unsigned char *) D_ADSL_RCL1->chrc_prot_1 + 16 + 1),
                     *((unsigned char *) D_ADSL_RCL1->chrc_prot_1 + 16 + 2),
                     *((unsigned char *) D_ADSL_RCL1->chrc_prot_1 + 16 + 3) );
             /* check power of two                                     */
             iml5 = iml1;
             iml6 = 32 - 1;
             while (iml5 > 0) {
               iml6--;                      /* subtract one position bit */
               iml5 <<= 1;                  /* remove this bit         */
             }
             iml5 = 1 << iml6;              /* compute power of two    */
             if (iml5 > D_RSA_KEY_SIZE) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             if (iml1 > (iml5 + D_RSA_KEY_PADDING)) {  /* too many leading bytes */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             D_ADSL_RCL1->imc_len_cert_key = iml5;  /* length RSA key  */
             D_ADSL_RCL1->achc_cert_key     /* RSA key                 */
                 = (char *) m_aux_stor_alloc( &ADSL_RDPA_F->dsc_stor_sdh_1, iml5 );
             achl1 = D_ADSL_RCL1->achc_cert_key;  /* RSA key           */
             achl2 = achl1 + iml5;          /* add length RSA key      */
             achl3 = D_ADSL_RCL1->chrc_prot_1 + 20;
             do {
               *(--achl2) = *achl3++;
             } while (achl2 > achl1);
             /* check if remaining bytes are all zero                  */
             while (iml5 < iml1) {
               if (*(D_ADSL_RCL1->chrc_prot_1 + 20 + iml5)) {  /* byte not zero */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
               }
               iml5++;                      /* check next              */
             }
             iml1 = 3;
             achl1 = D_ADSL_RCL1->chrc_cert_exp;
             if (iml1 < sizeof(D_ADSL_RCL1->chrc_cert_exp)) {
               memset( achl1, 0, sizeof(D_ADSL_RCL1->chrc_cert_exp) - iml1 );
               achl1 += sizeof(D_ADSL_RCL1->chrc_cert_exp) - iml1;
             }
             memcpy( achl1,
                     D_ADSL_RCL1->chrc_prot_1 + 16,
                     iml1 );
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_invalid;  /* invalid data received */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_rec_07;
           goto pfrse_send_erect_domain_request_pdu;
         case ied_frse_r04_d_pub_par:       /* block 4 data public parameters */
           /* get certificate values                                   */
           /* stored in temporary buffer at D_ADSL_RCL1->ac_temp_buffer */
           /* length is (D_ADSL_RCL1->achc_prot_1 - (char *) D_ADSL_RCL1->ac_temp_buffer) */
           iml1 = D_ADSL_RCL1->achc_prot_1 - (char *) D_ADSL_RCL1->ac_temp_buffer;
           iml2 = 4 + sizeof(int);          /* start here              */
           iml3 = iml1;                     /* set stopper             */
           while (TRUE) {                   /* loop to walk thru certificate */
             if (iml2 > iml1) {             /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             /* get int little endian                                  */
             iml4 = *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml2 - 4)
                    | (*((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml2 - 3) << 8)
                    | (*((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml2 - 2) << 16)
                    | (*((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml2 - 1) << 24);
             if (iml4 == 0) break;          /* reached last position   */
             if (((unsigned int) iml4 > iml1)) {  /* greater length of this buffer */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             iml3 = iml2;                   /* save previous value     */
             iml2 += iml4;                  /* after this part         */
             if (iml2 == iml1) break;       /* end of certificate      */
             iml2 += sizeof(int);           /* after this part         */
           }
           /* skip length certificate                                  */
           iml3 += sizeof(int) + 2;         /* add length length + Tag Length one Byte */
           if (iml3 > iml1) {               /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (*((signed char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) < 0) {  /* MSB set */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) & 0X7F;  /* add integer bytes */
           }
           /* skip length TBS certificate                              */
           iml3 += 2;                       /* add Tag Length one Byte */
           if (iml3 > iml1) {               /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (*((signed char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) < 0) {  /* MSB set */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) & 0X7F;  /* add integer digits */
           }
           /* skip Version                                             */
           /* macro to skip one ASN.1 field                            */
           iml3 += 2;                       /* add Tag Length one Byte */
           if (iml3 > iml1) {               /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (*((signed char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) >= 0) {  /* MSB not set */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1);  /* add integer value */
           } else {                         /* MSB set, multiple integer digits */
             iml2 = iml3;                   /* save current position   */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) & 0X7F;  /* add integer bytes */
             if (iml3 > iml1) {             /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             iml4 = 0;                      /* clear result            */
             while (iml2 < iml3) {          /* loop over integer digits */
               iml4 <<= 8;                  /* shift old value         */
               iml4 |= *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml2++);
             }
             if (((unsigned int) iml4 > iml1)) {  /* greater length of this buffer */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             iml3 += iml4;                  /* add length of this field */
           }
           /* end of macro to skip one ASN.1 field                     */
           /* skip Serial Number                                       */
           /* macro to skip one ASN.1 field                            */
           iml3 += 2;                       /* add Tag Length one Byte */
           if (iml3 > iml1) {               /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (*((signed char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) >= 0) {  /* MSB not set */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1);  /* add integer value */
           } else {                         /* MSB set, multiple integer digits */
             iml2 = iml3;                   /* save current position   */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) & 0X7F;  /* add integer bytes */
             if (iml3 > iml1) {             /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             iml4 = 0;                      /* clear result            */
             while (iml2 < iml3) {          /* loop over integer digits */
               iml4 <<= 8;                  /* shift old value         */
               iml4 |= *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml2++);
             }
             if (((unsigned int) iml4 > iml1)) {  /* greater length of this buffer */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             iml3 += iml4;                  /* add length of this field */
           }
           /* end of macro to skip one ASN.1 field                     */
           /* skip Signature Alg.                                      */
           /* macro to skip one ASN.1 field                            */
           iml3 += 2;                       /* add Tag Length one Byte */
           if (iml3 > iml1) {               /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (*((signed char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) >= 0) {  /* MSB not set */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1);  /* add integer value */
           } else {                         /* MSB set, multiple integer digits */
             iml2 = iml3;                   /* save current position   */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) & 0X7F;  /* add integer bytes */
             if (iml3 > iml1) {             /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             iml4 = 0;                      /* clear result            */
             while (iml2 < iml3) {          /* loop over integer digits */
               iml4 <<= 8;                  /* shift old value         */
               iml4 |= *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml2++);
             }
             if (((unsigned int) iml4 > iml1)) {  /* greater length of this buffer */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             iml3 += iml4;                  /* add length of this field */
           }
           /* end of macro to skip one ASN.1 field                     */
           /* skip Issuer                                              */
           /* macro to skip one ASN.1 field                            */
           iml3 += 2;                       /* add Tag Length one Byte */
           if (iml3 > iml1) {               /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (*((signed char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) >= 0) {  /* MSB not set */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1);  /* add integer value */
           } else {                         /* MSB set, multiple integer digits */
             iml2 = iml3;                   /* save current position   */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) & 0X7F;  /* add integer bytes */
             if (iml3 > iml1) {             /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             iml4 = 0;                      /* clear result            */
             while (iml2 < iml3) {          /* loop over integer digits */
               iml4 <<= 8;                  /* shift old value         */
               iml4 |= *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml2++);
             }
             if (((unsigned int) iml4 > iml1)) {  /* greater length of this buffer */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             iml3 += iml4;                  /* add length of this field */
           }
           /* end of macro to skip one ASN.1 field                     */
           /* skip validity                                            */
           /* macro to skip one ASN.1 field                            */
           iml3 += 2;                       /* add Tag Length one Byte */
           if (iml3 > iml1) {               /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (*((signed char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) >= 0) {  /* MSB not set */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1);  /* add integer value */
           } else {                         /* MSB set, multiple integer digits */
             iml2 = iml3;                   /* save current position   */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) & 0X7F;  /* add integer bytes */
             if (iml3 > iml1) {             /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             iml4 = 0;                      /* clear result            */
             while (iml2 < iml3) {          /* loop over integer digits */
               iml4 <<= 8;                  /* shift old value         */
               iml4 |= *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml2++);
             }
             if (((unsigned int) iml4 > iml1)) {  /* greater length of this buffer */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             iml3 += iml4;                  /* add length of this field */
           }
           /* end of macro to skip one ASN.1 field                     */
           /* skip subject                                             */
           /* macro to skip one ASN.1 field                            */
           iml3 += 2;                       /* add Tag Length one Byte */
           if (iml3 > iml1) {               /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (*((signed char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) >= 0) {  /* MSB not set */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1);  /* add integer value */
           } else {                         /* MSB set, multiple integer digits */
             iml2 = iml3;                   /* save current position   */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) & 0X7F;  /* add integer bytes */
             if (iml3 > iml1) {             /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             iml4 = 0;                      /* clear result            */
             while (iml2 < iml3) {          /* loop over integer digits */
               iml4 <<= 8;                  /* shift old value         */
               iml4 |= *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml2++);
             }
             if (((unsigned int) iml4 > iml1)) {  /* greater length of this buffer */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             iml3 += iml4;                  /* add length of this field */
           }
           /* end of macro to skip one ASN.1 field                     */
           /* skip length subjectPublicKeyInfo                         */
           iml3 += 2;                       /* add Tag Length one Byte */
           if (iml3 > iml1) {               /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (*((signed char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) < 0) {  /* MSB set */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) & 0X7F;  /* add integer digits */
           }
           /* skip algorithm ID                                        */
           /* macro to skip one ASN.1 field                            */
           iml3 += 2;                       /* add Tag Length one Byte */
           if (iml3 > iml1) {               /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (*((signed char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) >= 0) {  /* MSB not set */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1);  /* add integer value */
           } else {                         /* MSB set, multiple integer digits */
             iml2 = iml3;                   /* save current position   */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) & 0X7F;  /* add integer bytes */
             if (iml3 > iml1) {             /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             iml4 = 0;                      /* clear result            */
             while (iml2 < iml3) {          /* loop over integer digits */
               iml4 <<= 8;                  /* shift old value         */
               iml4 |= *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml2++);
             }
             if (((unsigned int) iml4 > iml1)) {  /* greater length of this buffer */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             iml3 += iml4;                  /* add length of this field */
           }
           /* end of macro to skip one ASN.1 field                     */
           /* skip length subjectPublicKey                             */
           iml3 += 2;                       /* add Tag Length one Byte */
           if (iml3 > iml1) {               /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (*((signed char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) < 0) {  /* MSB set */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) & 0X7F;  /* add integer digits */
           }
           iml3++;
           /* skip Modulus & Exp                                       */
           iml3 += 2;                       /* add Tag Length one Byte */
           if (iml3 > iml1) {               /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (*((signed char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) < 0) {  /* MSB set */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) & 0X7F;  /* add integer digits */
           }
           /* now Exponent                                             */
           iml3 += 2;                       /* add Tag Length one Byte */
           if (iml3 > iml1) {               /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (*((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 2) != 0X02) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           /* get length of field Modulus                              */
           if (*((signed char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) >= 0) {  /* MSB not set */
             iml4 = *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1);  /* get integer value */
           } else {                         /* MSB set, multiple integer digits */
             iml2 = iml3;                   /* save current position   */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) & 0X7F;  /* add integer bytes */
             if (iml3 > iml1) {             /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             iml4 = 0;                      /* clear result            */
             while (iml2 < iml3) {          /* loop over integer digits */
               iml4 <<= 8;                  /* shift old value         */
               iml4 |= *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml2++);
             }
           }
           if ((iml3 + iml4) > iml1) {      /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           /* check power of two                                       */
           iml5 = iml4;
           iml6 = 32 - 1;
           while (iml5 > 0) {
             iml6--;                        /* subtract one position bit */
             iml5 <<= 1;                    /* remove this bit         */
           }
           iml5 = 1 << iml6;                /* compute power of two    */
           if (iml5 > D_RSA_KEY_SIZE) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (iml4 > (iml5 + 2)) {         /* too many leading bytes  */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           /* check if leading bytes are zero                          */
           while (iml4 > iml5) {            /* remove leading zeroes */
             if (*((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3) != 0)  {  /* check zero */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             iml3++;                        /* increment address       */
             iml4--;                        /* decrement length        */
           }
           D_ADSL_RCL1->imc_len_cert_key = iml4;  /* length RSA key    */
           D_ADSL_RCL1->achc_cert_key       /* RSA key                 */
               = (char *) m_aux_stor_alloc( &ADSL_RDPA_F->dsc_stor_sdh_1, iml4 );
           memcpy( D_ADSL_RCL1->achc_cert_key,
                   (unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3,
                   iml4 );

           iml3 += iml4;                    /* after field Exponent    */
           /* now Modulus                                              */
           iml3 += 2;                       /* add Tag Length one Byte */
           if (iml3 > iml1) {               /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (*((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 2) != 0X02) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           /* get length of field Exponent                             */
           if (*((signed char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) >= 0) {  /* MSB not set */
             iml4 = *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1);  /* get integer value */
           } else {                         /* MSB set, multiple integer digits */
             iml2 = iml3;                   /* save current position   */
             iml3 += *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3 - 1) & 0X7F;  /* add integer bytes */
             if (iml3 > iml1) {             /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             iml4 = 0;                      /* clear result            */
             while (iml2 < iml3) {          /* loop over integer digits */
               iml4 <<= 8;                  /* shift old value         */
               iml4 |= *((unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml2++);
             }
           }
           if ((iml4 < 2) || (iml4 > 4)) {  /* check ranges            */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if ((iml3 + iml4) > iml1) {      /* after end of buffer     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           achl1 = D_ADSL_RCL1->chrc_cert_exp;
           if (iml4 < sizeof(D_ADSL_RCL1->chrc_cert_exp)) {
             memset( achl1, 0, sizeof(D_ADSL_RCL1->chrc_cert_exp) - iml4 );
             achl1 += sizeof(D_ADSL_RCL1->chrc_cert_exp) - iml4;
           }
           memcpy( achl1,
                   (unsigned char *) D_ADSL_RCL1->ac_temp_buffer + iml3,
                   iml4 );
           /* certificate now processed                                */
           if (D_ADSL_RCL1->imc_pos_inp_frame == 0) {  /* end of block */
             if (D_ADSL_RCL1->imc_prot_4 != 7) {  /* not all fields received */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_rec_type;  /* first record type */
             D_ADSL_RCL1->iec_frse_bl = ied_frse_rec_07;
             goto pfrse_send_erect_domain_request_pdu;
           }
           D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_sel_t;  /* block 4 selection */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           goto pfrse20;                    /* process next data       */
         case ied_frse_actpdu_cap_len:      /* get capabilities length */
           switch (D_ADSL_RCL1->imc_prot_6) {
             case 2:                        /* bitmap capability       */
               if (D_ADSL_RCL1->imc_prot_7) {  /* double               */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
               }
               if (D_ADSL_RCL1->achc_prot_1 < (D_ADSL_RCL1->chrc_prot_1 + 16)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
               }
               memcpy( D_ADSL_RCL1->chrc_prot_2 + 0,
                       D_ADSL_RCL1->chrc_prot_1 + 8,
                       4 );
               memcpy( D_ADSL_RCL1->chrc_prot_2 + 4,
                       D_ADSL_RCL1->chrc_prot_1 + 0,
                       2 );
               D_ADSL_RCL1->imc_prot_7 = 1;  /* set value found        */
               break;
           }
           D_ADSL_RCL1->imc_prot_5--;       /* one capability less     */
           if (D_ADSL_RCL1->imc_prot_5) {   /* more to follow          */
             D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
             if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
             D_ADSL_RCL1->imc_prot_1 = 0;   /* clear value             */
             D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
             D_ADSL_RCL1->iec_frse_bl = ied_frse_actpdu_cap_ind;  /* get capabilities index */
             goto pfrse20;                  /* process next data       */
           }
           if (D_ADSL_RCL1->imc_prot_7 == 0) {  /* screen parameters not found */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           bol1 = m_make_screen( adsp_hl_clib_1, D_ADSL_RCL1->chrc_prot_2 );
           if (bol1 == FALSE) {             /* screen parameters invalid */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           /* check if till end of capabilities                        */
           if (D_ADSL_RCL1->imc_pos_inp_frame != D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (D_ADSL_RCL1->imc_pos_inp_frame != 4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_2 = 0;     /* number of bytes         */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_big_e;  /* int big endian */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_actpdu_trail;  /* trailer of act PDU */
           goto pfrse20;                    /* process next data       */
         case ied_frse_rdp4_vch_ulen:       /* virtual channel uncompressed data length */
           goto pfrse_vch_00;               /* virtual channel data received */
         case ied_frse_r5_pdu_ord_buf:      /* RDP 5 PDU order buffer  */
#ifdef D_FOR_TRACE1                         /* 31.05.05 KB - help in tracing */
           iml1++;
           iml1--;
#endif                                      /* 31.05.05 KB - help in tracing */
           /*
             imc_prot_4   end of this PDU group
      ??     imc_prot_5   number of orders
      ??     imc_prot_6   extra order flags
             imc_prot_7   compressed length in 14 bits + 40
             imc_prot_8   end of this order
           */
           iml1 = D_ADSL_RCL1->imc_prot_7 & 0X3FFF;  /* length compressed data */
           bol1 = D_ADSL_RCO1->adsc_progaddr_1->amc_decomp_01_x( adsp_hl_clib_1,
                    D_ADSL_RCL1->adsc_prot_cache_1,
                    (char *) D_ADSL_RCL1->ac_temp_buffer, iml1 );
           if (bol1 == FALSE) {             /* subroutine returned error */
             m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d case ied_frse_r5_pdu_ord_buf: bitmap decompression failed",
                           __LINE__, 11203 );  /* line number for errors  */
           }
//         D_ADSL_RCL1->imc_prot_5--;       /* decrement number of orders */
           D_ADSL_RCL1->imc_no_cmd_frame--;  /* decrement number of orders */
//         if (D_ADSL_RCL1->imc_prot_5)     /* more orders follow      */
           if (D_ADSL_RCL1->imc_no_cmd_frame) {  /* more orders follow */
             if (D_ADSL_RCL1->imc_pos_inp_frame <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_ord_fl;  /* RDP 5 control order flags */
             goto pfrse20;                  /* needs more data         */
           }
           if (D_ADSL_RCL1->imc_pos_inp_frame != 0) {  /* not end of block */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_rec_type;  /* receive record type */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_any_pdu_rec;  /* ????ive block active PDU */
           goto pfrse20;                    /* process next data       */
         case ied_frse_r5_pdu_primord:      /* RDP 5 PDU primary order */
           goto pfrse_end_order;            /* end of this order       */
         case ied_frse_r5_pdu_apply_order:  /* RDP 5 PDU apply order   */
           goto pfrse_po_apply_order;       /* apply the order         */
         case ied_frse_r5_o01_brush_data:   /* RDP 5 order 1 brush data */
           goto pfrse_po_apply_order;       /* apply the order         */
         case ied_frse_r5_o0e_brush_data:   /* RDP 5 order 14 brush data */
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case ied_frse_r5_o10_brush_data:   /* RDP 5 order 16 brush data */
       /* generated from macro M_CO_O10_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case ied_frse_r5_o15_brush_data:   /* RDP 5 order 21/15H brush data */
       /* generated from macro M_CO_O15_FIELDS()                       */
       /* PolygonCB (POLYGON_CB_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case ied_frse_r5_o1a_brush_data:   /* RDP 5 order 26/0X1A brush data */
           goto pfrse_po_apply_order;       /* apply the order         */
         case ied_frse_r5_o1b_brush_data:   /* RDP 5 order 27/0X1B brush data */
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case ied_frse_lic_pr_req_rand:  /* server license request (after) random */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
           goto pfrse20;                /* process next data       */
         case ied_frse_lic_pr_req_cert:  /* server license request (before) certificate */
           iml1 = 4 + 4 + m_get_le4( D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 + 4 );
           iml2 = m_get_le2( D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 + iml1 + sizeof(ucrs_lic_bef_cert) );
           if ( memcmp( D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 + iml1,
                 ucrs_lic_bef_cert, sizeof(ucrs_lic_bef_cert) )) {
             if ( (! memcmp( D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 + iml1,
                     ucrs_lic_bef_cert, sizeof(ucrs_lic_bef_cert)-2 ))
                  && (D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1[iml1 + sizeof(ucrs_lic_bef_cert)-1] == (char)0xF5)
                  && (iml2 == 0) ) {
// to-do 22.07.11 KB - nothing to do and no printf ???
#ifdef TRACEHL1_LIC
             printf( "unknown format in Server License Request occurred again: "
                     "%02X F5 00 00 instead of Server Certificate blobheader\n",
                     D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1[sizeof(ucrs_lic_bef_cert)-2] );
#endif
             } else {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
           }
           if (iml2 == 0) {                 /* no special licensing certificate given */
             D_ADSL_RCO1->adsc_lic_neg->chrc_lic_cert_exp = ADSL_RDPA_F->dsc_rdp_cl_1.chrc_cert_exp;
             D_ADSL_RCO1->adsc_lic_neg->imc_lic_cert_exp_len = sizeof(ADSL_RDPA_F->dsc_rdp_cl_1.chrc_cert_exp);
             D_ADSL_RCO1->adsc_lic_neg->chrc_lic_cert_key = ADSL_RDPA_F->dsc_rdp_cl_1.achc_cert_key;  /* RSA key */
             D_ADSL_RCO1->adsc_lic_neg->imc_lic_cert_key_len = ADSL_RDPA_F->dsc_rdp_cl_1.imc_len_cert_key;  /* length RSA key */
             D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes */
             D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
             D_ADSL_RCL1->iec_frse_bl = ied_frse_lic_pr_req_scopelist;  /* parse scopelist. Len of list first */
             D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
             goto pfrse20;
           }
           D_ADSL_RCL1->imc_prot_6 = D_ADSL_RCL1->imc_pos_inp_frame - iml2;
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_type_pub_par;  /* licensing certificate, parsed like block 4 type public parameters */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
           goto pfrse20;                    /* process next data       */
         case ied_frse_lic_pr_req_scopelist:
           D_ADSL_RCL1->iec_frse_bl = ied_frse_lic_pr_req_cert;
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_send_from_server;  /* send data to client */
           goto pfrse40;                    /* send RDP4 to client     */
         case ied_frse_lic_pr_chll:         /* platform challenge      */
           iml1 = m_get_le2(D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1); /* hwid length */
#define ACHL_WORK_RC4 ((char *) chrl_work_2)
#define ACHL_WORK_SHA1 ((int *) ((char *) ACHL_WORK_RC4 + RC4_STATE_SIZE))
#define ACHL_WORK_MD5 ((int *) ((char *) ACHL_WORK_SHA1 + SHA_ARRAY_SIZE * sizeof(int)))
#define ACHL_WORK_UTIL_01 ((char *) ACHL_WORK_MD5 + MD5_ARRAY_SIZE * sizeof(int))
#define ACHL_WORK_CHLL ((char *) ACHL_WORK_UTIL_01 + 20)
           /* decrypt */
           /* In Licensing JWT initializes the state before every call of RC4. */
           memcpy(ACHL_WORK_RC4, D_ADSL_RCO1->adsc_lic_neg->chrc_rc4_state_se2cl, RC4_STATE_SIZE);
           RC4( D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1, 2, iml1,
                ACHL_WORK_CHLL, 0,
                ACHL_WORK_RC4 );
           memcpy( D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 + 2, ACHL_WORK_CHLL, iml1 );
#ifdef TRACEHL1_LIC
           printf( "l%05d s%05d decrypted challenge teststring.\n",
                   __LINE__, 11560 );
           m_console_out( ACHL_WORK_CHLL, iml1 );
#endif
           /* calculate the challenged hash                            */
           memcpy( ACHL_WORK_SHA1,
                   D_ADSL_RCO1->adsc_lic_neg->imrc_sha1_state,
                   sizeof(D_ADSL_RCO1->adsc_lic_neg->imrc_sha1_state) );
           memcpy( ACHL_WORK_MD5,
                   D_ADSL_RCO1->adsc_lic_neg->imrc_md5_state,
                   sizeof(D_ADSL_RCO1->adsc_lic_neg->imrc_md5_state) );
           m_put_le4( ACHL_WORK_UTIL_01, iml1 );
           SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0, 4 );
           SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_CHLL, 0, iml1 );
           SHA1_Final( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0 );
           MD5_Update( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0, 20 );
           MD5_Final( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0 );
           /* compare hash                                             */
           if (memcmp( D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 + 2 + iml1, ACHL_WORK_UTIL_01, 16 )) {
#ifdef TRACEHL1
             printf( "s%05d l%05d received from server licensing platform challenge hash fail\n",
                     11580,        /* source line no for errors */
                     __LINE__ );            /* line number for errors  */
#endif
             /* [MS-RDPELE] 3.1.5.1 says the client MUST send a LICENSE_ERROR_MESSAGE - see [MS-RDPBCGR] 2.2.1.12.1.3
             memcpy( chrl_work_2, ucrs_lic_err_hash, sizeof(ucrs_lic_err_hash) );
             m_put_be2( chrl_work_2 + 8, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_userid_cl2se );
             m_put_be2( chrl_work_2 + 10, D_DISPLAY_CHANNEL );
             ... XXX how to send something and after that exit with an error? */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
#undef ACHL_RC4_STATE
#undef ACHL_WORK_SHA1
#undef ACHL_WORK_MD5
#undef ACHL_WORK_UTIL_01
#undef ACHL_WORK_CHLL
           /* send data to client                                      */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_send_from_server;
           goto pfrse40;                    /* send RDP4 to client     */
       }
           goto pfrse96;                    /* program illogic         */
     case ied_fsfp_cmp_zero:                /* compare with zeroes     */
       /* compute how many to compare                                  */
       iml1 = D_ADSL_RCL1->imc_pos_inp_frame
                - D_ADSL_RCL1->imc_prot_count_in;
       if (iml1 > iml_rec) iml1 = iml_rec;
       D_ADSL_RCL1->imc_pos_inp_frame -= iml1;  /* length constant     */
       do {
         if (*adsl_gai1_inp_1->achc_ginp_cur) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         adsl_gai1_inp_1->achc_ginp_cur++;  /* next character input    */
         iml1--;                            /* decrement count         */
       } while (iml1 > 0);
       if (D_ADSL_RCL1->imc_pos_inp_frame > D_ADSL_RCL1->imc_prot_count_in) {
         goto pfrse20;                      /* needs more data         */
       }
//       case ied_frse_deaap_rec:           /* Deactivate All PDU Data */
           if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower) < sizeof(struct dsd_se_co1)) {  /* get new area */
             memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
             bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                                DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                                &dsl_aux_get_workarea,
                                                sizeof(struct dsd_aux_get_workarea) );
             if (bol1 == FALSE) {           /* aux returned error      */
               adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
               goto p_cleanup_20;           /* do cleanup now          */
             }
             ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
             ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
           }
           ADSL_OA1->achc_upper -= sizeof(struct dsd_se_co1);
#define ADSL_SE_CO1_G ((struct dsd_se_co1 *) ADSL_OA1->achc_upper)
           ADSL_SE_CO1_G->iec_se_command = ied_sec_d_deact_pdu;  /* received demand de-active PDU */
           ADSL_SE_CO1_G->adsc_next = NULL;  /* clear chain field      */
           *ADSL_OA1->aadsc_se_co1_chain = ADSL_SE_CO1_G;  /* append to chain */
           ADSL_OA1->aadsc_se_co1_chain = &ADSL_SE_CO1_G->adsc_next;  /* set new end of chain */
#undef ADSL_SE_CO1_G
           D_ADSL_RCL1->iec_frse_bl = ied_frse_act_pdu_rec;  /* receive block active PDU */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_rec_type;  /* receive record type */
           goto pfrse20;                    /* process next data       */
     case ied_fsfp_r04_rdp_v:               /* block 4 RDP version     */
       if (*adsl_gai1_inp_1->achc_ginp_cur != 0X04) {
         m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d invalid RDP version %02X.",
                       __LINE__, 11655,  /* line number for errors */
                       (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur );
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       adsl_gai1_inp_1->achc_ginp_cur++;    /* next byte input         */
       D_ADSL_RCL1->imc_pos_inp_frame--;    /* length constant         */
       if (D_ADSL_RCL1->imc_prot_2 >= D_ADSL_RCL1->imc_pos_inp_frame) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
#ifdef XYZ1
       D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
       D_ADSL_RCL1->imc_prot_1 = 0;         /* clear value             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
#endif
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_ignore;  /* ignore data     */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_rec_type:                /* get type of record      */
#ifdef OLD01
       if (D_ADSL_RCL1->iec_frse_bl == ied_frse_rec_02) {
         if (ADSL_RDPA_F->inc_send_server_len) {  /* still something to send */
           goto pfrse92;                    /* protocol error          */
         }
       }
#endif
       switch ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur) {
         case 0X00:                         /* RDP 5 record            */
/* 28.07.08 KB receive also 0X80 */
         case 0X80:                         /* RDP 5 record encrypted  */
         case 0XC0:                         /* RDP 5 record encrypted  */
#ifdef D_FOR_TRACE1                         /* 31.05.05 KB - help in tracing */
           iml1++;
           iml1--;
#endif                                      /* 31.05.05 KB - help in tracing */
           if (D_ADSL_RCL1->iec_frse_bl == ied_frse_any_pdu_rec) {  /* ????ive block active PDU */
             D_ADSL_RCL1->chc_prot_r5_first = *adsl_gai1_inp_1->achc_ginp_cur;
             D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_len_1;  /* RDP 5 multi length 1 */
             break;
           }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         case 0X03:                         /* RDP 4 record            */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_byte01;  /* receive byte 01 */
           break;
         default:
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       adsl_gai1_inp_1->achc_ginp_cur++;    /* next byte input         */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_byte01:                  /* receive byte 01         */
       if (*adsl_gai1_inp_1->achc_ginp_cur) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       adsl_gai1_inp_1->achc_ginp_cur++;    /* next byte input         */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_lencons_2;  /* receive len c */
       D_ADSL_RCL1->imc_prot_1 = 0;         /* clear length field      */
       D_ADSL_RCL1->imc_pos_inp_frame = 0;  /* no length frame yet     */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_lencons_2:               /* two bytes length remain */
/* nothing before - fill field 07.08.04 KB */
       D_ADSL_RCL1->imc_prot_1 <<= 8;
       D_ADSL_RCL1->imc_prot_1
         |= (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_lencons_1;  /* receive len c */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_lencons_1:               /* one byte length remains */
       D_ADSL_RCL1->imc_prot_1 <<= 8;
       D_ADSL_RCL1->imc_prot_1
         |= (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d ied_fsfp_lencons_1 received len=%d/0X%04X imc_pos_inp_frame=%d/0X%04X.",
                     __LINE__, 11778,  /* line number for errors */
                     D_ADSL_RCL1->imc_prot_1,
                     D_ADSL_RCL1->imc_prot_1,
                     D_ADSL_RCL1->imc_pos_inp_frame,
                     D_ADSL_RCL1->imc_pos_inp_frame );
       if (D_ADSL_RCL1->imc_pos_inp_frame == 0) {  /* no len frame yet  */
         D_ADSL_RCL1->imc_pos_inp_frame = D_ADSL_RCL1->imc_prot_1 - 4;
         if (D_ADSL_RCL1->imc_pos_inp_frame <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
#ifdef HELP_DEBUG
         D_ADSL_RCO1->imc_debug_reclen = D_ADSL_RCL1->imc_prot_1;
#endif
       } else {
         D_ADSL_RCL1->imc_pos_inp_frame -= 2;  /* adjust length remaining */
         if (D_ADSL_RCL1->imc_pos_inp_frame < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
       }
       switch (D_ADSL_RCL1->iec_frse_bl) {
         case ied_frse_start:               /* reply from server to first packet */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_asn1_l1_fi;  /* ASN.1 length field */
           goto pfrse20;                    /* process next data       */
         case ied_frse_rec_04:              /* block 4 received        */
         case ied_frse_rec_07:              /* block 7 received        */
         case ied_frse_cjresp_rec:          /* receive block channel join response */
         case ied_frse_lic_pr_1_rec:        /* receive block licence protocol */
         case ied_frse_act_pdu_rec:         /* receive block active PDU */
         case ied_frse_error_bl_01:         /* receive error block 01  */
         case ied_frse_any_pdu_rec:         /* ????ive block active PDU */
           if (D_ADSL_RCL1->imc_pos_inp_frame <= sizeof(ucrs_x224_p01)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_x224_p01;  /* is in x224 header */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* position                */
           goto pfrse20;                    /* process next data       */
//       default:
//         goto pfrse96;                    /* program illogic         */
       }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
     case ied_fsfp_x224_p01:                /* is in x224 header       */
       iml1 = sizeof(ucrs_x224_p01);        /* get length              */
       if (iml1 > (D_ADSL_RCL1->imc_prot_1 + iml_rec)) {
         iml1 = D_ADSL_RCL1->imc_prot_1 + iml_rec;
       }
       iml1 -= D_ADSL_RCL1->imc_prot_1;
       if (memcmp( ucrs_x224_p01 + D_ADSL_RCL1->imc_prot_1,
                   adsl_gai1_inp_1->achc_ginp_cur,
                   iml1 )) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_1 += iml1;
       adsl_gai1_inp_1->achc_ginp_cur += iml1;
       D_ADSL_RCL1->imc_pos_inp_frame -= iml1;  /* length constant     */
       if (D_ADSL_RCL1->imc_prot_1 < sizeof(ucrs_x224_p01)) {
         goto pfrse20;                      /* get more input          */
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_mcs_c1;  /* MCS command 1   */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_mcs_c1:                  /* MCS command 1           */
       switch (*adsl_gai1_inp_1->achc_ginp_cur) {
         case 0X20:                         /* MCS end of comm - machine down ???? UUUU */
         case 0X21:                         /* MCS end of comm ???? UUUU */
           if (D_ADSL_RCL1->iec_frse_bl != ied_frse_act_pdu_rec) {  /* receive block active PDU */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_1 = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur;
           adsl_gai1_inp_1->achc_ginp_cur++;  /* next byte input       */
           D_ADSL_RCL1->imc_pos_inp_frame--;  /* length constant       */
           if (D_ADSL_RCL1->imc_pos_inp_frame <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_end_com;  /* end of communication */
           goto pfrse20;                    /* process next data       */
         case 0X2E:                         /* MCS Attach User reply   */
           if (D_ADSL_RCL1->iec_frse_bl != ied_frse_rec_07) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           adsl_gai1_inp_1->achc_ginp_cur++;  /* next byte input       */
           D_ADSL_RCL1->imc_pos_inp_frame--;  /* length constant       */
           if (D_ADSL_RCL1->imc_pos_inp_frame <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_status;  /* status from server */
           goto pfrse20;                    /* process next data       */
         case 0X3E:                         /* MCS channel join response */
           if (D_ADSL_RCL1->iec_frse_bl != ied_frse_cjresp_rec) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           adsl_gai1_inp_1->achc_ginp_cur++;  /* next byte input       */
           D_ADSL_RCL1->imc_pos_inp_frame--;  /* length constant       */
           if (D_ADSL_RCL1->imc_pos_inp_frame <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_status;  /* status from server */
           goto pfrse20;                    /* process next data       */
         case 0X68:                         /* Send Data Indication    */
           switch (D_ADSL_RCL1->iec_frse_bl) {
             case ied_frse_lic_pr_1_rec:    /* receive block licence protocol */
             case ied_frse_act_pdu_rec:     /* receive block active PDU */
             case ied_frse_error_bl_01:     /* receive error block 01  */
             case ied_frse_any_pdu_rec:     /* ????ive block active PDU */
               break;
             default:
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           adsl_gai1_inp_1->achc_ginp_cur++;  /* next byte input       */
           D_ADSL_RCL1->imc_pos_inp_frame--;  /* length constant       */
           if (D_ADSL_RCL1->imc_pos_inp_frame <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_userid_se2cl;  /* userid communication follows */
           goto pfrse20;                    /* process next data       */
         case 0X7F:                         /* MCS connect reply       */
           if (D_ADSL_RCL1->iec_frse_bl != ied_frse_rec_04) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           adsl_gai1_inp_1->achc_ginp_cur++;  /* next byte input       */
           D_ADSL_RCL1->imc_pos_inp_frame--;  /* length constant       */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_mcs_c2;  /* MCS command 2 */
           goto pfrse20;                    /* process next data       */
       }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
     case ied_fsfp_mcs_c2:                  /* MCS command 2           */
       switch (*adsl_gai1_inp_1->achc_ginp_cur) {
         case 0X66:                         /* MCS connect reply       */
           if (D_ADSL_RCL1->iec_frse_bl != ied_frse_rec_04) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           adsl_gai1_inp_1->achc_ginp_cur++;  /* next byte input       */
           D_ADSL_RCL1->imc_pos_inp_frame--;  /* length constant       */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
             goto pfrse92;                  /* protocol error          */
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_asn1_l1_fi;  /* ASN.1 length field */
           goto pfrse20;                    /* process next data       */
       }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
     case ied_fsfp_status:                  /* status from server      */
       if (*adsl_gai1_inp_1->achc_ginp_cur) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       adsl_gai1_inp_1->achc_ginp_cur++;    /* next byte input         */
       D_ADSL_RCL1->imc_pos_inp_frame--;    /* length constant         */
       switch (D_ADSL_RCL1->iec_frse_bl) {
         case ied_frse_rec_07:
           if (D_ADSL_RCL1->imc_pos_inp_frame != 2) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_2 = 0;     /* number of bytes         */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_big_e;  /* int big endian */
           goto pfrse20;                    /* process next data       */
         case ied_frse_cjresp_rec:          /* receive block channel join response */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_userid_cl2se;  /* userid client to server follows */
           goto pfrse20;                    /* process next data       */
       }
           goto pfrse96;                    /* program illogic         */
     case ied_fsfp_userid_se2cl:            /* userid server to client follows */
       while (TRUE) {
         D_ADSL_RCL1->imc_prot_1 <<= 8;
         D_ADSL_RCL1->imc_prot_1
           |= (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d ied_fsfp_userid_se2cl found int=%d D_ADSL_RCL1->iec_frse_bl=%d.",
                     __LINE__, 12142,  /* line number for errors */
                     D_ADSL_RCL1->imc_prot_1,
                     D_ADSL_RCL1->iec_frse_bl );
       if (D_ADSL_RCL1->imc_prot_1 != D_USERID_SE2CL) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_chno = 0;      /* clear value             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_chno;  /* channel no follows */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_userid_cl2se:            /* userid client to server follows */
       while (TRUE) {
         D_ADSL_RCL1->imc_prot_1 <<= 8;
         D_ADSL_RCL1->imc_prot_1
           |= (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
#ifdef TRACEHL1
       printf( "ied_fsfp_userid_cl2se found int=%d D_ADSL_RCL1->iec_frse_bl=%d\n",
               D_ADSL_RCL1->imc_prot_1,
               D_ADSL_RCL1->iec_frse_bl );
#endif
       if (D_ADSL_RCL1->imc_prot_1 != D_ADSL_RCO1->usc_userid_cl2se) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_chno = 0;      /* clear value             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_chno;  /* channel no follows */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_chno:                    /* channel number follows  */
       while (TRUE) {
         D_ADSL_RCL1->imc_prot_chno <<= 8;
         D_ADSL_RCL1->imc_prot_chno
           |= (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d ied_fsfp_chno found int=%d D_ADSL_RCL1->iec_frse_bl=%d.",
                     __LINE__, 12205,  /* line number for errors */
                     D_ADSL_RCL1->imc_prot_chno,
                     D_ADSL_RCL1->iec_frse_bl );
       switch (D_ADSL_RCL1->iec_frse_bl) {
         case ied_frse_cjresp_rec:          /* receive block channel join response */
           if (D_ADSL_RCL1->imc_pos_inp_frame != 2) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_2 = 0;     /* number of bytes         */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_big_e;  /* int big endian */
           goto pfrse20;                    /* process next data       */
         case ied_frse_lic_pr_1_rec:        /* receive block licence protocol */
         case ied_frse_act_pdu_rec:         /* receive block active PDU */
         case ied_frse_error_bl_01:         /* receive error block 01  */
         case ied_frse_any_pdu_rec:         /* ????ive block active PDU */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_prio_seg;  /* Priority / Segmentation */
           goto pfrse20;                    /* process next data       */
       }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
     case ied_fsfp_prio_seg:                /* Priority / Segmentation */
//     if (*adsl_gai1_inp_1->achc_ginp_cur != 0X70) {
//       goto pfrse92;                      /* protocol error          */
//     }
/* 05.01.05 check channel - display channel always 0X70 */
       adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCL1->imc_pos_inp_frame <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_mu_len_1;  /* multi length 1 */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_rt02:                    /* record type 2           */
       D_ADSL_RCL1->chc_prot_rt02 = *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCL1->imc_pos_inp_frame <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_rt03;  /* record type 3     */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_rt03:                    /* record type 3           */
       D_ADSL_RCL1->chc_prot_rt03 = *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCL1->imc_pos_inp_frame <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* two bytes padding follow - to be ignored                     */
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_padd_1;  /* padding         */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_padd_1:                  /* padding                 */
       /* compute how many to ignore                                   */
       iml1 = D_ADSL_RCL1->imc_pos_inp_frame
                - D_ADSL_RCL1->imc_prot_2;
       if (iml1 > iml_rec) iml1 = iml_rec;
       adsl_gai1_inp_1->achc_ginp_cur += iml1;
       D_ADSL_RCL1->imc_pos_inp_frame -= iml1;  /* length constant     */
       if (D_ADSL_RCL1->imc_pos_inp_frame > D_ADSL_RCL1->imc_prot_2) {
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_rt02 & 0X08) {  /* block encyrpted    */
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - D_SIZE_HASH;
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCL1->chrc_prot_1;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_rdp4_hash;  /* hash RDP4 block */
         goto pfrse20;                        /* process next data       */
       }
       if (D_ADSL_RCL1->chc_prot_rt02 & 0X80) {  /* SEC_LICENSE_PKT    */
         if (   (D_ADSL_RCL1->iec_frse_bl != ied_frse_lic_pr_1_rec)  /* receive block licence protocol */
             && (D_ADSL_RCL1->iec_frse_bl != ied_frse_any_pdu_rec)) {  /* ????ive block active PDU */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         printf( "s%05d l%05d unencrypted licencing packet from server detected iec_frse_bl=%d iec_fsfp_bl=%d\n",
                 12411,            /* source line no for errors */
                 __LINE__,                  /* line number for errors  */
                 D_ADSL_RCL1->iec_frse_bl,
                 D_ADSL_RCL1->iec_fsfp_bl );
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes (preamble header) */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_prot_1 = 0;       /* clear value             */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_lic_pr_type;  /* licencing block to check */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e; /* int little endian (for length) */
         goto pfrse20;                      /* process next data       */
       }
       switch (D_ADSL_RCL1->iec_frse_bl) {
         case ied_frse_lic_pr_1_rec:        /* receive block licence protocol */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_send_from_server;  /* send data to client */
           goto pfrse40;                    /* send RDP4 to client     */
         case ied_frse_any_pdu_rec:         /* ????ive block active PDU */
           if (D_ADSL_RCL1->imc_prot_chno == D_ADSL_RCO1->usc_chno_disp) {  /* channel number display  */
             D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
             if (D_ADSL_RCL1->imc_prot_count_in < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
             D_ADSL_RCL1->imc_prot_akku = 0;  /* clear value           */
             D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_sch_len;  /* Share Control Header length */
             goto pfrse20;                  /* process next data       */
           }
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_rdp4_vch_ulen;  /* virtual channel uncompressed data length */
           goto pfrse20;                    /* process next data       */
         case ied_frse_act_pdu_rec:         /* receive block active PDU */
         case ied_frse_error_bl_01:         /* receive error block 01  */
           break;                           /* continue                */
         default:
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
       }
       if ((D_ADSL_RCL1->chc_prot_rt02 & 0XF7) == 0) {
         D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_count_in < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_prot_akku = 0;    /* clear value             */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_sch_len;  /* Share Control Header length */
         goto pfrse20;                      /* process next data       */
       }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
     case ied_fsfp_rdp4_hash:               /* hash RDP4 block         */
       /* compute how many to copy                                     */
       iml1 = D_ADSL_RCL1->imc_pos_inp_frame
                - D_ADSL_RCL1->imc_prot_2;
       if (iml1 > iml_rec) iml1 = iml_rec;
       memcpy( D_ADSL_RCL1->achc_prot_1,
               adsl_gai1_inp_1->achc_ginp_cur,
               iml1 );
       D_ADSL_RCL1->achc_prot_1 += iml1;
       adsl_gai1_inp_1->achc_ginp_cur += iml1;
       D_ADSL_RCL1->imc_pos_inp_frame -= iml1;  /* length constant     */
       if (D_ADSL_RCL1->imc_pos_inp_frame > D_ADSL_RCL1->imc_prot_2) {
         goto pfrse20;                      /* needs more data         */
       }
       /* check if all data of this frame have been received           */
       iml1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* remaining data in frame */
       adsl_gai1_inp_w2 = adsl_gai1_inp_1;  /* get gather              */
       while (TRUE) {                       /* loop over all gather structures input */
         iml1 -= adsl_gai1_inp_w2->achc_ginp_end - adsl_gai1_inp_w2->achc_ginp_cur;
         if (iml1 <= 0) break;              /* enough data found       */
         adsl_gai1_inp_w2 = adsl_gai1_inp_w2->adsc_next;  /* get next gather */
         if (adsl_gai1_inp_w2 == NULL) {    /* already end of chain    */
#ifdef TRACEHL1
         printf( "s%05d l%05d received from server need more data %d\n",
                 12561,            /* source line no for errors */
                 __LINE__,                  /* line number for errors  */
                 iml1 );                    /* length of data needed   */
#endif
           /* wait for more data                                       */
           goto p_ret_00;                   /* check how to return     */
         }
       }
#ifdef TRACEHL1
       printf( "s%05d l%05d received from server encrypted 26.10.06 KB\n",
               12571,              /* source line no for errors */
               __LINE__ );                  /* line number for errors  */
#endif
       if ((D_ADSL_RCO1->dsc_encry_se2cl.imc_count_sent & (4096 - 1)) == 0){
         if (D_ADSL_RCO1->dsc_encry_se2cl.imc_count_sent) {
           m_update_keys( D_ADSL_RCO1, &D_ADSL_RCO1->dsc_encry_se2cl, NULL );
         }
       }
       /* decrypt the data where they are                              */
       iml1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* remaining data in frame */
       adsl_gai1_inp_w2 = adsl_gai1_inp_1;  /* get gather              */
       while (TRUE) {                       /* loop over all gather structures input */
         iml2 = adsl_gai1_inp_w2->achc_ginp_end - adsl_gai1_inp_w2->achc_ginp_cur;
         if (iml2 > iml1) iml2 = iml1;      /* only data in this frame */
         RC4( adsl_gai1_inp_w2->achc_ginp_cur, 0, iml2,
              adsl_gai1_inp_w2->achc_ginp_cur, 0,
              D_ADSL_RCO1->dsc_encry_se2cl.chrc_rc4_state );
         iml1 -= iml2;                      /* subtract data decyrpted */
         if (iml1 <= 0) break;              /* all data decrypted      */
         adsl_gai1_inp_w2 = adsl_gai1_inp_w2->adsc_next;  /* get next gather */
         if (adsl_gai1_inp_w2 == NULL) {    /* already end of chain    */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
         }
       }
       /* check the hash now                                       */
#define ACHL_WORK_SHA1 ((int *) chrl_work_2)
#define ACHL_WORK_MD5 ((int *) ((char *) ((char *) ACHL_WORK_SHA1 + SHA_ARRAY_SIZE * sizeof(int))))
#define ACHL_WORK_UTIL_01 ((char *) ACHL_WORK_MD5 + MD5_ARRAY_SIZE * sizeof(int))
       memcpy( ACHL_WORK_SHA1,
               D_ADSL_RCO1->imrc_sha1_state,
               sizeof(D_ADSL_RCO1->imrc_sha1_state) );
       memcpy( ACHL_WORK_MD5,
               D_ADSL_RCO1->imrc_md5_state,
               sizeof(D_ADSL_RCO1->imrc_md5_state) );
       m_put_le4( ACHL_WORK_UTIL_01, D_ADSL_RCL1->imc_pos_inp_frame );
       SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0, 4 );
       iml1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* remaining data in frame */
       adsl_gai1_inp_w2 = adsl_gai1_inp_1;  /* get gather              */
       while (TRUE) {                       /* loop over all gather structures input */
         iml2 = adsl_gai1_inp_w2->achc_ginp_end - adsl_gai1_inp_w2->achc_ginp_cur;
         if (iml2 > iml1) iml2 = iml1;      /* only data in this frame */
         SHA1_Update( ACHL_WORK_SHA1,
                      adsl_gai1_inp_w2->achc_ginp_cur, 0, iml2 );
         iml1 -= iml2;                      /* subtract data processed */
         if (iml1 <= 0) break;              /* all data processed      */
         adsl_gai1_inp_w2 = adsl_gai1_inp_w2->adsc_next;  /* get next gather */
         if (adsl_gai1_inp_w2 == NULL) {    /* already end of chain    */
           goto pfrse96;                    /* program illogic         */
         }
       }
       if (D_ADSL_RCL1->chc_prot_rt03 & 0X08) {  /* flag for block count */
         m_put_le4( ACHL_WORK_UTIL_01, D_ADSL_RCO1->dsc_encry_se2cl.imc_count_sent );
         SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0, 4 );
       }
       SHA1_Final( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0 );
       MD5_Update( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0, 20 );
       MD5_Final( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0 );
       if (memcmp( D_ADSL_RCL1->chrc_prot_1, ACHL_WORK_UTIL_01, D_SIZE_HASH )) {
         m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d received from server hash invalid",
                       __LINE__, 12662 );  /* line number for errors  */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
#undef ACHL_WORK_SHA1
#undef ACHL_WORK_MD5
#undef ACHL_WORK_UTIL_01
       D_ADSL_RCO1->dsc_encry_se2cl.imc_count_sent++;  /* count block received from server */
       if (D_ADSL_RCL1->chc_prot_rt02 & 0X80) {  /* SEC_LICENSE_PKT    */
         if (   (D_ADSL_RCL1->iec_frse_bl != ied_frse_lic_pr_1_rec)  /* receive block licence protocol */
             && (D_ADSL_RCL1->iec_frse_bl != ied_frse_any_pdu_rec)) {  /* ????ive block active PDU */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         printf( "s%05d l%05d encrypted licencing packet from server detected iec_frse_bl=%d iec_fsfp_bl=%d\n",
                 12712,            /* source line no for errors */
                 __LINE__,                  /* line number for errors  */
                 D_ADSL_RCL1->iec_frse_bl,
                 D_ADSL_RCL1->iec_fsfp_bl );
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes (preamble header) */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_prot_1 = 0;       /* clear value             */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_lic_pr_type;  /* licencing block to check */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e; /* int little endian (for length) */
         goto pfrse20;                      /* process next data       */
       }
       switch (D_ADSL_RCL1->iec_frse_bl) {
         case ied_frse_lic_pr_1_rec:        /* receive block licence protocol */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_send_from_server;  /* send data to client */
           goto pfrse40;                    /* send RDP4 to client     */
         case ied_frse_any_pdu_rec:         /* receive any PDU type    */
           if (D_ADSL_RCL1->imc_prot_chno == D_ADSL_RCO1->usc_chno_disp) {  /* channel number display  */
             break;                         /* parse Share Control Header */
           }
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_rdp4_vch_ulen;  /* virtual channel uncompressed data length */
           goto pfrse20;                    /* process next data       */
         case ied_frse_act_pdu_rec:         /* receive block active PDU */
           break;                           /* continue                */
         default:
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
       }
       if ((D_ADSL_RCL1->chc_prot_rt02 & 0XF7) == 0) {
         D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_count_in < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_prot_akku = 0;    /* clear value             */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_sch_len;  /* Share Control Header length */
         goto pfrse20;                      /* process next data       */
       }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
     case ied_fsfp_sch_len:                 /* Share Control Header length */
       while (TRUE) {
         D_ADSL_RCL1->imc_prot_akku
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_aux1 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_count_in) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* length PDU including length bytes                            */
       if (D_ADSL_RCL1->imc_pos_inp_frame != (D_ADSL_RCL1->imc_prot_akku - 2)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_count_in < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
       D_ADSL_RCL1->imc_prot_pdu_type = 0;  /* clear value             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_sch_pdu_type;  /* Share Control Header PDU type */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_sch_pdu_type:            /* Share Control Header PDU type */
       while (TRUE) {
         D_ADSL_RCL1->imc_prot_pdu_type
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_aux1 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_count_in) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_count_in < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
       D_ADSL_RCL1->imc_prot_akku = 0;      /* clear value             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_sch_pdu_source;  /* Share Control Header PDU source */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_sch_pdu_source:          /* Share Control Header PDU source */
       while (TRUE) {
         D_ADSL_RCL1->imc_prot_akku
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_aux1 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_count_in) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* end of Share Control Header / TS_SHARECONTROLHEADER          */
       m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d sch - Share Control Header imc_prot_pdu_type=0X%04X PDU-source=0X%04X len-rem=0X%04X D_ADSL_RCL1->iec_frse_bl=%d.",
                     __LINE__, 12889,  /* line number for errors */
                     D_ADSL_RCL1->imc_prot_pdu_type,
                     D_ADSL_RCL1->imc_prot_akku,
                     D_ADSL_RCL1->imc_pos_inp_frame,
                     D_ADSL_RCL1->iec_frse_bl );
       if (D_ADSL_RCL1->imc_prot_pdu_type == D_DEMAND_ACT_PDU) {  /* is demand active PDU */
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_prot_1 = 0;       /* clear value             */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_actpdu_parse_shareid;  /* get share id */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
         goto pfrse20;                      /* process next data       */
       }
       if (D_ADSL_RCL1->iec_frse_bl != ied_frse_any_pdu_rec) {  /* receive any PDU type */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       switch (D_ADSL_RCL1->imc_prot_pdu_type) {
         case TS_DEACTIVATE_ALL_PDU:        /* Deactivate All PDU Data */
           D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_count_in <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_frse_bl = ied_frse_deaap_rec;  /* Deactivate All PDU Data */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_ignore;  /* ignore data */
           goto pfrse20;                    /* process next data       */
         case (0X10 | PDUTYPE_DATAPDU):     /* Data PDU                */
           goto pfrse40;                    /* send RDP4 data to client */
       }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
     case ied_fsfp_int_lit_e:               /* int little endian       */
       while (TRUE) {
         D_ADSL_RCL1->imc_prot_1
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d ied_fsfp_int_lit_e found int=%d D_ADSL_RCL1->iec_frse_bl=%d.",
                     __LINE__, 12945,  /* line number for errors */
                     D_ADSL_RCL1->imc_prot_1,
                     D_ADSL_RCL1->iec_frse_bl );
       switch (D_ADSL_RCL1->iec_frse_bl) {
         case ied_frse_start:               /* first block from server */
           if (D_ADSL_RCL1->imc_prot_save1 < 0) {  /* first retrieve type */
             D_ADSL_RCL1->imc_prot_save1 = D_ADSL_RCL1->imc_prot_akku;  /* save type */
             D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
             D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
             D_ADSL_RCL1->imc_prot_akku = 0;  /* clear value           */
             goto pfrse20;                  /* process next data       */
           }
           if (D_ADSL_RCL1->imc_prot_save1 != 0X0102) {  /* check type */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (D_ADSL_RCL1->imc_prot_akku != (2 + 2 + 4)) {  /* check length */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (D_ADSL_RCL1->imc_pos_inp_frame != 4) {  /* check till end of frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes */
           D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_akku = 0;  /* clear value             */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_sta_02;  /* start second field */
           goto pfrse20;                    /* process next data       */
         case ied_frse_sta_02:              /* start second field      */
           goto pfrse_send_secbl;           /* send second block to server */
         case ied_frse_rec_04:              /* record 4 received       */
           if (D_ADSL_RCL1->imc_pos_inp_frame != D_ADSL_RCL1->imc_prot_1) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_asn1_tag;
           goto pfrse20;                    /* needs more data         */
         case ied_frse_r04_sel_t:           /* block 4 selection tag   */
           switch (D_ADSL_RCL1->imc_prot_1) {
             case 0X0C01:                   /* version tag             */
               D_ADSL_RCL1->imc_prot_5 = 1;  /* type of tag            */
               break;
             case 0X0C02:                   /* encryption tag          */
               D_ADSL_RCL1->imc_prot_5 = 2;  /* type of tag            */
               break;
             case 0X0C03:                   /* virtual channel tag     */
               D_ADSL_RCL1->imc_prot_5 = 4;  /* type of tag            */
               break;
             default:
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (D_ADSL_RCL1->imc_prot_5 & D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_4 |= D_ADSL_RCL1->imc_prot_5;
           D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_sel_l;  /* block 4 selection length */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           goto pfrse20;                    /* needs more data         */
         case ied_frse_r04_sel_l:           /* block 4 selection length */
           D_ADSL_RCL1->imc_prot_1 -= 4;    /* minus tag and length    */
           if (D_ADSL_RCL1->imc_prot_1 <= 0) {  /* check length        */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame
                                     - D_ADSL_RCL1->imc_prot_1;
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           switch (D_ADSL_RCL1->imc_prot_5) {  /* type of field        */
             case 1:                        /* version tag             */
               D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r04_rdp_v;  /* block 4 RDP version */
               D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_rdp_v;  /* block 4 RDP version */
               goto pfrse20;                /* needs more data         */
             case 2:                        /* encryption tag          */
               D_ADSL_RCL1->imc_prot_6 = D_ADSL_RCL1->imc_prot_2;  /* save end */
               D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_keytype;  /* block 4 security keytype */
               D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes */
               if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
               }
               D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
               D_ADSL_RCL1->imc_prot_1 = 0;  /* clear value            */
               goto pfrse20;                /* needs more data         */
             case 4:                        /* virtual channel tag     */
               D_ADSL_RCL1->imc_prot_6 = D_ADSL_RCL1->imc_prot_2;  /* save end */
               D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_ch_disp;  /* block 4 display channel */
               D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
               if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
               }
               D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
               D_ADSL_RCL1->imc_prot_1 = 0;  /* clear value            */
               goto pfrse20;                /* needs more data         */
           }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         case ied_frse_r04_ch_disp:         /* block 4 display channel */
/* 18.12.04 KB UUUU */
           D_ADSL_RCO1->usc_chno_disp = (unsigned short int) D_ADSL_RCL1->imc_prot_1;
           D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_vch_no;  /* block 4 no virtual channels */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           goto pfrse20;                    /* needs more data         */
         case ied_frse_r04_vch_no:          /* block 4 no virtual channels */
           if (D_ADSL_RCL1->imc_prot_1 != D_ADSL_RCO1->imc_no_virt_ch) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_7 = D_ADSL_RCL1->imc_prot_1;  /* number of fields */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_vch_var;  /* block 4 variable channel */
           if (D_ADSL_RCL1->imc_prot_1 == 0) {
             D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_vch_del;  /* block 4 vch delemiter */
             /* check if already block end                             */
             if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_6) {
               /* 17.05.05 KB - end if block not implemented           */
               if (D_ADSL_RCL1->imc_pos_inp_frame == 0) {  /* end of block */
                 M_ERROR_FRSE_ILLOGIC       /* program illogic         */
               }
               D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_sel_t;  /* block 4 selection */
             }
           }
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           goto pfrse20;                    /* needs more data         */
         case ied_frse_r04_vch_var:         /* block 4 variable channel */
           (D_ADSL_RCO1->adsrc_vc_1 + (D_ADSL_RCO1->imc_no_virt_ch - D_ADSL_RCL1->imc_prot_7))
               ->usc_vch_no
             = (unsigned short int) D_ADSL_RCL1->imc_prot_1;
           D_ADSL_RCL1->imc_prot_7--;       /* number of fields        */
           if (D_ADSL_RCL1->imc_prot_7 == 0) {  /* was last virtual channel */
             D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_vch_del;  /* block 4 vch delemiter */
             /* check if already block end                             */
             if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_6) {
               /* 17.05.05 KB - end if block not implemented           */
               if (D_ADSL_RCL1->imc_pos_inp_frame == 0) {  /* end of block */
                 M_ERROR_FRSE_ILLOGIC       /* program illogic         */
               }
               D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_sel_t;  /* block 4 selection */
             }
           } else if (D_ADSL_RCL1->imc_pos_inp_frame <= D_ADSL_RCL1->imc_prot_6) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           goto pfrse20;                    /* needs more data         */
         case ied_frse_r04_vch_del:         /* block 4 vch delemiter   */
           if (D_ADSL_RCL1->imc_prot_1) {   /* must be zero            */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           /* check end of this sequence                               */
           if (D_ADSL_RCL1->imc_pos_inp_frame != D_ADSL_RCL1->imc_prot_6) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (D_ADSL_RCL1->imc_pos_inp_frame == 0) {  /* end of block */
             if (D_ADSL_RCL1->imc_prot_4 != 7) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
/* 19.12.04 KB - at end of block - not implemented */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_sel_t;  /* block 4 selection */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           goto pfrse20;                    /* process next data       */
         case ied_frse_r04_keytype:         /* block 4 security keytype */
           D_ADSL_RCO1->imc_keytype = D_ADSL_RCL1->imc_prot_1;
           D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_sec_level;  /* block 4 security level  */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           goto pfrse20;                    /* process next data       */
         case ied_frse_r04_sec_level:       /* block 4 security level  */
           D_ADSL_RCO1->imc_sec_level = D_ADSL_RCL1->imc_prot_1;
           D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_l_serv_rand;  /* block 4 length server random */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           goto pfrse20;                    /* process next data       */
         case ied_frse_r04_l_serv_rand:     /* block 4 length server random */
           if (D_ADSL_RCL1->imc_prot_1 != sizeof(ADSL_RDPA_F->chrl_server_random)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_7 = D_ADSL_RCL1->imc_prot_1;  /* save length */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_l_pub_par;  /* block 4 length public parameters */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           goto pfrse20;                    /* process next data       */
         case ied_frse_r04_l_pub_par:       /* block 4 length public parameters */
           if ((D_ADSL_RCL1->imc_prot_7 + D_ADSL_RCL1->imc_prot_1 + D_ADSL_RCL1->imc_prot_6)
                 != D_ADSL_RCL1->imc_pos_inp_frame) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCO1->imc_l_pub_par = D_ADSL_RCL1->imc_prot_1;
           /* get server-random                                        */
           D_ADSL_RCL1->achc_prot_1 = ADSL_RDPA_F->chrl_server_random;
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame
                                     - sizeof(ADSL_RDPA_F->chrl_server_random);
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_d_serv_rand;  /* copy server random */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
           goto pfrse20;                    /* process next data       */
         case ied_frse_r04_type_pub_par:    /* block 4 type public parameters */
           if (D_ADSL_RCL1->imc_prot_1 == D_TYPE_PUB_PAR_DIR) {
             D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 8;  /* number of bytes */
             if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_ignore;  /* ignore data */
             D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_ppdir_tag;  /* get public parms direct tag */
             D_ADSL_RCL1->imc_prot_5 = 0;   /* no value before         */
             goto pfrse20;                  /* process next data       */
           }
           if ((D_ADSL_RCL1->imc_prot_1 & 0X7FFFFFFF) != D_TYPE_PUB_PAR_CERT) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           iml1 = D_ADSL_RCL1->imc_pos_inp_frame - D_ADSL_RCL1->imc_prot_6;
       /* generated from macro M_TMPBUF_CL_1()                         */
       if (iml1 > D_ADSL_RCL1->imc_len_temp) {
         D_ADSL_RCL1->imc_len_temp = iml1;
         ADSL_RDPA_F->dsc_stor_sdh_1.amc_aux = adsp_hl_clib_1->amc_aux;
         ADSL_RDPA_F->dsc_stor_sdh_1.vpc_userfld = adsp_hl_clib_1->vpc_userfld;
         if (D_ADSL_RCL1->ac_temp_buffer) {  /* buffer already allocated */
           m_aux_stor_free( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCL1->ac_temp_buffer );
         }
         D_ADSL_RCL1->ac_temp_buffer
           = m_aux_stor_alloc( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCL1->imc_len_temp );
       }
           D_ADSL_RCL1->achc_prot_1 = (char *) D_ADSL_RCL1->ac_temp_buffer;
           D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_d_pub_par;  /* block 4 data public parameters */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_prot_6;  /* till end of this part */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
           goto pfrse20;                    /* process next data       */
         case ied_frse_r04_ppdir_tag:       /* block 4 public parms direct tag */
           switch (D_ADSL_RCL1->imc_prot_1) {  /* check if tag valid   */
             case D_PPDIR_PUB_VAL:          /* public parms direct public value */
             case D_PPDIR_SIG:              /* public parms direct signature */
               break;
             default:
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           /* check if tag double                                      */
           if (D_ADSL_RCL1->imc_prot_1 == D_ADSL_RCL1->imc_prot_5) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_4 = D_ADSL_RCL1->imc_prot_1;  /* save ppdir type */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_ppdir_len;  /* get public parms direct length */
//         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
           goto pfrse20;                    /* process next data       */
         case ied_frse_r04_ppdir_len:       /* block 4 public parms direct lenght */
           printf( "14.05.05 KB ied_frse_r04_ppdir_len\n" );
           if (D_ADSL_RCL1->imc_prot_1 > D_ADSL_RCL1->imc_pos_inp_frame) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           switch (D_ADSL_RCL1->imc_prot_4) {  /* proceed depending on tag */
             case D_PPDIR_PUB_VAL:          /* public parms direct public value */
               D_ADSL_RCL1->imc_prot_6 = D_ADSL_RCL1->imc_prot_1;  /* save length */
               D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCL1->chrc_prot_1;
               iml1 = sizeof(D_ADSL_RCL1->chrc_prot_1);
               break;
             case D_PPDIR_SIG:              /* public parms direct signature */
               D_ADSL_RCL1->imc_prot_7 = D_ADSL_RCL1->imc_prot_1;  /* save length */
               D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCL1->chrc_prot_2;
               iml1 = sizeof(D_ADSL_RCL1->chrc_prot_2);
               break;
             default:
               M_ERROR_FRSE_ILLOGIC         /* program illogic         */
           }
           if (D_ADSL_RCL1->imc_prot_1 > iml1) {  /* longer than field */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame
                                     - D_ADSL_RCL1->imc_prot_1;
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
           goto pfrse20;                    /* process next data       */
         case ied_frse_error_bl_02:         /* receive error block 02  */
           if (D_ADSL_RCL1->imc_prot_1 == D_XYZ_ERROR) {  /* ??? 04.06.11 KB */
             D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_send_from_server;  /* send data to client */
             goto pfrse40;                  /* send RDP4 to client     */
           }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         case ied_frse_actpdu_parse_shareid: /* shareid */
           // Save shared ID
           D_ADSL_RCO1->imc_shareid = D_ADSL_RCL1->imc_prot_1;
           // Next is source descriptor
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_actpdu_sdl;  /* int little endian */
           goto pfrse20;                    /* process next data       */
         case ied_frse_actpdu_sdl:          /* get source descriptor length */
           if (D_ADSL_RCL1->imc_prot_1 != sizeof(ucrs_source_desc)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           /* get 2 bytes little endian again                          */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_actpdu_len_cap;  /* get length capabilities */
           goto pfrse20;                    /* process next data       */
         case ied_frse_actpdu_len_cap:      /* get length capabilities */
           if (D_ADSL_RCL1->imc_pos_inp_frame < D_ADSL_RCL1->imc_prot_1) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_4
             = D_ADSL_RCL1->imc_pos_inp_frame
               - D_ADSL_RCL1->imc_prot_1
               - sizeof(ucrs_source_desc);
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_constant;  /* compare with constant */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* position                */
           goto pfrse20;                    /* process next data       */
         case ied_frse_actpdu_no_cap:       /* get number capabilities */
           D_ADSL_RCL1->imc_prot_5 = D_ADSL_RCL1->imc_prot_1;  /* save no cap */
           D_ADSL_RCL1->imc_prot_7 = 0;     /* clear indicator         */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_ignore;  /* ignore data */
           goto pfrse20;                    /* process next data       */
         case ied_frse_actpdu_cap_ind:      /* get capabilities index  */
           D_ADSL_RCL1->imc_prot_6 = D_ADSL_RCL1->imc_prot_1;  /* save no cap */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
//         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_actpdu_cap_len;  /* get capabilities length */
           goto pfrse20;                    /* process next data       */
         case ied_frse_actpdu_cap_len:      /* get capabilities length */
           D_ADSL_RCL1->imc_prot_1 -= 4;    /* minus length index and length */
           if (D_ADSL_RCL1->imc_prot_1 < 0) {  /* less than minimum length */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (D_ADSL_RCL1->imc_prot_1) {   /* value follows    */
             D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - D_ADSL_RCL1->imc_prot_1;
             if (D_ADSL_RCL1->imc_prot_2 < D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             if (D_ADSL_RCL1->imc_prot_1 > sizeof(D_ADSL_RCL1->chrc_prot_1)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCL1->chrc_prot_1;
             D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data   */
             goto pfrse20;                  /* process next data       */
           }
           switch (D_ADSL_RCL1->imc_prot_6) {
/* UUUU code missing */
           }
           D_ADSL_RCL1->imc_prot_5--;       /* one capability less     */
           if (D_ADSL_RCL1->imc_prot_5) {   /* more to follow          */
             D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
             if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
             D_ADSL_RCL1->imc_prot_1 = 0;   /* clear value             */
//           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
             D_ADSL_RCL1->iec_frse_bl = ied_frse_actpdu_cap_ind;  /* get capabilities index */
             goto pfrse20;                    /* process next data       */
           }
           /* check if till end of capabilities                        */
           if (D_ADSL_RCL1->imc_pos_inp_frame != D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (D_ADSL_RCL1->imc_pos_inp_frame != 4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_2 = 0;     /* number of bytes         */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_big_e;  /* int big endian */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_actpdu_trail;  /* trailer of act PDU */
           goto pfrse20;                    /* process next data       */
         case ied_frse_deaap_rec:           /* Deactivate All PDU Data */
           if (D_ADSL_RCL1->imc_prot_akku != D_ADSL_RCL1->imc_pos_inp_frame) {  /* not as many as remaining bytes */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_prot_akku;  /* number of bytes */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_cmp_zero;  /* compare with zeroes */
           goto pfrse20;                    /* process next data       */
         case ied_frse_rdp4_vch_ulen:       /* virtual channel uncompressed data length */
           D_ADSL_RCL1->umc_vch_ulen = D_ADSL_RCL1->imc_prot_1;  /* virtual channel length uncompressed */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - sizeof(D_ADSL_RCL1->chrc_vch_segfl);
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCL1->chrc_vch_segfl;
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
           goto pfrse20;                    /* process next data       */
         case ied_frse_lic_pr_type:         /* licencing block to check */
           if ((D_ADSL_RCL1->imc_prot_1 & 0x00007E00) != 0x0200) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if ((((unsigned int) (D_ADSL_RCL1->imc_prot_1)) >> 16)
                 != (D_ADSL_RCL1->imc_pos_inp_frame + 4)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           switch (D_ADSL_RCL1->imc_prot_1 & 0XFF) {
             case 0X01:                     /* LICENSE_REQUEST         */
               if (D_ADSL_RCO1->adsc_lic_neg) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
               }
   ADSL_RDPA_F->dsc_stor_sdh_1.amc_aux = adsp_hl_clib_1->amc_aux;
   ADSL_RDPA_F->dsc_stor_sdh_1.vpc_userfld = adsp_hl_clib_1->vpc_userfld;
   *((void **) &D_ADSL_RCO1->adsc_lic_neg) = m_aux_stor_alloc( &ADSL_RDPA_F->dsc_stor_sdh_1, sizeof(struct dsd_rdp_lic_d) );
               D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 = NULL;  /* init  */
               D_ADSL_RCO1->adsc_lic_neg->imc_lic_1_len = 0;  /* init  */
               D_ADSL_RCO1->adsc_lic_neg->dsc_lic_pms.achc_bb_data = NULL;  /* init  */
               D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - sizeof(D_ADSL_RCO1->adsc_lic_neg->chrc_lic_serand);  /* number of bytes */
               if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
               }
               D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->adsc_lic_neg->chrc_lic_serand;  /* licensing server random */
               D_ADSL_RCO1->adsc_lic_neg->chc_lic_vers = (unsigned char) (D_ADSL_RCL1->imc_prot_1 >> 8);  /* licensing version and some poorly documented "ExtendedError supported" flag */
               D_ADSL_RCL1->iec_frse_bl = ied_frse_lic_pr_req_rand;  /* server license request */
               D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data */
               goto pfrse20;                /* process next data       */
             case 0X02:                     /* PLATFORM_CHALLENGE      */
               D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 6;  /* number of bytes */
               if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
               }
               D_ADSL_RCO1->adsc_lic_neg->chc_lic_vers = (unsigned char) (D_ADSL_RCL1->imc_prot_1 >> 8);  /* licensing version and some poorly documented "ExtendedError supported" flag */
               D_ADSL_RCL1->iec_frse_bl = ied_frse_lic_pr_chll;  /* platform challenge */
               D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_ignore;  /* ignore data */
               goto pfrse20;                /* process next data       */
             case 0XFF:                     /* ERROR_ALERT (may be success) */
               /* licensing data no more needed, free the memory  */
//if ndf D$RDP$CLIENT;  22.07.11 KB
               if (D_ADSL_RCO1->adsc_lic_neg) {
                 ADSL_RDPA_F->dsc_stor_sdh_1.amc_aux = adsp_hl_clib_1->amc_aux;
                 ADSL_RDPA_F->dsc_stor_sdh_1.vpc_userfld = adsp_hl_clib_1->vpc_userfld;
                 if (D_ADSL_RCO1->adsc_lic_neg->dsc_lic_pms.achc_bb_data)
                   m_aux_stor_free( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCO1->adsc_lic_neg->dsc_lic_pms.achc_bb_data );
                 if (D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1)
                   m_aux_stor_free( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 );
                 m_aux_stor_free( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCO1->adsc_lic_neg );
                 D_ADSL_RCO1->adsc_lic_neg = NULL;
               }
//iff;  22.07.11 KB
// to-do 16.06.10 KB - with Mr. Sommer
//cend;  22.07.11 KB
               D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes */
               if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
               }
               D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
               D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
               D_ADSL_RCL1->iec_frse_bl = ied_frse_lic_pr_lic_error_mes1;
               goto pfrse20;                /* process next data       */
             case 0X03:                     /* NEW_LICENSE             */
             case 0X04:                     /* UPGRAD_LICENSE          */
               D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_send_from_server;  /* send data to client */
               goto pfrse40;                /* send RDP4 to client     */
             default:
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
         case ied_frse_lic_pr_req_rand:     /* server license request (after) random */
           D_ADSL_RCL1->imc_prot_5 = D_ADSL_RCL1->imc_prot_1;  /* save RDP version temporarily here */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           //D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_lic_pr_req_cert;  /* server license request certificate */
           goto pfrse20;                    /* process next data       */
         case ied_frse_lic_pr_req_cert:     /* server license request (before) certificate */
           D_ADSL_RCO1->adsc_lic_neg->imc_lic_1_len = 4 + 4 + D_ADSL_RCL1->imc_prot_1 + sizeof(ucrs_lic_bef_cert) + 2;
   ADSL_RDPA_F->dsc_stor_sdh_1.amc_aux = adsp_hl_clib_1->amc_aux;
   ADSL_RDPA_F->dsc_stor_sdh_1.vpc_userfld = adsp_hl_clib_1->vpc_userfld;
   *((void **) &D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1) = m_aux_stor_alloc( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCO1->adsc_lic_neg->imc_lic_1_len );
           m_put_le4( D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1, D_ADSL_RCL1->imc_prot_5 );  /* RDP version */
           m_put_le4( D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 + 4, D_ADSL_RCL1->imc_prot_1 );  /* cbCompanyName (Length of pbCompanyName) */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - (D_ADSL_RCL1->imc_prot_1 + sizeof(ucrs_lic_bef_cert) + 2);  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 + 4 + 4;  /* start of pbCompanyName */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
           goto pfrse20;                    /* process next data       */
         case ied_frse_lic_pr_chll:         /* platform challenge      */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame
                 - (D_ADSL_RCL1->imc_prot_1 + 16);  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (D_ADSL_RCO1->adsc_lic_neg->imc_lic_1_len < (2 + D_ADSL_RCL1->imc_prot_1 + 16)) {  /* not big enough */
             ADSL_RDPA_F->dsc_stor_sdh_1.amc_aux = adsp_hl_clib_1->amc_aux;
             ADSL_RDPA_F->dsc_stor_sdh_1.vpc_userfld = adsp_hl_clib_1->vpc_userfld;
             if (D_ADSL_RCO1->adsc_lic_neg->imc_lic_1_len) {
               /* chrc_lic_1 already used (for licensing certificate with special server public-key). free (no realloc), because no need to copy old content */
               m_aux_stor_free( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 );
             }
             D_ADSL_RCO1->adsc_lic_neg->imc_lic_1_len = 2 + D_ADSL_RCL1->imc_prot_1 + 16;
             D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1
               = (char *) m_aux_stor_alloc( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCO1->adsc_lic_neg->imc_lic_1_len );
           }
           m_put_le2( D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1, D_ADSL_RCL1->imc_prot_1 );  /* length of encrypted data */
           D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 + 2;  /* start of encrypted data */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
           goto pfrse20;                    /* process next data       */
         case ied_frse_lic_pr_req_scopelist:
           /* License requested. Tell client to send a license.        */
           iml2 = m_get_le4( D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 + 4 ); /* len Company name */
           iml3 = m_get_le4( D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 + 8 + iml2 ); /* len product ID */
           iml4 = D_ADSL_RCL1->imc_prot_1;  /* number of scopelist-entries */
           iml1 = sizeof(struct dsd_sc_request_license)
                    + iml2                  /* len Company name        */
                    + iml3                  /* len Product ID          */
                    + iml4 * sizeof(void *)  /* pointers to scopelist-entries */
                    + D_ADSL_RCL1->imc_pos_inp_frame;
           if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower) < (sizeof(struct dsd_se_co1) + iml1)) {  /* get new area */
             memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
             bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                                DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                                &dsl_aux_get_workarea,
                                                sizeof(struct dsd_aux_get_workarea) );
             if (bol1 == FALSE) {           /* aux returned error      */
               adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
               goto p_cleanup_20;           /* do cleanup now          */
             }
             ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
             ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
           }
           ADSL_OA1->achc_upper -= sizeof(struct dsd_se_co1);
#define ADSL_SE_CO1_G ((struct dsd_se_co1 *) ADSL_OA1->achc_upper)
#define ADSL_SC_REQ_L_G ((struct dsd_sc_request_license *) ADSL_OA1->achc_lower)
// to-do 18.04.12 KB what is memset good for ???
           memset( ADSL_SC_REQ_L_G, 0X42, iml1 );
// ????      D_ADSL_RCL1->achc_prot_2 = (char*) adsl_se_co1_w1; /* Save command for client */
           ADSL_SC_REQ_L_G->imc_version = D_ADSL_RCL1->imc_prot_5;
           /* Company name */
           achl1 = (char*) (ADSL_SC_REQ_L_G + 1);
           memcpy( achl1, D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 + 8, iml2 );
           ADSL_SC_REQ_L_G->awsc_companyname = (HL_WCHAR *) achl1;
           achl1 += iml2;
           /* Product ID */
           memcpy( achl1, D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 + 8 + iml2 + 4, iml3 );
           ADSL_SC_REQ_L_G->awsc_productid = (HL_WCHAR *) achl1;
           achl1 += iml3;
           /* Number of send scopes */
           ADSL_SC_REQ_L_G->im_num_scopes = iml4;
           /* Copy scope list */
           ADSL_SC_REQ_L_G->ach_scope = (char **) achl1;
#undef ADSL_SC_REQ_L_G
           ADSL_OA1->achc_lower += iml1;       /* memory is in use        */
           achl1 += iml4 * sizeof(void *);
           D_ADSL_RCL1->imc_prot_2 = 0; /* number of bytes to copy  */
           D_ADSL_RCL1->achc_prot_1 = achl1; /* Start of Data */
           D_ADSL_RCL1->achc_prot_3 = achl1; /* Start of Data */
           ADSL_SE_CO1_G->iec_se_command = ied_sec_request_license;  /* request a license */
           ADSL_SE_CO1_G->adsc_next = NULL;  /* clear chain field      */
           *ADSL_OA1->aadsc_se_co1_chain = ADSL_SE_CO1_G;  /* append to chain */
           ADSL_OA1->aadsc_se_co1_chain = &ADSL_SE_CO1_G->adsc_next;  /* set new end of chain */
#undef ADSL_SE_CO1_G
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
           goto pfrse20;                    /* process next data       */
         case ied_frse_lic_pr_new_license:
           /* Receive a new license. Create Order dsd_sc_save_license */
           iml1 = sizeof(struct dsd_sc_save_license) /* struct of order */
                   + D_ADSL_RCL1->imc_prot_1     /* copy the data here */
                   + 0X10;                  /* copy MAC                */
           if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower) < (sizeof(struct dsd_se_co1) + iml1)) {  /* get new area */
             memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
             bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                                DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                                &dsl_aux_get_workarea,
                                                sizeof(struct dsd_aux_get_workarea) );
             if (bol1 == FALSE) {           /* aux returned error      */
               adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
               goto p_cleanup_20;           /* do cleanup now          */
             }
             ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
             ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
           }
           ADSL_OA1->achc_upper -= sizeof(struct dsd_se_co1);
#define ADSL_SE_CO1_G ((struct dsd_se_co1 *) ADSL_OA1->achc_upper)
// to-do 18.04.12 KB what is memset good for ???
           memset( ADSL_SE_CO1_G + 1, 0X42, iml1 );
           ADSL_SE_CO1_G->iec_se_command = ied_sec_save_license;  /* save the license */
           ADSL_SE_CO1_G->adsc_next = NULL;  /* clear chain field      */
           *ADSL_OA1->aadsc_se_co1_chain = ADSL_SE_CO1_G;  /* append to chain */
           ADSL_OA1->aadsc_se_co1_chain = &ADSL_SE_CO1_G->adsc_next;  /* set new end of chain */
           /* copy data                                                */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - D_ADSL_RCL1->imc_prot_1 - 0X10; /* number of bytes to copy = D_ADSL_RCL1->imc_prot_1 + 0X10 */
           D_ADSL_RCL1->achc_prot_2 = (char *) ADSL_SE_CO1_G; /* remember start of order */
           D_ADSL_RCL1->achc_prot_1 = ADSL_OA1->achc_lower + sizeof(struct dsd_sc_save_license); /* Start of Data */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
           ADSL_OA1->achc_lower += iml1;       /* memory is in use        */
           goto pfrse20;                    /* process next data       */
#undef ADSL_SE_CO1_G
         case ied_frse_lic_pr_lic_error_mes1:
           D_ADSL_RCL1->imc_prot_5 = D_ADSL_RCL1->imc_prot_1; /* Save error code */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_lic_pr_lic_error_mes2;
           goto pfrse20;                    /* process next data       */
         case ied_frse_lic_pr_lic_error_mes2:
           D_ADSL_RCL1->iec_frse_bl = ied_frse_lic_pr_type;
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_send_from_server;  /* send data to client */
           if(D_ADSL_RCL1->imc_prot_5 == 0x7){
              /* Success -> no message */
             goto pfrse40;                /* send RDP4 to client     */
           }
           /* Print out a meaningfull error-message */
           achl1 = ""; /* Error Code */
           switch(D_ADSL_RCL1->imc_prot_5){
             case 0X3: achl1 = "ERR_INVALID_MAC"; break;
             case 0X4: achl1 = "ERR_INVALID_SCOPE"; break;
             case 0X6: achl1 = "ERR_NO_LICENSE_SERVER"; break;
             case 0X7: achl1 = "STATUS_VALID_CLIENT"; break;
             case 0X8: achl1 = "ERR_INVALID_CLIENT"; break;
             case 0XB: achl1 = "ERR_INVALID_PRODUCTID"; break;
             case 0XC: achl1 = "ERR_INVALID_MESSAGE_LEN"; break;
             default: achl1 = "Unknown Licensing Error"; break;
           }
           achl2 = ""; /* StateTransition */
           switch(D_ADSL_RCL1->imc_prot_1){
             case 0X1: achl2 = "ST_TOTAL_ABORT"; break;
             case 0X2: achl2 = "ST_NO_TRANSITION"; break;
             case 0X3: achl2 = "ST_RESET_PHASE_TO_START";
             case 0X4: achl2 = "ST_RESEND_LAST_MESSAGE";
             default: achl2 = "Unknown State Transition";
           }
           m_sdh_printf( adsp_hl_clib_1, "License error message received from server l%05d s%05d %s %s",
			                 __LINE__,               /* line number for errors  */
			                 13900,             /* source line no for errors */
			                 achl1,
			                 achl2 );
           goto pfrse40;                /* send RDP4 to client     */
       }
           goto pfrse96;                    /* program illogic         */
     case ied_fsfp_int_big_e:               /* int big endian          */
       while (TRUE) {
         D_ADSL_RCL1->imc_prot_1 <<= 8;
         D_ADSL_RCL1->imc_prot_1
           |= (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
#ifdef TRACEHL1
       printf( "ied_fsfp_int_big_e found int=%d D_ADSL_RCL1->iec_frse_bl=%d\n",
               D_ADSL_RCL1->imc_prot_1,
               D_ADSL_RCL1->iec_frse_bl );
#endif
       switch (D_ADSL_RCL1->iec_frse_bl) {
         case ied_frse_rec_07:              /* block 7 received        */
           D_ADSL_RCO1->usc_userid_cl2se = (unsigned short int) D_ADSL_RCL1->imc_prot_1;
           D_ADSL_RCL1->imc_prot_5 = 0;     /* clear channel index     */
           goto p_cjr_frse_00;              /* send channel join request */
         case ied_frse_cjresp_rec:          /* receive block channel join response */
           do {
             if (D_ADSL_RCL1->imc_prot_1 == D_ADSL_RCO1->usc_chno_disp) {  /* channel number display */
               D_ADSL_RCO1->usc_chno_disp = (unsigned short int) D_ADSL_RCL1->imc_prot_chno;
               break;
             }
             iml1 = D_ADSL_RCO1->imc_no_virt_ch;  /* number of virtual channels */
             while (iml1) {
#define D_ADSL_VCH (D_ADSL_RCO1->adsrc_vc_1 + (D_ADSL_RCO1->imc_no_virt_ch - iml1))
               /* compare virtual channel no                           */
               if (D_ADSL_RCL1->imc_prot_1 == D_ADSL_VCH->usc_vch_no) {
                 D_ADSL_VCH->usc_vch_no = (unsigned short int) D_ADSL_RCL1->imc_prot_chno;
                 break;
               }
#undef D_ADSL_VCH
               iml1--;                      /* number before           */
             }
             if (iml1 > 0) break;           /* channel found           */
             /* channel number control                                 */
             if (D_ADSL_RCL1->imc_prot_1 != (D_EXTRA_CHANNEL + D_ADSL_RCO1->usc_userid_cl2se)) {  /* check number virtual channel */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             D_ADSL_RCO1->usc_chno_cont = (unsigned short int) D_ADSL_RCL1->imc_prot_chno;
           } while (FALSE);
           goto p_cjr_frse_00;              /* send channel join request */
         case ied_frse_actpdu_trail:        /* trailer of act PDU      */
           if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower) < sizeof(struct dsd_se_co1)) {  /* get new area */
             memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
             bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                                DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                                &dsl_aux_get_workarea,
                                                sizeof(struct dsd_aux_get_workarea) );
             if (bol1 == FALSE) {           /* aux returned error      */
               adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
               goto p_cleanup_20;           /* do cleanup now          */
             }
             ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
             ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
           }
           ADSL_OA1->achc_upper -= sizeof(struct dsd_se_co1);
#define ADSL_SE_CO1_G ((struct dsd_se_co1 *) ADSL_OA1->achc_upper)
           ADSL_SE_CO1_G->iec_se_command = ied_sec_recv_demand_active_pdu;  /* received Demand Active PDU */
           ADSL_SE_CO1_G->adsc_next = NULL;  /* clear chain field      */
           *ADSL_OA1->aadsc_se_co1_chain = ADSL_SE_CO1_G;  /* append to chain */
           ADSL_OA1->aadsc_se_co1_chain = &ADSL_SE_CO1_G->adsc_next;  /* set new end of chain */
#undef ADSL_SE_CO1_G
// to-do 13.02.09 KB check if more data received
           if (D_ADSL_RCO1->dsc_ord_co_o08.achc_coded_delta_list) {  /* contains the points CodedDeltaList */
             m_aux_stor_free( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCO1->dsc_ord_co_o08.achc_coded_delta_list );
           }
           if (D_ADSL_RCO1->dsc_ord_co_o0f.achc_delta) {  /* CodedDeltaList */
             m_aux_stor_free( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCO1->dsc_ord_co_o0f.achc_delta );
           }
           if (D_ADSL_RCO1->dsc_ord_co_o10.achc_delta) {  /* CodedDeltaList */
             m_aux_stor_free( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCO1->dsc_ord_co_o10.achc_delta );
           }
           if (D_ADSL_RCO1->dsc_ord_co_o11.achc_delta) {  /* CodedDeltaList */
             m_aux_stor_free( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCO1->dsc_ord_co_o11.achc_delta );
           }
           if (D_ADSL_RCO1->dsc_ord_co_o12.achc_delta) {  /* CodedDeltaList */
             m_aux_stor_free( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCO1->dsc_ord_co_o12.achc_delta );
           }
           if (D_ADSL_RCO1->dsc_ord_co_o13.achc_glyph) {  /* glyph data before */
             m_aux_stor_free( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCO1->dsc_ord_co_o13.achc_glyph );
           }
           if (D_ADSL_RCO1->dsc_ord_co_o14.achc_coded_delta_list) {  /* contains the points along the polygon path */
             m_aux_stor_free( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCO1->dsc_ord_co_o14.achc_coded_delta_list );
           }
           if (D_ADSL_RCO1->dsc_ord_co_o15.achc_coded_delta_list) {  /* contains the points along the polygon path */
             m_aux_stor_free( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCO1->dsc_ord_co_o15.achc_coded_delta_list );
           }
           if (D_ADSL_RCO1->dsc_ord_co_o16.achc_coded_delta_list) {  /* contains the points along the polyline path */
             m_aux_stor_free( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCO1->dsc_ord_co_o16.achc_coded_delta_list );
           }
           if (D_ADSL_RCO1->dsc_ord_co_o18.achc_glyph) {  /* glyph data before */
             m_aux_stor_free( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCO1->dsc_ord_co_o18.achc_glyph );
           }
           if (D_ADSL_RCO1->dsc_ord_co_o1b.achc_glyph) {  /* glyph data before */
             m_aux_stor_free( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCO1->dsc_ord_co_o1b.achc_glyph );
           }
           memset( &D_ADSL_RCO1->dsc_ord_co_o00, 0, sizeof(struct dsd_ord_co_o00) );
           memset( &D_ADSL_RCO1->dsc_ord_co_o01, 0, sizeof(struct dsd_ord_co_o01) );
           memset( &D_ADSL_RCO1->dsc_ord_co_o02, 0, sizeof(struct dsd_ord_co_o02) );  /* ScrBlt (SCRBLT_ORDER) */
           memset( &D_ADSL_RCO1->dsc_ord_co_o07, 0, sizeof(struct dsd_ord_co_o07) );  /* DrawNineGrid (DRAWNINEGRID_ORDER) */
           memset( &D_ADSL_RCO1->dsc_ord_co_o08, 0, sizeof(struct dsd_ord_co_o08) );  /* MultiDrawNineGrid (MULTI_DRAWNINEGRID_ORDER) */
           memset( &D_ADSL_RCO1->dsc_ord_co_o09, 0, sizeof(struct dsd_ord_co_o09) );  /* lineto */
           memset( &D_ADSL_RCO1->dsc_ord_co_o0a, 0, sizeof(struct dsd_ord_co_o0a) );
           memset( &D_ADSL_RCO1->dsc_ord_co_o0b, 0, sizeof(struct dsd_ord_co_o0b) );
           memset( &D_ADSL_RCO1->dsc_ord_co_o0d, 0, sizeof(struct dsd_ord_co_o0d) );
           memset( &D_ADSL_RCO1->dsc_ord_co_o0e, 0, sizeof(struct dsd_ord_co_o0e) );
           memset( &D_ADSL_RCO1->dsc_ord_co_o0f, 0, sizeof(struct dsd_ord_co_o0f) );  /* MultiDstBlt (MULTI_DSTBLT_ORDER) */
           memset( &D_ADSL_RCO1->dsc_ord_co_o10, 0, sizeof(struct dsd_ord_co_o10) );  /* MultiPatBlt (MULTI_PATBLT_ORDER) */
           memset( &D_ADSL_RCO1->dsc_ord_co_o11, 0, sizeof(struct dsd_ord_co_o11) );  /* MultiScrBlt (MULTI_SCRBLT_ORDER) */
           memset( &D_ADSL_RCO1->dsc_ord_co_o12, 0, sizeof(struct dsd_ord_co_o12) );
           memset( &D_ADSL_RCO1->dsc_ord_co_o13, 0, sizeof(struct dsd_ord_co_o13) );
           memset( &D_ADSL_RCO1->dsc_ord_co_o14, 0, sizeof(struct dsd_ord_co_o14) );  /* PolygonSC (POLYGON_SC_ORDER) */
           memset( &D_ADSL_RCO1->dsc_ord_co_o15, 0, sizeof(struct dsd_ord_co_o15) );  /* PolygonCB (POLYGON_CB_ORDER) */
           memset( &D_ADSL_RCO1->dsc_ord_co_o16, 0, sizeof(struct dsd_ord_co_o16) );
           memset( &D_ADSL_RCO1->dsc_ord_co_o18, 0, sizeof(struct dsd_ord_co_o18) );
           memset( &D_ADSL_RCO1->dsc_ord_co_o19, 0, sizeof(struct dsd_ord_co_o19) );  /* EllipseSC (ELLIPSE_SC_ORDER) */
           memset( &D_ADSL_RCO1->dsc_ord_co_o1a, 0, sizeof(struct dsd_ord_co_o1a) );  /* EllipseCB (ELLIPSE_CB_ORDER) */
           memset( &D_ADSL_RCO1->dsc_ord_co_o1b, 0, sizeof(struct dsd_ord_co_o1b) );  /* GlyphIndex (GLYPHINDEX_ORDER) */
           memset( &D_ADSL_RCO1->dsc_bounds_cur, 0, sizeof(struct dsd_awcs_bounds) );
           /* see 2.2.2.2.1.1.2 Primary Drawing Order (PRIMARY_DRAWING_ORDER) */
           D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim = 0X01;
           D_ADSL_RCL1->iec_frse_bl = ied_frse_any_pdu_rec;  /* receive any PDU type */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_rec_type;  /* receive record type */
           goto pfrse20;                    /* process next data       */
       }
           goto pfrse96;                    /* program illogic         */
     case ied_fsfp_asn1_tag:                /* ASN.1 tag follows       */
       adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCL1->imc_pos_inp_frame < D_ADSL_RCL1->imc_prot_3) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_asn1_l1_fi;  /* ASN.1 length field */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_asn1_l1_fi:              /* ASN.1 length field 1    */
       D_ADSL_RCL1->imc_prot_1
         = *adsl_gai1_inp_1->achc_ginp_cur & 0X7F;
       if (D_ADSL_RCL1->imc_prot_1 == 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* compute how many remain after this length                    */
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame
                                  - D_ADSL_RCL1->imc_prot_1;
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* check ASN-1 length in more than one byte                     */
       if (*adsl_gai1_inp_1->achc_ginp_cur & 0X80) {
         if (D_ADSL_RCL1->imc_prot_1 > 4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         adsl_gai1_inp_1->achc_ginp_cur++;
         D_ADSL_RCL1->imc_prot_1 = 0;        /* length comes to this    */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_asn1_l1_p2;  /* ASN.1 length part two */
         goto pfrse20;                      /* process next data       */
       }
#ifdef TRACEHL1
       printf( "ied_fsfp_asn1_l1_fi found len=%d till=%d D_ADSL_RCL1->iec_frse_bl=%d\n",
               D_ADSL_RCL1->imc_prot_1,
               D_ADSL_RCL1->imc_prot_2,
               D_ADSL_RCL1->iec_frse_bl );
#endif
       adsl_gai1_inp_1->achc_ginp_cur++;
       switch (D_ADSL_RCL1->iec_frse_bl) {
         case ied_frse_start:               /* reply from server to first packet */
           if (D_ADSL_RCL1->imc_prot_2) {
             m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d ied_frse_start found end invalid %d / %d.",
                           __LINE__, 14309,  /* line number for errors */
                           D_ADSL_RCL1->imc_prot_2, D_ADSL_RCL1->imc_pos_inp_frame );
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           if (D_ADSL_RCL1->imc_pos_inp_frame < sizeof(ucrs_rec_se_01_cmp1)) {  /* compare received from server first block */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_constant;  /* compare with constant */
           D_ADSL_RCL1->imc_prot_akku = 0;  /* position                */
           goto pfrse20;                    /* process next data       */
         case ied_frse_r04_asn1_1:          /* block 4 ASN-1 field 1   */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_ignore;  /* ignore data */
           goto pfrse20;                    /* process next data       */
         case ied_frse_r04_asn1_2:          /* block 4 ASN-1 field 2   */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_ignore;  /* ignore data */
           goto pfrse20;                    /* process next data       */
         case ied_frse_r04_asn1_3:          /* block 4 ASN-1 field 3   */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_ignore;  /* ignore data */
           goto pfrse20;                    /* process next data       */
         case ied_frse_r04_asn1_4:          /* block 4 ASN-1 field 4   */
           D_ADSL_RCL1->imc_prot_4 = D_ADSL_RCL1->imc_prot_2;
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
           goto pfrse20;                    /* process next data       */
         default:
           goto pfrse96;                    /* program illogic         */
       }
     case ied_fsfp_asn1_l1_p2:              /* ASN.1 length part two   */
       while (TRUE) {
         D_ADSL_RCL1->imc_prot_1 <<= 8;
         D_ADSL_RCL1->imc_prot_1
           |= (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* compute how many remain after this length                    */
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame
                                  - D_ADSL_RCL1->imc_prot_1;
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
#ifdef TRACEHL1
       printf( "ied_fsfp_asn1_l1_p2 found len=%d till=%d D_ADSL_RCL1->iec_frse_bl=%d\n",
               D_ADSL_RCL1->imc_prot_1,
               D_ADSL_RCL1->imc_prot_2,
               D_ADSL_RCL1->iec_frse_bl );
#endif
       switch (D_ADSL_RCL1->iec_frse_bl) {
         case ied_frse_rec_04:              /* record 4 received       */
           if (D_ADSL_RCL1->imc_prot_2) {   /* is not till end of block */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_asn1_1;  /* block 4 ASN-1 field 1 */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_asn1_tag;
           goto pfrse20;                    /* process next data       */
         case ied_frse_r04_asn1_4:          /* block 4 ASN-1 field 4   */
           if (D_ADSL_RCL1->imc_prot_2) {   /* is not till end of block */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
#ifdef XYZ1
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_asn1_tag;
#endif
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_constant;  /* compare with constant */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* position                */
           goto pfrse20;                    /* process next data       */
         default:
           goto pfrse96;                    /* program illogic         */
       }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
     case ied_fsfp_mu_len_1:                /* multi length 1          */
       D_ADSL_RCL1->imc_prot_1
         = *adsl_gai1_inp_1->achc_ginp_cur & 0X7F;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (*adsl_gai1_inp_1->achc_ginp_cur & 0X80) {  /* second byte follows */
         adsl_gai1_inp_1->achc_ginp_cur++;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_mu_len_2;  /* multi length 2 follows */
         goto pfrse20;                      /* process next data       */
       }
       adsl_gai1_inp_1->achc_ginp_cur++;
       if (D_ADSL_RCL1->imc_prot_1 == 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCL1->imc_pos_inp_frame < D_ADSL_RCL1->imc_prot_1) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       switch (D_ADSL_RCL1->iec_frse_bl) {
         case ied_frse_act_pdu_rec:         /* receive block active PDU */
         case ied_frse_lic_pr_1_rec:        /* receive block licence protocol */
         case ied_frse_any_pdu_rec:
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_rt02;  /* record type 2 */
           goto pfrse20;                    /* process next data       */
       }
           goto pfrse96;                    /* program illogic         */
     case ied_fsfp_mu_len_2:                /* multi length 2          */
       D_ADSL_RCL1->imc_prot_1 <<= 8;       /* shift old value         */
       D_ADSL_RCL1->imc_prot_1
         |= (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCL1->imc_prot_1 == 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCL1->imc_pos_inp_frame < D_ADSL_RCL1->imc_prot_1) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       switch (D_ADSL_RCL1->iec_frse_bl) {
         case ied_frse_r04_asn1_4:          /* block 4 ASN-1 field 4   */
           if (D_ADSL_RCL1->imc_pos_inp_frame != D_ADSL_RCL1->imc_prot_1) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_frse_bl = ied_frse_r04_sel_t;  /* block 4 selection */
           D_ADSL_RCL1->imc_prot_4 = 0;     /* no fields yet           */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear value             */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_int_lit_e;  /* int little endian */
           goto pfrse20;                    /* process next data       */
         case ied_frse_act_pdu_rec:         /* receive block active PDU */
         case ied_frse_lic_pr_1_rec:        /* receive block licence protocol */
         case ied_frse_error_bl_01:         /* receive error block 01  */
         case ied_frse_any_pdu_rec:
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_rt02;  /* record type 2 */
           goto pfrse20;                    /* process next data       */
       }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
     case ied_fsfp_r5_len_1:                /* RDP 5 multi length 1    */
       D_ADSL_RCL1->imc_pos_inp_frame
         = *adsl_gai1_inp_1->achc_ginp_cur & 0X7F;
       if (*adsl_gai1_inp_1->achc_ginp_cur & 0X80) {  /* second byte follows */
         adsl_gai1_inp_1->achc_ginp_cur++;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_len_2;  /* RDP 5 multi length 2 follows */
         goto pfrse20;                      /* process next data       */
       }
       {
         int imh_w1;
         char *achh_w1;
         char chrh_w1[ 128 ];
         achh_w1 = adsl_gai1_inp_1->achc_ginp_cur + 1 + D_ADSL_RCL1->imc_pos_inp_frame - 2;
         if (achh_w1 == adsl_gai1_inp_1->achc_ginp_end) {
           sprintf( chrh_w1, "till end this gather %p.", achh_w1 );
         } else {
           imh_w1 = achh_w1 - adsl_gai1_inp_1->achc_ginp_end;
           if (imh_w1 > 0) {
             sprintf( chrh_w1, "missing after this gather %d/%p.", imh_w1, (const void*)imh_w1 );
           } else {
             imh_w1 = adsl_gai1_inp_1->achc_ginp_end - achh_w1;
             sprintf( chrh_w1, "end in this gather %p - in this gather more %d/%p.", achh_w1, imh_w1, (const void*)imh_w1 );
           }
         }
         m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d ied_fsfp_r5_len_1 len-bl=%d/0x%04X %s",
                       __LINE__, 14537,  /* line number for errors */
                       D_ADSL_RCL1->imc_pos_inp_frame,
                       D_ADSL_RCL1->imc_pos_inp_frame,
                       chrh_w1 );
       }
       adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame -= 2;  /* minus length header    */
       if (D_ADSL_RCL1->imc_pos_inp_frame <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCL1->chc_prot_r5_first & 0X80) {  /* received encrypted */
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - D_SIZE_HASH;
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCL1->chrc_prot_1;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_hash;  /* RDP 5 hash   */
         goto pfrse20;                      /* process next data       */
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_typ;  /* RDP 5 PDU type */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_len_2:                /* RDP 5 multi length 2    */
       D_ADSL_RCL1->imc_pos_inp_frame <<= 8;  /* shift old value       */
       D_ADSL_RCL1->imc_pos_inp_frame
         |= (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       {
         int imh_w1;
         char *achh_w1;
         char chrh_w1[ 128 ];
         achh_w1 = adsl_gai1_inp_1->achc_ginp_cur + D_ADSL_RCL1->imc_pos_inp_frame - 3;
         if (achh_w1 == adsl_gai1_inp_1->achc_ginp_end) {
           sprintf( chrh_w1, "till end this gather %p.", achh_w1 );
         } else {
           imh_w1 = achh_w1 - adsl_gai1_inp_1->achc_ginp_end;
           if (imh_w1 > 0) {
             sprintf( chrh_w1, "missing after this gather %d/%p.", imh_w1, (const void*)imh_w1 );
           } else {
             imh_w1 = adsl_gai1_inp_1->achc_ginp_end - achh_w1;
             sprintf( chrh_w1, "end in this gather %p - in this gather more %d/%p.", achh_w1, imh_w1, (const void*)imh_w1 );
           }
         }
         m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d ied_fsfp_r5_len_2 len-bl=%d/0x%04X %s",
                       __LINE__, 14603,  /* line number for errors */
                       D_ADSL_RCL1->imc_pos_inp_frame,
                       D_ADSL_RCL1->imc_pos_inp_frame,
                       chrh_w1 );
       }
       D_ADSL_RCL1->imc_pos_inp_frame -= 3;  /* minus length header    */
       if (D_ADSL_RCL1->imc_pos_inp_frame <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
#ifdef TEMPSCR1
       if (ADSL_RDPA_F->boc_temp_scr_1) {   /* screen buffer send      */
         D_ADSL_RCL1->imc_prot_2 = 0;       /* till end of block       */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_ignore;  /* ignore data   */
         goto pfrse20;                      /* process next data       */
       }
#endif
       if (D_ADSL_RCL1->chc_prot_r5_first & 0X80) {  /* received encrypted */
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - D_SIZE_HASH;
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCL1->chrc_prot_1;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_hash;  /* RDP 5 hash   */
         goto pfrse20;                      /* process next data       */
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_typ;  /* RDP 5 PDU type */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_hash:                 /* RDP 5 hash              */
       /* compute how many to copy                                     */
       iml1 = D_ADSL_RCL1->imc_pos_inp_frame
                - D_ADSL_RCL1->imc_prot_2;
       if (iml1 > iml_rec) iml1 = iml_rec;
       memcpy( D_ADSL_RCL1->achc_prot_1,
               adsl_gai1_inp_1->achc_ginp_cur,
               iml1 );
       D_ADSL_RCL1->achc_prot_1 += iml1;
       adsl_gai1_inp_1->achc_ginp_cur += iml1;
       D_ADSL_RCL1->imc_pos_inp_frame -= iml1;  /* length constant     */
       if (D_ADSL_RCL1->imc_pos_inp_frame > D_ADSL_RCL1->imc_prot_2) {
         goto pfrse20;                      /* needs more data         */
       }
       /* check if all data of this frame have been received           */
       iml1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* remaining data in frame */
       adsl_gai1_inp_w2 = adsl_gai1_inp_1;  /* get gather              */
       while (TRUE) {                       /* loop over all gather structures input */
         iml1 -= adsl_gai1_inp_w2->achc_ginp_end - adsl_gai1_inp_w2->achc_ginp_cur;
         if (iml1 <= 0) break;              /* enough data found       */
         adsl_gai1_inp_w2 = adsl_gai1_inp_w2->adsc_next;  /* get next gather */
         if (adsl_gai1_inp_w2 == NULL) {    /* already end of chain    */
           printf( "s%05d l%05d received from server need more data %d\n",
                   14712,          /* source line no for errors */
                   __LINE__,                /* line number for errors  */
                   iml1 );                  /* length of data needed   */
           /* wait for more data                                       */
           goto p_ret_00;                   /* check how to return     */
         }
       }
       m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d received from server encrypted",
                     __LINE__, 14728 );  /* line number for errors  */
       if ((D_ADSL_RCO1->dsc_encry_se2cl.imc_count_sent & (4096 - 1)) == 0){
         if (D_ADSL_RCO1->dsc_encry_se2cl.imc_count_sent) {
           m_update_keys( D_ADSL_RCO1, &D_ADSL_RCO1->dsc_encry_se2cl, NULL );
         }
       }
       /* decrypt the data where they are                              */
       iml1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* remaining data in frame */
       adsl_gai1_inp_w2 = adsl_gai1_inp_1;  /* get gather              */
       while (TRUE) {                       /* loop over all gather structures input */
         iml2 = adsl_gai1_inp_w2->achc_ginp_end - adsl_gai1_inp_w2->achc_ginp_cur;
         if (iml2 > iml1) iml2 = iml1;      /* only data in this frame */
         RC4( adsl_gai1_inp_w2->achc_ginp_cur, 0, iml2,
              adsl_gai1_inp_w2->achc_ginp_cur, 0,
              D_ADSL_RCO1->dsc_encry_se2cl.chrc_rc4_state );
         iml1 -= iml2;                      /* subtract data decyrpted */
         if (iml1 <= 0) break;              /* all data decrypted      */
         adsl_gai1_inp_w2 = adsl_gai1_inp_w2->adsc_next;  /* get next gather */
         if (adsl_gai1_inp_w2 == NULL) {    /* already end of chain    */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
         }
       }
       /* check the hash now                                       */
#define ACHL_WORK_SHA1 ((int *) chrl_work_2)
#define ACHL_WORK_MD5 ((int *) ((char *) ((char *) ACHL_WORK_SHA1 + SHA_ARRAY_SIZE * sizeof(int))))
#define ACHL_WORK_UTIL_01 ((char *) ACHL_WORK_MD5 + MD5_ARRAY_SIZE * sizeof(int))
       memcpy( ACHL_WORK_SHA1,
               D_ADSL_RCO1->imrc_sha1_state,
               sizeof(D_ADSL_RCO1->imrc_sha1_state) );
       memcpy( ACHL_WORK_MD5,
               D_ADSL_RCO1->imrc_md5_state,
               sizeof(D_ADSL_RCO1->imrc_md5_state) );
       m_put_le4( ACHL_WORK_UTIL_01, D_ADSL_RCL1->imc_pos_inp_frame );
       SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0, 4 );
       iml1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* remaining data in frame */
       adsl_gai1_inp_w2 = adsl_gai1_inp_1;  /* get gather              */
       while (TRUE) {                       /* loop over all gather structures input */
         iml2 = adsl_gai1_inp_w2->achc_ginp_end - adsl_gai1_inp_w2->achc_ginp_cur;
         if (iml2 > iml1) iml2 = iml1;      /* only data in this frame */
         SHA1_Update( ACHL_WORK_SHA1,
                      adsl_gai1_inp_w2->achc_ginp_cur, 0, iml2 );
         iml1 -= iml2;                      /* subtract data processed */
         if (iml1 <= 0) break;              /* all data processed      */
         adsl_gai1_inp_w2 = adsl_gai1_inp_w2->adsc_next;  /* get next gather */
         if (adsl_gai1_inp_w2 == NULL) {    /* already end of chain    */
           goto pfrse96;                    /* program illogic         */
         }
       }
       if (D_ADSL_RCL1->chc_prot_r5_first & 0X40) {  /* flag for block count */
         m_put_le4( ACHL_WORK_UTIL_01, D_ADSL_RCO1->dsc_encry_se2cl.imc_count_sent );
         SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0, 4 );
       }
       SHA1_Final( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0 );
       MD5_Update( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0, 20 );
       MD5_Final( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0 );
       if (memcmp( D_ADSL_RCL1->chrc_prot_1, ACHL_WORK_UTIL_01, D_SIZE_HASH )) {
         m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d received from server hash invalid",
                       __LINE__, 14819 );  /* line number for errors  */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
#undef ACHL_WORK_SHA1
#undef ACHL_WORK_MD5
#undef ACHL_WORK_UTIL_01
       D_ADSL_RCO1->dsc_encry_se2cl.imc_count_sent++;  /* count block received from server */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_typ;  /* RDP 5 PDU type */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_pdu_typ:              /* RDP 5 PDU type          */
       D_ADSL_RCL1->chc_prot_r5_pdu_type = *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCL1->chc_prot_r5_pdu_type & 0X80) {  /* input compressed */
         if ((D_ADSL_RCO1->umc_loinf_options & D_LOINFO_COMPR_ENA) == 0) {  /* compression not enabled */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_cofl;  /* RDP 5 compression flags */
         goto pfrse20;                      /* process next data       */
       }
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_1 = 0;         /* clear value             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_len;  /* RDP 5 PDU length */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_pdu_cofl:             /* RDP 5 compression flags */
       D_ADSL_RCL1->chc_prot_r5_pdu_cofl = *adsl_gai1_inp_1->achc_ginp_cur++;  /* for protocol decoding */
       D_ADSL_RCL1->imc_pos_inp_frame--;
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_1 = 0;         /* clear value             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_len;  /* RDP 5 PDU length */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_pdu_len:              /* RDP 5 PDU length        */
       while (TRUE) {
         D_ADSL_RCL1->imc_prot_1
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_2 + 2 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d ied_fsfp_r5_pdu_len found int=%d/0X%04X D_ADSL_RCL1->iec_frse_bl=%d.",
                     __LINE__, 14883,  /* line number for errors */
                     D_ADSL_RCL1->imc_prot_1,
                     D_ADSL_RCL1->imc_prot_1,
                     D_ADSL_RCL1->iec_frse_bl );
   D_ADSL_RCL1->iec_frse_bl = ied_frse_any_pdu_rec;  /* ????ive block active PDU */
       if (D_ADSL_RCL1->chc_prot_r5_pdu_cofl & 0X20) {  /* input compressed */
         m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d compressed pdu-type=0X%02X.",
                       __LINE__, 14907,  /* line number for errors */
                       (unsigned char) D_ADSL_RCL1->chc_prot_r5_pdu_type );
         if (D_ADSL_RCL1->imc_prot_1 == 0) {
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_typ;  /* RDP 5 PDU type */
           goto pfrse20;                    /* process next data       */
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_compr;  /* RDP 5 PDU compressed */
         goto pfrse20;                      /* process next data       */
       }
       if (D_ADSL_RCL1->imc_prot_1 == 0) {
         if (D_ADSL_RCL1->imc_pos_inp_frame) {
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_typ;  /* RDP 5 PDU type */
           goto pfrse20;                    /* process next data       */
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_rec_type;  /* receive record type */
         goto pfrse20;                      /* process next data       */
       }
       D_ADSL_RCL1->imc_prot_4
         = D_ADSL_RCL1->imc_pos_inp_frame - D_ADSL_RCL1->imc_prot_1;
       if (D_ADSL_RCL1->imc_prot_4 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       switch (D_ADSL_RCL1->chc_prot_r5_pdu_type & 0X0F) {
         case 0:                            /* orders follow / update orders */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
//         D_ADSL_RCL1->imc_prot_5 = 0;     /* clear value             */
           D_ADSL_RCL1->imc_no_cmd_frame = 0;  /* clear value          */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_no_ord;  /* RDP 5 PDU number of orders */
           goto pfrse20;                    /* process next data       */
         case 1:                            /* update bitmap           */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_6 = 0;     /* index of update bitmap  */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear akkumulator       */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_bitmap_header;  /* bitmap header */
           goto pfrse20;                    /* process next data       */
         case 0X0A:                         /* Set Mouse Pointer PDU   */
         case 0X0B:                         /* pointer PDU             */
/* 16.06.05 KB - ignore pointer */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_prot_4;  /* till end of PDU */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_xyz_end_pdu;  /* end of PDU */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_ignore;  /* ignore data */
           goto pfrse20;                    /* process next data       */
       }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
     case ied_fsfp_r5_pdu_compr:            /* RDP 5 PDU compressed    */
       /* check if all data of this frame have been received           */
       iml1 = D_ADSL_RCL1->imc_prot_1;      /* length of compressed data */
       adsl_gai1_inp_w2 = adsl_gai1_inp_1;  /* get gather              */
#define ADSL_GAI1_S ((struct dsd_gather_i_1 *) chrl_work_2)
       adsl_gai1_w1 = ADSL_GAI1_S;          /* first gather here       */
       while (TRUE) {                       /* loop over input bytes   */
         if (adsl_gai1_inp_w2 == NULL) {    /* already end of chain    */
           m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d received from server PDU need more data %d.",
                         __LINE__, 15136,  /* line number for errors */
                         iml1 );            /* length of data needed   */
           /* wait for more data                                       */
           goto p_ret_00;                   /* check how to return     */
         }
         iml2 = adsl_gai1_inp_w2->achc_ginp_end - adsl_gai1_inp_w2->achc_ginp_cur;
         if (iml2 > iml1) iml2 = iml1;
         adsl_gai1_w1->achc_ginp_cur = adsl_gai1_inp_w2->achc_ginp_cur;
         adsl_gai1_w1->achc_ginp_end = adsl_gai1_inp_w2->achc_ginp_cur + iml2;
         iml1 -= iml2;                      /* remaining data to decompress */
         if (iml1 <= 0) break;              /* end of data to decompress */
         adsl_gai1_inp_w2 = adsl_gai1_inp_w2->adsc_next;  /* get next in chain */
         adsl_gai1_w1->adsc_next = adsl_gai1_w1 + 1;  /* set chain gather */
         adsl_gai1_w1++;                    /* use next gather         */
       }
       while (adsl_gai1_inp_1 != adsl_gai1_inp_w2) {  /* loop to set processed input */
         D_ADSL_RCL1->imc_pos_inp_frame     /* remaining data in frame */
           -= adsl_gai1_inp_1->achc_ginp_end - adsl_gai1_inp_1->achc_ginp_cur;
         adsl_gai1_inp_1->achc_ginp_cur = adsl_gai1_inp_1->achc_ginp_end;
         adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next in chain */
       }
       D_ADSL_RCL1->imc_pos_inp_frame       /* remaining data in frame */
         -= adsl_gai1_w1->achc_ginp_end - adsl_gai1_inp_1->achc_ginp_cur;
       adsl_gai1_inp_1->achc_ginp_cur = adsl_gai1_w1->achc_ginp_end;
       adsl_gai1_w1->adsc_next = NULL;      /* end of data             */
       D_ADSL_RCO1->dsc_cdrf_dec.adsc_gai1_in = ADSL_GAI1_S;  /* input data */
#undef ADSL_GAI1_S
       D_ADSL_RCO1->dsc_cdrf_dec.chrc_header[ 0 ]  /* copy compression header */
         = D_ADSL_RCL1->chc_prot_r5_pdu_cofl;  /* address act input-data */
       D_ADSL_RCO1->dsc_cdrf_dec.boc_mp_flush = TRUE;  /* end-of-record input */
       dsl_gai1_comp_data.achc_ginp_cur = (char *) (adsl_gai1_w1 + 1);
       D_ADSL_RCO1->dsc_cdrf_dec.achc_out_cur = dsl_gai1_comp_data.achc_ginp_cur;  /* current end of output data */
       D_ADSL_RCO1->dsc_cdrf_dec.achc_out_end = chrl_work_2 + sizeof(chrl_work_2);  /* end of buffer for output data */
       /* decompress data                                              */
       D_ADSL_RCO1->dsc_cdrf_dec.vpc_userfld = adsp_hl_clib_1->vpc_userfld;
       D_ADSL_RCO1->dsc_cdrf_dec.amc_aux = adsp_hl_clib_1->amc_aux;
       D_ADSL_RCO1->amc_cdr_dec( &D_ADSL_RCO1->dsc_cdrf_dec );
       m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d case ied_fsfp_r5_pdu_compr: decompr part &dsc_cdrf_dec=%p imc_return=%d len=%d/0X%X.",
                     __LINE__, 15183,  /* line number for errors */
                     &D_ADSL_RCO1->dsc_cdrf_dec,
                     D_ADSL_RCO1->dsc_cdrf_dec.imc_return,
                     D_ADSL_RCO1->dsc_cdrf_dec.achc_out_cur - dsl_gai1_comp_data.achc_ginp_cur,
                     D_ADSL_RCO1->dsc_cdrf_dec.achc_out_cur - dsl_gai1_comp_data.achc_ginp_cur );
       if (D_ADSL_RCO1->dsc_cdrf_dec.imc_return != DEF_IRET_NORMAL) {
         m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d de-compression error %d.",
                       __LINE__, 15191,  /* line number for errors */
                       D_ADSL_RCO1->dsc_cdrf_dec.imc_return );
         goto p_cleanup_00;                 /* do cleanup now          */
       }
       dsl_gai1_comp_data.achc_ginp_end = D_ADSL_RCO1->dsc_cdrf_dec.achc_out_cur;
       D_ADSL_RCL1->imc_prot_1 = dsl_gai1_comp_data.achc_ginp_end - dsl_gai1_comp_data.achc_ginp_cur;
       D_ADSL_RCL1->imc_prot_4 = D_ADSL_RCL1->imc_pos_inp_frame;  /* position end of this PDU */
       adsl_gai1_inp_save_compr = adsl_gai1_inp_1;  /* save current gather input */
       adsl_gai1_inp_1 = &dsl_gai1_comp_data;  /* process decompressed data */
       D_ADSL_RCL1->imc_pos_inp_frame += D_ADSL_RCL1->imc_prot_1;
       switch (D_ADSL_RCL1->chc_prot_r5_pdu_type & 0X7F) {
         case 0:                            /* orders follow / update orders */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
//         D_ADSL_RCL1->imc_prot_5 = 0;     /* clear value             */
           D_ADSL_RCL1->imc_no_cmd_frame = 0;  /* clear value          */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_no_ord;  /* RDP 5 PDU number of orders */
           goto pfrse20;                    /* process next data       */
         case 1:                            /* update bitmap           */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_6 = 0;     /* index of update bitmap  */
           D_ADSL_RCL1->imc_prot_1 = 0;     /* clear akkumulator       */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_bitmap_header;  /* bitmap header */
           goto pfrse20;                    /* process next data       */
         case 0X0A:                         /* Set Mouse Pointer PDU   */
         case 0X0B:                         /* pointer PDU             */
/* 16.06.05 KB - ignore pointer */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_prot_4;  /* till end of PDU */
           D_ADSL_RCL1->iec_frse_bl = ied_frse_xyz_end_pdu;  /* end of PDU */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_ignore;  /* ignore data */
           goto pfrse20;                    /* process next data       */
       }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_pdu_no_ord:           /* RDP 5 PDU number of orders */
       while (TRUE) {
//       D_ADSL_RCL1->imc_prot_5
         D_ADSL_RCL1->imc_no_cmd_frame
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_2 + 2 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d ied_fsfp_r5_pdu_no_ord found int=%d till=%d D_ADSL_RCL1->iec_frse_bl=%d.",
                     __LINE__, 15291,  /* line number for errors */
//                   D_ADSL_RCL1->imc_prot_5,
                     D_ADSL_RCL1->imc_no_cmd_frame,
//                   D_ADSL_RCL1->imc_count_order + D_ADSL_RCL1->imc_prot_5,
                     D_ADSL_RCL1->imc_count_order + D_ADSL_RCL1->imc_no_cmd_frame,
                     D_ADSL_RCL1->iec_frse_bl );
       if (D_ADSL_RCL1->imc_pos_inp_frame < D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_ord_fl;  /* RDP 5 control order flags */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_pdu_ord_fl:           /* RDP 5 control order flags   */
       memmove( achrl_trace_ord_fl, achrl_trace_ord_fl + 1, sizeof(achrl_trace_ord_fl) - sizeof(achrl_trace_ord_fl[0]) );
       memmove( chrl_trace_ord_fl_order, chrl_trace_ord_fl_order + 1, sizeof(chrl_trace_ord_fl_order) - sizeof(chrl_trace_ord_fl_order[0]) );
       achrl_trace_ord_fl[ D_NO_TRACE_ORD_FL - 1 ] = adsl_gai1_inp_1->achc_ginp_cur;
       chrl_trace_ord_fl_order[ D_NO_TRACE_ORD_FL - 1 ] = 0;
       D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl = *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCL1->imc_pos_inp_frame < D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
#ifdef TEMPSCR2                             /* 15.06.05 KB - send screen */
       D_ADSL_RCL1->imc_count_order++;      /* count this order        */
#endif
#ifndef TEMPSCR2                            /* 15.06.05 KB - send screen */
       D_ADSL_RCL1->imc_count_order++;      /* count this order        */
#endif
       m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d ied_fsfp_r5_pdu_ord_fl found int=%d/0X%02X at pos=0X%04X ord-no=%05d D_ADSL_RCL1->iec_frse_bl=%d.",
                     __LINE__, 15343,  /* line number for errors */
                     (unsigned char) D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl,
                     (unsigned char) D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl,
                     adsl_gai1_inp_1->achc_ginp_cur - 1 - achl_inp_start,
                     D_ADSL_RCL1->imc_count_order,
                     D_ADSL_RCL1->iec_frse_bl );
#ifdef PROB_060725
#ifdef TRACEHL_COM1
//     if (ims_no_order == 409) {           /* count orders            */
//       printf( "l%05d s%05d 060725\n", __LINE__, 15354 );
//     }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl == 0X1D) {
         printf( "l%05d s%05d 060725\n", __LINE__, 15357 );
       }
#endif
#endif
       /* Check bit for new RDP 5.1 order                              */
       /* not TS_STANDARD = primary drawing order                      */
       if ((D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X01) == 0) {
         switch (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl >> 2) {
           case 0X00:                       /* TS_ALTSEC_SWITCH_SURFACE */
             D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
             if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             D_ADSL_RCL1->usc_prot_buf_ind = 0;  /* clear value        */
             D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_new_buf_ind;  /* RDP 5 PDU new order, buffer index */
             goto pfrse20;                  /* process next data       */
           case 0X01:                       /* TS_ALTSEC_CREATE_OFFSCR_BITMAP */
             /* 2.2.2.2.1.3.2 Create Offscreen Bitmap (CREATE_OFFSCR_BITMAP_ORDER) */
             D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
             if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             D_ADSL_RCL1->imc_prot_6 = 0;   /* set index of parameters */
             memset( D_ADSL_RCL1->isrc_buf_param, 0, sizeof(D_ADSL_RCL1->isrc_buf_param) );
             D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_new_buf_param;  /* RDP 5 PDU new order, buffer param */
             goto pfrse20;                  /* process next data       */
           case 0X02:                       /* TS_ALTSEC_STREAM_BITMAP_FIRST */
           /* generated from macro M_CL_PREPARE_SINGLE()               */
           if (D_ADSL_RCL1->imc_pos_inp_frame <= 0) {  /* already end of frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
             D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_sbf_bm_flags;  /* RDP order ALTSEC Stream Bitmap First BitmapFlags */
             goto pfrse20;                  /* process next data       */
           case 0X03:                       /* TS_ALTSEC_STREAM_BITMAP_NEXT */
           /* generated from macro M_CL_PREPARE_SINGLE()               */
           if (D_ADSL_RCL1->imc_pos_inp_frame <= 0) {  /* already end of frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
             D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_sbn_bm_flags;  /* RDP order ALTSEC Stream Bitmap Next BitmapFlags */
             goto pfrse20;                  /* process next data       */
           case 0X04:                       /* TS_ALTSEC_CREATE_NINEGRID_BITMAP */
           /* generated from macro M_CL_PREPARE_SINGLE()               */
           if (D_ADSL_RCL1->imc_pos_inp_frame <= 0) {  /* already end of frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
             D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_cnb_bm_bpp;  /* RDP order ALTSEC Create NineGrid Bitmap BitmapBpp */
             goto pfrse20;                  /* process next data       */
           case 0X0D:                       /* TS_ALTSEC_FRAME_MARKER  */
           /* generated from macro M_CL_PREPARE_MULTI()                */
           D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - sizeof(D_ADSL_RCL1->dsc_afrm.umc_action);  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_count_in < 0) {  /* longer that frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->dsc_afrm.umc_action = 0;              /* clear field             */
             D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_frm_action;  /* RDP order ALTSEC frame marker action */
             goto pfrse20;                  /* process next data       */
         }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* Secondary order flag                                         */
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X02) {
         /* check other flags - not allowed                            */
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0XF8) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_1 = 0;       /* clear value             */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_ord_len;  /* RDP 5 PDU order length */
         goto pfrse20;                      /* process next data       */
       }
       /* check Typechange flag                                        */
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X08) {
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_ord_prim;  /* RDP 5 primary order */
         goto pfrse20;                      /* process next data       */
       }
       chrl_trace_ord_fl_order[ D_NO_TRACE_ORD_FL - 1 ] = D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim;
       iml1 = 2;                            /* number of bytes encoding flag */
       switch (D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim) {
         case 0:
         case 2:
         case 7:
         case 8:
         case 10:
         case 11:
         case 15:
         case 20:
         case 22:                           /* order 22/0X16 Polyline (POLYLINE_ORDER) */
         case 25:                           /* EllipseSC (ELLIPSE_SC_ORDER) */
           iml1 = 1;                        /* number of bytes encoding flag */
           break;
         case 1:
         case 9:                            /* lineto                  */
         case 13:
         case 16:
         case 17:
         case 18:
         case 19:
         case 21:
         case 24:
         case 26:
           break;
         case 14:
         case 27:
           iml1 = 3;                        /* number of bytes encoding flag */
           break;
         default:
           M_ERROR_FRSE_ILLOGIC
       }
       iml1 -= (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl >> 6) & 0X03;
       if (iml1 <= 0) {                     /* no encoding flags       */
         if (iml1 < 0) {                    /* undefined value         */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         if (   (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X04)  /* Bounds flag */
             && ((D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X20) == 0)) {  /* no Apply last bounds flag */
           D_ADSL_RCL1->imc_prot_prfl = 0;  /* UUUU 29.12.06 KB */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_ord_bofl;  /* RDP 5 bounds flags */
           goto pfrse20;                    /* needs more data         */
         }
         goto pfrse_po_apply_order;         /* apply the order         */
       }
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - iml1;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
       D_ADSL_RCL1->imc_prot_prfl = 0;      /* clear value             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_ord_prfl;  /* RDP 5 primary order flags */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_pdu_ord_prim:         /* RDP 5 primary order     */
/* jump depending on least significant 5 bits 07.01.05 KB */
       D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim = *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCL1->imc_pos_inp_frame < D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim >= D_R5_ORD_NO) {  /* order number too high */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       chrl_trace_ord_fl_order[ D_NO_TRACE_ORD_FL - 1 ] = D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim;
       m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d ied_fsfp_r5_pdu_ord_prim found int=%d/0X%02X D_ADSL_RCL1->iec_frse_bl=%d.",
                     __LINE__, 15620,  /* line number for errors */
                     (unsigned char) D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim,
                     (unsigned char) D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim,
                     D_ADSL_RCL1->iec_frse_bl );
       iml1 = 2;                            /* number of bytes encoding flag */
       switch (D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim) {
         case 0:
         case 2:
         case 7:
         case 8:
         case 10:
         case 11:
         case 15:
         case 20:
         case 22:                           /* order 22/0X16 Polyline (POLYLINE_ORDER) */
         case 25:                           /* EllipseSC (ELLIPSE_SC_ORDER) */
           iml1 = 1;                        /* number of bytes encoding flag */
           break;
         case 1:
         case 9:                            /* lineto                  */
         case 13:
         case 16:
         case 17:
         case 18:
         case 19:
         case 21:
         case 24:
         case 26:
           break;
         case 14:
         case 27:
           iml1 = 3;                        /* number of bytes encoding flag */
           break;
         default:
           M_ERROR_FRSE_ILLOGIC
       }
       iml1 -= (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl >> 6) & 0X03;
       D_ADSL_RCL1->imc_prot_prfl = 0;      /* clear value             */
       if (iml1 <= 0) {                     /* no encoding flags       */
         if (iml1 < 0) {                    /* undefined value         */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         if (   (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X04)  /* Bounds flag */
             && ((D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X20) == 0)) {  /* no Apply last bounds flag */
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_ord_bofl;  /* RDP 5 bounds flags */
           goto pfrse20;                    /* needs more data         */
         }
         goto pfrse_po_apply_order;         /* apply the order         */
       }
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - iml1;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_ord_prfl;  /* RDP 5 primary order flags */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_pdu_ord_prfl:         /* RDP 5 primary order flags */
       while (TRUE) {
         D_ADSL_RCL1->imc_prot_prfl
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d ied_fsfp_r5_pdu_ord_prfl found int=%d/0X%04X D_ADSL_RCL1->iec_frse_bl=%d.",
                     __LINE__, 15819,  /* line number for errors */
                     D_ADSL_RCL1->imc_prot_prfl,
                     D_ADSL_RCL1->imc_prot_prfl,
                     D_ADSL_RCL1->iec_frse_bl );
#ifdef PROB_061004
       if (D_ADSL_RCL1->imc_prot_prfl == 0X0A) {
         printf( "04.10.06 problem found\n" );
       }
#endif
       if (   (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X04)  /* Bounds flag */
           && ((D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X20) == 0)) {  /* no Apply last bounds flag */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_ord_bofl;  /* RDP 5 bounds flags */
         goto pfrse20;                      /* needs more data         */
       }
       switch (D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim) {
         case 0:                            /* 0 / 0X00                */
       /* generated from macro M_CO_O00_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_left;  /* RDP 5 order 0 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_left;  /* RDP 5 order 0 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_top;  /* RDP 5 order 0 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_top;  /* RDP 5 order 0 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_width;  /* RDP 5 order 0 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_width;  /* RDP 5 order 0 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_height;  /* RDP 5 order 0 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_height;  /* RDP 5 order 0 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_rop3;  /* RDP 5 order 0 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case 1:                            /* 1 / 0X01                */
       /* generated from macro M_CO_O01_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_left;  /* RDP 5 order 1 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_left;  /* RDP 5 order 1 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_top;  /* RDP 5 order 1 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_top;  /* RDP 5 order 1 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_width;  /* RDP 5 order 1 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_width;  /* RDP 5 order 1 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_height;  /* RDP 5 order 1 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_height;  /* RDP 5 order 1 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_rop3;  /* RDP 5 order 1 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_backgr;  /* RDP 5 order 1 background colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_backcolor = 0;  /* clear Order 1 background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_foregr;  /* RDP 5 order 1 foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_forecolor = 0;  /* clear Order 1 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_x;  /* RDP 5 order 1 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_y;  /* RDP 5 order 1 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_style;  /* RDP 5 order 1 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_hatch;  /* RDP 5 order 1 brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2
           = D_ADSL_RCL1->imc_pos_inp_frame
               - sizeof(D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra);  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra;  /* Order 1 brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o01_brush_data;  /* RDP 5 order 1 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
         case 2:                            /* 2 / 0X02                */
       /* generated from macro M_CO_O02_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_left;  /* RDP 5 order 2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_left;  /* RDP 5 order 2 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_top;  /* RDP 5 order 2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_top;  /* RDP 5 order 2 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_width;  /* RDP 5 order 2 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_width;  /* RDP 5 order 2 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_height;  /* RDP 5 order 2 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_height;  /* RDP 5 order 2 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_rop3;  /* RDP 5 order 2 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_x;  /* RDP 5 order 2 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_x;  /* RDP 5 order 2 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_y;  /* RDP 5 order 2 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_y;  /* RDP 5 order 2 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case 7:                            /* 7 / 0X07                */
       /* generated from macro M_CO_O07_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_left;  /* RDP 5 order 7/0X07 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_left;  /* RDP 5 order 7/0X07 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_top;  /* RDP 5 order 7/0X07 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_top;  /* RDP 5 order 7/0X07 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_right;  /* RDP 5 order 7/0X07 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_right;  /* RDP 5 order 7/0X07 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_bottom;  /* RDP 5 order 7/0X07 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_bottom;  /* RDP 5 order 7/0X07 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_bitmapid;  /* RDP 5 order 7/0X07 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o07.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case 8:                            /* 8 / 0X08                */
       /* generated from macro M_CO_O08_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_left;  /* RDP 5 order 8/0X08 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_left;  /* RDP 5 order 8/0X08 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_top;  /* RDP 5 order 8/0X08 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_top;  /* RDP 5 order 8/0X08 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_right;  /* RDP 5 order 8/0X08 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_right;  /* RDP 5 order 8/0X08 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_bottom;  /* RDP 5 order 8/0X08 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_bottom;  /* RDP 5 order 8/0X08 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_bitmapid;  /* RDP 5 order 8/0X08 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_len_delta_entries = 0;  /* length of points CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case 9:                            /* 9 / 0X09                */
       /* generated from macro M_CO_O09_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_backmode;  /* RDP 5 order 9 backmode */
         D_ADSL_RCO1->dsc_ord_co_o09.usc_backmode = 0;  /* clear RDP 5 order 9 backmode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nxstart;  /* RDP 5 order 9 delta nXStart */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nxstart;  /* RDP 5 order 9 absolute nXStart */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nxstart = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nystart;  /* RDP 5 order 9 delta nYStart */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nystart;  /* RDP 5 order 9 absolute nYStart */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nystart = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nxend;  /* RDP 5 order 9 delta nXEnd */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nxend;  /* RDP 5 order 9 absolute nXEnd */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nxend = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nyend;  /* RDP 5 order 9 delta nYEnd */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nyend;  /* RDP 5 order 9 absolute nYEnd */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nyend = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_backcolor;  /* RDP 5 order 9 BackColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_back_color = 0;  /* clear Order 9 BackColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_brop2;  /* RDP 5 order 9 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penstyle;  /* RDP 5 order 9 PenStyle */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penwidth;  /* RDP 5 order 9 PenWidth */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_pencolor;  /* RDP 5 order 9 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_pencolor = 0;  /* clear Order 9 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case 0X0A:                         /* 10 / 0X0A               */
       /* generated from macro M_CO_O0A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_left;  /* RDP 5 order 10/0AH delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_left;  /* RDP 5 order 10/0AH absolute left */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_top;  /* RDP 5 order 10/0AH delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_top;  /* RDP 5 order 10/0AH absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_width;  /* RDP 5 order 10/0AH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_width;  /* RDP 5 order 10/0AH absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_height;  /* RDP 5 order 10/0AH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_height;  /* RDP 5 order 10/0AH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       iml1 = imrs_colour_tab[ (D_ADSL_RCL1->imc_prot_prfl & 0X70) >> 4 ];
       if (iml1) {                          /* colour specified        */
         if (iml1 < 0) {                    /* value not valid         */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - iml1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         /* get colour big endian                                        */
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
//       D_ADSL_RCL1->imc_prot_6 = 0;
         D_ADSL_RCO1->dsc_ord_co_o0a.umc_color = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_colour;  /* RDP 5 order 10/0AH colour */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case 0X0B:                         /* 11 / 0X0B               */
       /* generated from macro M_CO_O0B_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0b.umc_savedbitmappos = 0;  /* clear Order 11/0BH SaveOffset */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_saveoffset;  /* RDP 5 order 11/0BH SaveOffset */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_left;  /* RDP 5 order 11 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_left;  /* RDP 5 order 11 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_top;  /* RDP 5 order 11 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_top;  /* RDP 5 order 11 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_right;  /* RDP 5 order 11 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_right;  /* RDP 5 order 11 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_bottom;  /* RDP 5 order 11 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_bottom;  /* RDP 5 order 11 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_oper;  /* RDP 5 order 11/0BH operation */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case 0X0D:                         /* 13 / 0X0D               */
       /* generated from macro M_CO_O0D_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_cache_id;  /* RDP 5 order 13/0DH cacheId */
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cache_id = 0;  /* clear cacheId */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_left;  /* RDP 5 order 13 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_left;  /* RDP 5 order 13 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_top;  /* RDP 5 order 13 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_top;  /* RDP 5 order 13 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_width;  /* RDP 5 order 13/0DH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_width;  /* RDP 5 order 13/0DH absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_height;  /* RDP 5 order 13/0DH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_height;  /* RDP 5 order 13/0DH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_rop3;  /* RDP 5 order 13 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_x;  /* RDP 5 order 13 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_x;  /* RDP 5 order 13 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_y;  /* RDP 5 order 13 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_y;  /* RDP 5 order 13 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_bitmapcind;  /* RDP 5 order 13 BitmapCacheIndex */
//       D_ADSL_RCL1->dsrc_ord_co_1[ D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim ].inc_cache_ind = 0;
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_order_0d_00;           /* apply the order 13 / 0DH */
         case 0X0E:                         /* 14 / 0X0E               */
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_cache_id;  /* RDP 5 order 14/0EH cacheId */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cache_id = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_left;  /* RDP 5 order 14 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_left;  /* RDP 5 order 14 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_top;  /* RDP 5 order 14 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_top;  /* RDP 5 order 14 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_width;  /* RDP 5 order 14/0EH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_width;  /* RDP 5 order 14 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_height;  /* RDP 5 order 14/0EH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_height;  /* RDP 5 order 14 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_rop3;  /* RDP 5 order 14 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_x;  /* RDP 5 order 14 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_x;  /* RDP 5 order 14 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_y;  /* RDP 5 order 14 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_y;  /* RDP 5 order 14/0EH abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_backgr;  /* RDP 5 order 14/0EH background colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_backcolor = 0;  /* clear Order 14/0EH background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_foregr;  /* RDP 5 order 14/0EH foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_forecolor = 0;  /* clear Order 14/0EH foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_x;  /* RDP 5 order 14 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_y;  /* RDP 5 order 14 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case 0X0F:                         /* 15 / 0X0F               */
       /* generated from macro M_CO_O0F_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_left;  /* RDP 5 order 15/0FH delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_left;  /* RDP 5 order 15/0FH absolute left */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_top;  /* RDP 5 order 15/0FH delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_top;  /* RDP 5 order 15/0FH absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_width;  /* RDP 5 order 15/0FH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_width;  /* RDP 5 order 15/0FH absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_height;  /* RDP 5 order 15/0FH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_height;  /* RDP 5 order 15/0FH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_rop3;  /* RDP 5 order 15 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0f.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case 0X10:                         /* 16 / 0X10               */
       /* generated from macro M_CO_O10_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_left;  /* RDP 5 order 16/10H delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_left;  /* RDP 5 order 16/10H absolute left */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_top;  /* RDP 5 order 16/10H delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_top;  /* RDP 5 order 16/10H absolute top */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_width;  /* RDP 5 order 16/10H delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_width;  /* RDP 5 order 16/10H absolute width */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_height;  /* RDP 5 order 16/10H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_height;  /* RDP 5 order 16/10H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_rop3;  /* RDP 5 order 16 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_backgr;  /* RDP 5 order 16/10H background colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_backcolor = 0;  /* clear Order 16/10H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_foregr;  /* RDP 5 order 16/10H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_forecolor = 0;  /* clear Order 16/10H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_x;  /* RDP 5 order 16 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_y;  /* RDP 5 order 16 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_style;  /* RDP 5 order 16 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_hatch;  /* RDP 5 order 16/10H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.chrc_brushextra;  /* Order 16/10H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o10_brush_data;  /* RDP 5 order 16 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case 0X11:                         /* 17 / 0X11               */
       /* generated from macro M_CO_O11_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_left;  /* RDP 5 order 17/11H delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_left;  /* RDP 5 order 17/11H absolute left */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_top;  /* RDP 5 order 17/11H delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_top;  /* RDP 5 order 17/11H absolute top */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_width;  /* RDP 5 order 17/11H delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_width;  /* RDP 5 order 17/11H absolute width */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_height;  /* RDP 5 order 17/11H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_height;  /* RDP 5 order 17/11H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_rop3;  /* RDP 5 order 17/11H ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_x;  /* RDP 5 order 17/11H delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_x;  /* RDP 5 order 17/11H abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_y;  /* RDP 5 order 17/11H delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_y;  /* RDP 5 order 17/11H abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case 0X12:                         /* 18 / 0X12               */
       /* generated from macro M_CO_O12_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_left;  /* RDP 5 order 18/12H delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_left;  /* RDP 5 order 18/12H absolute left */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_top;  /* RDP 5 order 18/12H delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_top;  /* RDP 5 order 18/12H absolute top */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_width;  /* RDP 5 order 0 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_width;  /* RDP 5 order 18/12H absolute width */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_height;  /* RDP 5 order 18/12H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_height;  /* RDP 5 order 18/12H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_red;  /* RDP 5 order 18/12H RedOrPaletteIndex */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_green;  /* RDP 5 order 18/12H Green */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_blue;  /* RDP 5 order 18/12H Blue */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o12.usc_len_delta = 0;  /* clear length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case 0X13:                         /* 19 / 0X13               */
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_cache_id;  /* RDP 5 order 19 cache Id */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
//       D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
//       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_deltas;  /* RDP 5 order 19 deltas */
//       D_ADSL_RCL1->usc_o13_deltas = 0;   /* clear Order 19 deltas   */
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_fdrawing;  /* RDP 5 order 19/13H fDrawing */
         D_ADSL_RCO1->dsc_ord_co_o13.usc_fdrawing = 0;  /* clear Order 19/13H fDrawing */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_col_backgr;  /* RDP 5 order 19 background colour */
         D_ADSL_RCO1->dsc_ord_co_o13.umc_backcolor = 0;  /* clear Order 19/13H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_col_foregr;  /* RDP 5 order 19 foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o13.umc_forecolor = 0;  /* clear Order 19/13H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_left;  /* RDP 5 order 19 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_left = 0;  /* clear Order 19/13H background left */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_left;  /* RDP 5 order 19 absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_top;  /* RDP 5 order 19 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_top = 0;  /* clear Order 19/13H background top */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_top;  /* RDP 5 order 19 absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_right;  /* RDP 5 order 19 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_right = 0;  /* clear Order 19/13H background right */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_right;  /* RDP 5 order 19 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_bottom;  /* RDP 5 order 19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_bottom = 0;  /* clear Order 19/13H background bottom */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_bottom;  /* RDP 5 order 19 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_left;  /* RDP 5 order 19 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_left;  /* RDP 5 order 19 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_left = 0;  /* clear Order 19/13H opaque left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_top;  /* RDP 5 order 19 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_top;  /* RDP 5 order 19 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_top = 0;  /* clear Order 19/13H opaque top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_right;  /* RDP 5 order 19 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_right;  /* RDP 5 order 19 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right = 0;  /* clear Order 19/13H opaque right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
         case 0X14:                         /* 20 / 0X14               */
       /* generated from macro M_CO_O14_FIELDS()                       */
       /* PolygonSC (POLYGON_SC_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_delta_start_x;  /* RDP 5 order 20/14H delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_abs_start_x;  /* RDP 5 order 20/14H start X */
         D_ADSL_RCO1->dsc_ord_co_o14.isc_start_x = 0;  /* clear Order 20/14H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_delta_start_y;  /* RDP 5 order 20/14H delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_abs_start_y;  /* RDP 5 order 20/14H start Y */
         D_ADSL_RCO1->dsc_ord_co_o14.isc_start_y = 0;  /* clear Order 20/14H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_brop2;  /* RDP 5 order 20/14H bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_fillmode;  /* RDP 5 order 20/14H FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_brushcolor;  /* RDP 5 order 20/14H BrushColor */
         D_ADSL_RCO1->dsc_ord_co_o14.umc_brushcolor = 0;  /* clear Order 20/14H BrushColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case 0X15:                         /* 21 / 0X15               */
       /* generated from macro M_CO_O15_FIELDS()                       */
       /* PolygonCB (POLYGON_CB_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_delta_start_x;  /* RDP 5 order 21/15H delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_abs_start_x;  /* RDP 5 order 21/15H start X */
         D_ADSL_RCO1->dsc_ord_co_o15.isc_start_x = 0;  /* clear Order 20/14H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_delta_start_y;  /* RDP 5 order 21/15H delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_abs_start_y;  /* RDP 5 order 21/15H start Y */
         D_ADSL_RCO1->dsc_ord_co_o15.isc_start_y = 0;  /* clear Order 21/15H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brop2;  /* RDP 5 order 21/15H bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_fillmode;  /* RDP 5 order 21/15H FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_col_backgr;  /* RDP 5 order 21/15H background colour */
         D_ADSL_RCO1->dsc_ord_co_o15.umc_backcolor = 0;  /* clear Order 21/15H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_col_foregr;  /* RDP 5 order 21/15H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o15.umc_forecolor = 0;  /* clear Order 21/15H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_x;  /* RDP 5 order 21/15H brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_y;  /* RDP 5 order 21/15H brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_style;  /* RDP 5 order 21/15H brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_hatch;  /* RDP 5 order 21/15H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 21/15H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o15_brush_data;  /* RDP 5 order 21/15H brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case 0X16:                         /* 22 / 0X16               */
       /* generated from macro M_CO_O16_FIELDS()                       */
       /* TS_ENC_POLYLINE_ORDER                                        */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_delta_start_x;  /* RDP 5 order 22/0X16 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_abs_start_x;  /* RDP 5 order 22/0X16 start X */
         D_ADSL_RCO1->dsc_ord_co_o16.isc_start_x = 0;  /* clear Order 22/0X16 start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_delta_start_y;  /* RDP 5 order 22/0X16 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_abs_start_y;  /* RDP 5 order 22/0X16 start Y */
         D_ADSL_RCO1->dsc_ord_co_o16.isc_start_y = 0;  /* clear Order 22/0X16 start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_brop2;  /* RDP 5 order 22/0X16 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_brushcacheentry;  /* RDP 5 order 22/0X16 BrushCacheEntry */
         D_ADSL_RCO1->dsc_ord_co_o16.usc_brush_cache_entry = 0;  /* clear Order 22/0X16 brush cache entry */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_pencolor;  /* RDP 5 order 22/0X16 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o16.umc_pencolor = 0;  /* clear Order 22/0X16 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_num_delta_entries;  /* RDP 5 order 22/0X16 number of points along the polyline path */
         goto pfrse20;                      /* needs more data         */
       }
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_len_delta_entries;  /* RDP 5 order 22/0X16 length of points along the polyline path */
       goto pfrse20;                      /* needs more data         */
         case 0X18:                         /* 24 / 0X18               */
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_cache_id;  /* RDP 5 order 24 cache Id */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_fdrawing;  /* RDP 5 order 24/18H fDrawing */
         D_ADSL_RCO1->dsc_ord_co_o18.usc_fdrawing = 0;  /* clear Order 24/18H fDrawing */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_col_backgr;  /* RDP 5 order 24 background colour */
         D_ADSL_RCO1->dsc_ord_co_o18.umc_backcolor = 0;  /* clear Order 24/18H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_col_foregr;  /* RDP 5 order 24/18H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o18.umc_forecolor = 0;  /* clear Order 24/18H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_left;  /* RDP 5 order 24 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_left = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_left;  /* RDP 5 order 24 absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_top;  /* RDP 5 order 24 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_top;  /* RDP 5 order 24 absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_right;  /* RDP 5 order 24 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_right;  /* RDP 5 order 24 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_bottom;  /* RDP 5 order 24 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_bottom;  /* RDP 5 order 24 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_left;  /* RDP 5 order 24 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_left;  /* RDP 5 order 24 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_top;  /* RDP 5 order 24 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_top;  /* RDP 5 order 24 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_right;  /* RDP 5 order 24 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_right;  /* RDP 5 order 24 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case 0X19:                         /* 25 / 0X19               */
       /* generated from macro M_CO_O19_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_left;  /* RDP 5 order 25/0X19 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_left;  /* RDP 5 order 25/0X19 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_top;  /* RDP 5 order 25/0X19 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_top;  /* RDP 5 order 25/0X19 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_right;  /* RDP 5 order 25/0X19 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_right;  /* RDP 5 order 25/0X19 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_bottom;  /* RDP 5 order 25/0X19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_bottom;  /* RDP 5 order 25/0X19 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_brop2;  /* RDP 5 order 25/0X19 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_fillmode;  /* RDP 5 order 25/0X19 FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_color;  /* RDP 5 order 25/0X19 foreground color */
         D_ADSL_RCO1->dsc_ord_co_o19.umc_color = 0;  /* clear Order 25/0X19 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case 0X1A:                         /* 26 / 0X1A               */
       /* generated from macro M_CO_O1A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_left;  /* RDP 5 order 26/0X1A delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_left;  /* RDP 5 order 26/0X1A absolute left */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_top;  /* RDP 5 order 26/0X1A delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_top;  /* RDP 5 order 26/0X1A absolute top */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_right;  /* RDP 5 order 26/0X1A delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_right;  /* RDP 5 order 26/0X1A absolute right */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_bottom;  /* RDP 5 order 26/0X1A delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_bottom;  /* RDP 5 order 26/0X1A absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brop2;  /* RDP 5 order 26/0X1A bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_fillmode;  /* RDP 5 order 26/0X1A FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_backgr;  /* RDP 5 order 26/0X1A background colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_backcolor = 0;  /* clear Order 26/0X1A background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_foregr;  /* RDP 5 order 26/0X1A foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_forecolor = 0;  /* clear Order 26/0X1A foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_y;  /* RDP 5 order 26/0X1A brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_style;  /* RDP 5 order 26/0X1A brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_hatch;  /* RDP 5 order 26/0X1A brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 26/0X1A brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1a_brush_data;  /* RDP 5 order 26/0X1A brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
         case 0X1B:                         /* 27 / 0X1B               */
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_cache_id;  /* RDP 5 order 27/0X1B cache Id */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_flaccel;  /* RDP 5 order 27/0X1B flAccel */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_ulcharinc;  /* RDP 5 order 27/0X1B ulCharInc */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_fopredundant;  /* RDP 5 order 27/0X1B fOpRedundant */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_col_backgr;  /* RDP 5 order 27/0X1B background colour */
         D_ADSL_RCO1->dsc_ord_co_o1b.umc_backcolor = 0;  /* clear Order 27/0X1B background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_col_foregr;  /* RDP 5 order 27/0X1B foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1b.umc_forecolor = 0;  /* clear Order 27/0X1B foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_left;  /* RDP 5 order 27/0X1B delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_left = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_left;  /* RDP 5 order 27/0X1B absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_top;  /* RDP 5 order 27/0X1B delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_top;  /* RDP 5 order 27/0X1B absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_right;  /* RDP 5 order 27/0X1B delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_right;  /* RDP 5 order 27/0X1B absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_bottom;  /* RDP 5 order 27/0X1B delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_bottom;  /* RDP 5 order 27/0X1B absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_left;  /* RDP 5 order 27/0X1B rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_top;  /* RDP 5 order 27/0X1B rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_right;  /* RDP 5 order 27/0X1B rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_bottom;  /* RDP 5 order 27/0X1B rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
       }
       M_ERROR_FRSE_ILLOGIC
     case ied_fsfp_r5_pdu_ord_bofl:         /* RDP 5 bounds flags      */
       D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl = *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCL1->imc_pos_inp_frame < D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_BOUNDS_APPLY()                       */
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X10) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_bounds_left = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_abs_left;  /* RDP 5 bounds absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X10) {
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_delta_left;  /* RDP 5 bounds delta left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X20) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_bounds_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_abs_top;  /* RDP 5 bounds absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X20) {
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_delta_top;  /* RDP 5 bounds delta top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X40) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_bounds_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_abs_right;  /* RDP 5 bounds absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X40) {
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_delta_right;  /* RDP 5 bounds delta right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X80) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_bounds_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_abs_bottom;  /* RDP 5 bounds absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X80) {
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_delta_bottom;  /* RDP 5 bounds delta bottom */
         goto pfrse20;                      /* needs more data         */
       }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
     case ied_fsfp_r5_po_bounds_abs_left:   /* RDP 5 bounds absolute left */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->imc_bounds_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCL1->imc_bounds_left >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_BOUNDS_APPLY()                       */
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X20) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_bounds_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_abs_top;  /* RDP 5 bounds absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X20) {
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_delta_top;  /* RDP 5 bounds delta top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X40) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_bounds_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_abs_right;  /* RDP 5 bounds absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X40) {
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_delta_right;  /* RDP 5 bounds delta right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X80) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_bounds_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_abs_bottom;  /* RDP 5 bounds absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X80) {
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_delta_bottom;  /* RDP 5 bounds delta bottom */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_bounds;                /* after bounds parameters */
     case ied_fsfp_r5_po_bounds_abs_top:    /* RDP 5 bounds absolute top */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->imc_bounds_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCL1->imc_bounds_top >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_BOUNDS_APPLY()                       */
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X40) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_bounds_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_abs_right;  /* RDP 5 bounds absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X40) {
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_delta_right;  /* RDP 5 bounds delta right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X80) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_bounds_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_abs_bottom;  /* RDP 5 bounds absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X80) {
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_delta_bottom;  /* RDP 5 bounds delta bottom */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_bounds;                /* after bounds parameters */
     case ied_fsfp_r5_po_bounds_abs_right:  /* RDP 5 bounds absolute right */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->imc_bounds_right
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCL1->imc_bounds_right > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_BOUNDS_APPLY()                       */
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X80) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_bounds_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_abs_bottom;  /* RDP 5 bounds absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X80) {
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_delta_bottom;  /* RDP 5 bounds delta bottom */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_bounds;                /* after bounds parameters */
     case ied_fsfp_r5_po_bounds_abs_bottom:  /* RDP 5 bounds absolute bottom */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->imc_bounds_bottom
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
#ifndef PROB_050610
       if (D_ADSL_RCL1->imc_bounds_bottom > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
#endif
       goto pfrse_po_bounds;                /* after bounds parameters */
     case ied_fsfp_r5_po_bounds_delta_left:  /* RDP 5 bounds delta left */
       D_ADSL_RCL1->imc_bounds_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCL1->imc_bounds_left < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCL1->imc_bounds_left
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_BOUNDS_APPLY()                       */
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X20) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_bounds_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_abs_top;  /* RDP 5 bounds absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X20) {
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_delta_top;  /* RDP 5 bounds delta top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X40) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_bounds_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_abs_right;  /* RDP 5 bounds absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X40) {
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_delta_right;  /* RDP 5 bounds delta right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X80) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_bounds_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_abs_bottom;  /* RDP 5 bounds absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X80) {
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_delta_bottom;  /* RDP 5 bounds delta bottom */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_bounds;                /* after bounds parameters */
     case ied_fsfp_r5_po_bounds_delta_top:  /* RDP 5 bounds delta top  */
       D_ADSL_RCL1->imc_bounds_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCL1->imc_bounds_top < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCL1->imc_bounds_top
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_BOUNDS_APPLY()                       */
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X40) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_bounds_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_abs_right;  /* RDP 5 bounds absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X40) {
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_delta_right;  /* RDP 5 bounds delta right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X80) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_bounds_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_abs_bottom;  /* RDP 5 bounds absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X80) {
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_delta_bottom;  /* RDP 5 bounds delta bottom */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_bounds;                /* after bounds parameters */
     case ied_fsfp_r5_po_bounds_delta_right:  /* RDP 5 bounds delta right */
       D_ADSL_RCL1->imc_bounds_right
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCL1->imc_bounds_right > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
#ifdef B061229
       if (D_ADSL_RCL1->imc_bounds_right <= D_ADSL_RCL1->imc_bounds_left) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
#endif
       if (D_ADSL_RCL1->imc_bounds_right < D_ADSL_RCL1->imc_bounds_left) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_BOUNDS_APPLY()                       */
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X80) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->imc_bounds_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_abs_bottom;  /* RDP 5 bounds absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_bofl & 0X80) {
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_bounds_delta_bottom;  /* RDP 5 bounds delta bottom */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_bounds;                /* after bounds parameters */
     case ied_fsfp_r5_po_bounds_delta_bottom:  /* RDP 5 bounds delta bottom */
       D_ADSL_RCL1->imc_bounds_bottom
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCL1->imc_bounds_bottom > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
#ifdef B061229
       if (D_ADSL_RCL1->imc_bounds_bottom <= D_ADSL_RCL1->imc_bounds_top) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
#endif
       if (D_ADSL_RCL1->imc_bounds_bottom < D_ADSL_RCL1->imc_bounds_top) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       goto pfrse_po_bounds;                /* after bounds parameters */
     case ied_fsfp_r5_sec_cache_index:      /* RDP 5 secondary cache index */
       D_ADSL_RCL1->imc_prot_2
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* set index to array isrc_glyph_coord                          */
#ifdef OLD01
       D_ADSL_RCL1->imc_prot_1
         = ((D_ADSL_RCL1->imc_prot_6 & 0X0F) * D_GLYCOT2
              + D_ADSL_RCL1->imc_prot_2)
           << 2;
#endif
       D_ADSL_RCL1->imc_prot_1
         = ((D_ADSL_RCL1->imc_order_flags & 0X0F) * D_GLYCOT2
              + D_ADSL_RCL1->imc_prot_2)
           << 2;
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_sec_coor_left_1;  /* RDP 5 secondary coor left 1 */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_sec_coor_left_1:      /* RDP 5 secondary coor left 1 */
       D_ADSL_RCL1->imc_prot_3
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCL1->imc_prot_3 & 0X80) {  /* encoded in two bytes  */
         if ((D_ADSL_RCL1->imc_pos_inp_frame - D_ADSL_RCL1->imc_prot_8 - 4) <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_sec_coor_left_2;  /* RDP 5 secondary coor left 2 */
         goto pfrse20;                      /* process next data       */
       }
       if (D_ADSL_RCL1->imc_prot_3 & 0X40) {  /* encoded negative      */
         D_ADSL_RCL1->imc_prot_3 &= 0X3F;
         D_ADSL_RCL1->imc_prot_3 *= -1;
       }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
     case ied_fsfp_r5_sec_coor_left_2:      /* RDP 5 secondary coor left 2 */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
     case ied_fsfp_r5_sec_coor_top_1:       /* RDP 5 secondary coor top 1 */
       D_ADSL_RCL1->imc_prot_3
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCL1->imc_prot_3 & 0X80) {  /* encoded in two bytes  */
         if ((D_ADSL_RCL1->imc_pos_inp_frame - D_ADSL_RCL1->imc_prot_8 - 3) <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_sec_coor_top_2;  /* RDP 5 secondary coor top 2 */
         goto pfrse20;                      /* process next data       */
       }
       if (D_ADSL_RCL1->imc_prot_3 & 0X40) {  /* encoded negative      */
         D_ADSL_RCL1->imc_prot_3 &= 0X3F;
         D_ADSL_RCL1->imc_prot_3 *= -1;
       }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
     case ied_fsfp_r5_sec_coor_top_2:       /* RDP 5 secondary coor top 2 */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
     case ied_fsfp_r5_sec_coor_width_1:     /* RDP 5 secondary coor width 1 */
       D_ADSL_RCL1->imc_prot_3
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCL1->imc_prot_3 & 0X80) {  /* encoded in two bytes  */
         if ((D_ADSL_RCL1->imc_pos_inp_frame - D_ADSL_RCL1->imc_prot_8 - 2) <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_sec_coor_width_2;  /* RDP 5 secondary coor width 2 */
         goto pfrse20;                      /* process next data       */
       }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
     case ied_fsfp_r5_sec_coor_width_2:     /* RDP 5 secondary coor width 2 */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
     case ied_fsfp_r5_sec_coor_height_1:    /* RDP 5 secondary coor height 1 */
       D_ADSL_RCL1->imc_prot_3
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCL1->imc_prot_3 & 0X80) {  /* encoded in two bytes  */
         if ((D_ADSL_RCL1->imc_pos_inp_frame - D_ADSL_RCL1->imc_prot_8 - 1) <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_sec_coor_height_2;  /* RDP 5 secondary coor height 2 */
         goto pfrse20;                      /* process next data       */
       }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
     case ied_fsfp_r5_sec_coor_height_2:    /* RDP 5 secondary coor height 2 */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
     case ied_fsfp_bitmap_header:           /* bitmap header           */
       while (TRUE) {
         D_ADSL_RCL1->imc_prot_1
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_2 + 2 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       D_ADSL_RCL1->isrc_bitmap_data[ D_ADSL_RCL1->imc_prot_6++ ] = D_ADSL_RCL1->imc_prot_1;
       if (D_ADSL_RCL1->imc_prot_6 < DEF_UPDATE_BITMAP_CO) {  /* number of short update bitmap */
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_1 = 0;       /* clear akkumulator       */
         goto pfrse20;                      /* process next data       */
       }
     m_sdh_printf( adsp_hl_clib_1, "$T09 l%05d s%05d ???0=%d no-bitmap=%d Left=%d Top=%d Right=%d Bottom=%d.",
                   __LINE__, 16556,
                   D_ADSL_RCL1->isrc_bitmap_data[ 0 ],
                   D_ADSL_RCL1->isrc_bitmap_data[ 1 ],
                   D_ADSL_RCL1->isrc_bitmap_data[ 2 ],
                   D_ADSL_RCL1->isrc_bitmap_data[ 3 ],
                   D_ADSL_RCL1->isrc_bitmap_data[ 4 ],
                   D_ADSL_RCL1->isrc_bitmap_data[ 5 ] );
     m_sdh_printf( adsp_hl_clib_1, "---- Width=%d Height=%d bpp=%d.",
                   D_ADSL_RCL1->isrc_bitmap_data[ 6 ],
                   D_ADSL_RCL1->isrc_bitmap_data[ 7 ],
                   D_ADSL_RCL1->isrc_bitmap_data[ 8 ] );
       /* check coordinate right                                       */
       if (D_ADSL_RCL1->isrc_bitmap_data[ 4 ] < D_ADSL_RCL1->isrc_bitmap_data[ 2 ]) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCL1->isrc_bitmap_data[ 4 ] > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* check coordinate bottom                                      */
       if (D_ADSL_RCL1->isrc_bitmap_data[ 5 ] < D_ADSL_RCL1->isrc_bitmap_data[ 3 ]) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCL1->isrc_bitmap_data[ 5 ] > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* check width                                                  */
       if (D_ADSL_RCL1->isrc_bitmap_data[ 6 ]
             <= (D_ADSL_RCL1->isrc_bitmap_data[ 4 ]
                 - D_ADSL_RCL1->isrc_bitmap_data[ 2 ])) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCL1->isrc_bitmap_data[ 6 ] > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* check height                                                 */
       if (D_ADSL_RCL1->isrc_bitmap_data[ 7 ]
             != (D_ADSL_RCL1->isrc_bitmap_data[ 5 ]
                 - D_ADSL_RCL1->isrc_bitmap_data[ 3 ]
                 + 1)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* check bits per pixel                                         */
       if (D_ADSL_RCL1->isrc_bitmap_data[ 8 ] != D_ADSL_RCO1->imc_s_coldep) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_bitmap_compr_flag;  /* bitmap compression flag */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_bitmap_compr_flag:       /* bitmap compression flag */
       switch (*adsl_gai1_inp_1->achc_ginp_cur) {
         case 0X00:                         /* bitmap not compressed   */
           adsl_gai1_inp_1->achc_ginp_cur++;
           D_ADSL_RCL1->imc_pos_inp_frame--;
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_bitmap_ign_byte;  /* bitmap ignore this byte */
           goto pfrse20;                    /* process next data       */
         case 0X01:                         /* compressed data follow  */
           adsl_gai1_inp_1->achc_ginp_cur++;
           D_ADSL_RCL1->imc_pos_inp_frame--;
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_bitmap_spec_lef;  /* bitmap special length encoding flag */
           goto pfrse20;                    /* process next data       */
       }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
     case ied_fsfp_bitmap_ign_byte:         /* bitmap ignore this byte */
       if (*adsl_gai1_inp_1->achc_ginp_cur) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_1 = 0;         /* clear result            */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_bitmap_uncomp_len;  /* bitmap length uncompressed */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_bitmap_uncomp_len:       /* bitmap length uncompressed */
       while (TRUE) {
         D_ADSL_RCL1->imc_prot_1
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_2 + 2 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* compute end of this data                                     */
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame
                                   - D_ADSL_RCL1->imc_prot_1;
       if (D_ADSL_RCL1->imc_prot_2 < D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if ((((D_ADSL_RCL1->isrc_bitmap_data[ 6 ]
              * ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imc_bpp + 3) & (0 - 4))
              * D_ADSL_RCL1->isrc_bitmap_data[ 7 ])
             != D_ADSL_RCL1->imc_prot_1) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_bitmap_out;  /* output of bitmap elements */
       /* fall thru                                                    */
     case ied_fsfp_bitmap_out:              /* output of bitmap elements */
       /* build gather of bitmap data                                  */
       while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
         adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next in chain */
         if (adsl_gai1_inp_1 == NULL) {     /* wait for more data      */
           break;                           /* no data, handled later  */
         }
       }
       iml1 = D_ADSL_RCL1->imc_prot_1;      /* number of bytes of bitmap */
       adsl_gai1_inp_w2 = adsl_gai1_inp_1;  /* get gather              */
       adsl_gai1_w1 = NULL;                 /* first gather not yet set */
       while (TRUE) {                       /* loop over input bytes   */
         if (adsl_gai1_inp_w2 == NULL) {    /* already end of chain    */
           m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d received from server PDU bitmap need more data %d.",
                         __LINE__, 16719,  /* line number for errors */
                         iml1 );            /* length of data needed   */
           /* wait for more data                                       */
           goto p_ret_00;                   /* check how to return     */
         }
         iml2 = adsl_gai1_inp_w2->achc_ginp_end - adsl_gai1_inp_w2->achc_ginp_cur;
         if (iml2 > iml1) iml2 = iml1;
         if (iml2 > 0) {                    /* we have data            */
           if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower) < sizeof(struct dsd_gather_i_1)) {  /* get new area */
             memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
             bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                                DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                                &dsl_aux_get_workarea,
                                                sizeof(struct dsd_aux_get_workarea) );
             if (bol1 == FALSE) {           /* aux returned error      */
               adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
               goto p_cleanup_20;           /* do cleanup now          */
             }
             ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
             ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
           }
           ADSL_OA1->achc_upper -= sizeof(struct dsd_gather_i_1);
#define ADSL_GAI1_L1 ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)
           ADSL_GAI1_L1->achc_ginp_cur = adsl_gai1_inp_w2->achc_ginp_cur;
           ADSL_GAI1_L1->achc_ginp_end = adsl_gai1_inp_w2->achc_ginp_cur + iml2;
           if (adsl_gai1_w1 == NULL) {      /* first gather not yet set */
             adsl_gai1_w1 = ADSL_GAI1_L1;   /* set first gather        */
           } else {
             adsl_gai1_w2->adsc_next = ADSL_GAI1_L1;  /* set chain gather */
           }
           adsl_gai1_w2 = ADSL_GAI1_L1;     /* save last gather        */
#undef ADSL_GAI1_L1
           iml1 -= iml2;                    /* remaining data to decompress */
           if (iml1 <= 0) break;            /* end of data to decompress */
         }
         adsl_gai1_inp_w2 = adsl_gai1_inp_w2->adsc_next;  /* get next in chain */
       }
       adsl_gai1_w2->adsc_next = NULL;      /* set end of chain gather */
       /* consume input                                                */
       while (adsl_gai1_inp_1 != adsl_gai1_inp_w2) {  /* not last gather processed */
         adsl_gai1_inp_1->achc_ginp_cur = adsl_gai1_inp_1->achc_ginp_end;
         adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next in chain */
         if (adsl_gai1_inp_1 == NULL) {     /* already end of chain    */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
         }
       }
       adsl_gai1_inp_1->achc_ginp_cur += iml2;  /* adjust last gather input */
       D_ADSL_RCL1->imc_pos_inp_frame -= D_ADSL_RCL1->imc_prot_1;  /* number of bytes of bitmap */
       if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower)
             < (sizeof(struct dsd_se_co1) + sizeof(struct dsd_awcs_update_bitmap))) {  /* get new area */
         memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
         bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                            DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                            &dsl_aux_get_workarea,
                                            sizeof(struct dsd_aux_get_workarea) );
         if (bol1 == FALSE) {           /* aux returned error      */
           adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
           goto p_cleanup_20;           /* do cleanup now          */
         }
         ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
         ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
       }
       ADSL_OA1->achc_upper -= sizeof(struct dsd_se_co1) + sizeof(struct dsd_awcs_update_bitmap);
#define ADSL_SE_CO1_G ((struct dsd_se_co1 *) ADSL_OA1->achc_upper)
#define ADSL_AWCS_UP_G ((struct dsd_awcs_update_bitmap *) (ADSL_SE_CO1_G + 1))
       ADSL_AWCS_UP_G->isc_left = D_ADSL_RCL1->isrc_bitmap_data[ 2 ];
       ADSL_AWCS_UP_G->isc_top = D_ADSL_RCL1->isrc_bitmap_data[ 3 ];
       ADSL_AWCS_UP_G->isc_right = D_ADSL_RCL1->isrc_bitmap_data[ 4 ] + 1;
       ADSL_AWCS_UP_G->isc_bottom = D_ADSL_RCL1->isrc_bitmap_data[ 5 ] + 1;
       ADSL_AWCS_UP_G->isc_width = D_ADSL_RCL1->isrc_bitmap_data[ 6 ];
       ADSL_AWCS_UP_G->isc_height = D_ADSL_RCL1->isrc_bitmap_data[ 7 ];
       ADSL_AWCS_UP_G->adsc_gai1_data = adsl_gai1_w1;  /* input output data */
       ADSL_SE_CO1_G->iec_se_command = ied_sec_update_bitmap;  /* command update bitmap */
       ADSL_SE_CO1_G->adsc_next = NULL;     /* clear chain field       */
       *ADSL_OA1->aadsc_se_co1_chain = ADSL_SE_CO1_G;  /* append to chain */
       ADSL_OA1->aadsc_se_co1_chain = &ADSL_SE_CO1_G->adsc_next;  /* set new end of chain */
#undef ADSL_SE_CO1_G
#undef ADSL_AWCS_UP_G
       goto pfrse_bitmap_s_20;              /* bitmap has been processed */
     case ied_fsfp_bitmap_spec_lef:         /* bitmap special length encoding flag */
       if ((*adsl_gai1_inp_1->achc_ginp_cur & 0X04) == 0) {
         M_ERROR_FRSE_ILLOGIC
       }
       adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_1 = 0;         /* clear result            */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_bitmap_comp_len;  /* bitmap length compressed */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_bitmap_comp_len:         /* bitmap length compressed */
       while (TRUE) {
         D_ADSL_RCL1->imc_prot_1
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_2 + 2 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* compute end of this data                                     */
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame
                                   - D_ADSL_RCL1->imc_prot_1;
       if (D_ADSL_RCL1->imc_prot_2 < D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_bitmap_comp_data;  /* bitmap compressed data */
       /* fall thru                                                    */
     case ied_fsfp_bitmap_comp_data:        /* bitmap compressed data  */
       /* build gather of bitmap data                                  */
       while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
         adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next in chain */
         if (adsl_gai1_inp_1 == NULL) {     /* wait for more data      */
           break;                           /* no data, handled later  */
         }
       }
       iml1 = D_ADSL_RCL1->imc_prot_1;      /* number of bytes of compressed bitmap */
       adsl_gai1_inp_w2 = adsl_gai1_inp_1;  /* get gather              */
       adsl_gai1_w1 = NULL;                 /* first gather not yet set */
       while (TRUE) {                       /* loop over input bytes   */
         if (adsl_gai1_inp_w2 == NULL) {    /* already end of chain    */
           m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d received from server PDU compressed bitmap need more data %d.",
                         __LINE__, 17029,  /* line number for errors */
                         iml1 );            /* length of data needed   */
           /* wait for more data                                       */
           goto p_ret_00;                   /* check how to return     */
         }
         iml2 = adsl_gai1_inp_w2->achc_ginp_end - adsl_gai1_inp_w2->achc_ginp_cur;
         if (iml2 > iml1) iml2 = iml1;
         if (iml2 > 0) {                    /* we have data            */
           if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower) < sizeof(struct dsd_gather_i_1)) {  /* get new area */
             memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
             bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                                DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                                &dsl_aux_get_workarea,
                                                sizeof(struct dsd_aux_get_workarea) );
             if (bol1 == FALSE) {           /* aux returned error      */
               adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
               goto p_cleanup_20;           /* do cleanup now          */
             }
             ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
             ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
           }
           ADSL_OA1->achc_upper -= sizeof(struct dsd_gather_i_1);
#define ADSL_GAI1_L1 ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)
           ADSL_GAI1_L1->achc_ginp_cur = adsl_gai1_inp_w2->achc_ginp_cur;
           ADSL_GAI1_L1->achc_ginp_end = adsl_gai1_inp_w2->achc_ginp_cur + iml2;
           if (adsl_gai1_w1 == NULL) {      /* first gather not yet set */
             adsl_gai1_w1 = ADSL_GAI1_L1;   /* set first gather        */
           } else {
             adsl_gai1_w2->adsc_next = ADSL_GAI1_L1;  /* set chain gather */
           }
           adsl_gai1_w2 = ADSL_GAI1_L1;     /* save last gather        */
#undef ADSL_GAI1_L1
           iml1 -= iml2;                    /* remaining data to decompress */
           if (iml1 <= 0) break;            /* end of data to decompress */
         }
         adsl_gai1_inp_w2 = adsl_gai1_inp_w2->adsc_next;  /* get next in chain */
       }
       adsl_gai1_w2->adsc_next = NULL;      /* set end of chain gather */
       /* consume input                                                */
       while (adsl_gai1_inp_1 != adsl_gai1_inp_w2) {  /* not last gather processed */
         adsl_gai1_inp_1->achc_ginp_cur = adsl_gai1_inp_1->achc_ginp_end;
         adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next in chain */
         if (adsl_gai1_inp_1 == NULL) {     /* already end of chain    */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
         }
       }
       adsl_gai1_inp_1->achc_ginp_cur += iml2;  /* adjust last gather input */
       D_ADSL_RCL1->imc_pos_inp_frame -= D_ADSL_RCL1->imc_prot_1;  /* number of bytes of bitmap */
       if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower)
             < (sizeof(struct dsd_se_co1) + sizeof(struct dsd_awcs_compr_bitmap))) {  /* get new area */
         memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
         bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                            DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                            &dsl_aux_get_workarea,
                                            sizeof(struct dsd_aux_get_workarea) );
         if (bol1 == FALSE) {           /* aux returned error      */
           adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
           goto p_cleanup_20;           /* do cleanup now          */
         }
         ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
         ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
       }
       ADSL_OA1->achc_upper -= sizeof(struct dsd_se_co1) + sizeof(struct dsd_awcs_compr_bitmap);
#define ADSL_SE_CO1_G ((struct dsd_se_co1 *) ADSL_OA1->achc_upper)
#define ADSL_AWCS_CB_G ((struct dsd_awcs_compr_bitmap *) (ADSL_SE_CO1_G + 1))
       ADSL_AWCS_CB_G->isc_left = D_ADSL_RCL1->isrc_bitmap_data[ 2 ];
       ADSL_AWCS_CB_G->isc_top = D_ADSL_RCL1->isrc_bitmap_data[ 3 ];
       ADSL_AWCS_CB_G->isc_right = D_ADSL_RCL1->isrc_bitmap_data[ 4 ] + 1;
       ADSL_AWCS_CB_G->isc_bottom = D_ADSL_RCL1->isrc_bitmap_data[ 5 ] + 1;
       ADSL_AWCS_CB_G->isc_width = D_ADSL_RCL1->isrc_bitmap_data[ 6 ];
       ADSL_AWCS_CB_G->isc_height = D_ADSL_RCL1->isrc_bitmap_data[ 7 ];
       ADSL_AWCS_CB_G->adsc_gai1_data = adsl_gai1_w1;  /* input output data */
       ADSL_SE_CO1_G->iec_se_command = ied_sec_compr_bitmap;  /* command compressed bitmap */
       ADSL_SE_CO1_G->adsc_next = NULL;     /* clear chain field       */
       *ADSL_OA1->aadsc_se_co1_chain = ADSL_SE_CO1_G;  /* append to chain */
       ADSL_OA1->aadsc_se_co1_chain = &ADSL_SE_CO1_G->adsc_next;  /* set new end of chain */
#undef ADSL_SE_CO1_G
#undef ADSL_AWCS_CB_G
       goto pfrse_bitmap_s_20;              /* bitmap has been processed */
     case ied_fsfp_r5_o00_abs_left:         /* RDP 5 order 0 absolute left */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O00_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_top;  /* RDP 5 order 0 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_top;  /* RDP 5 order 0 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_width;  /* RDP 5 order 0 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_width;  /* RDP 5 order 0 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_height;  /* RDP 5 order 0 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_height;  /* RDP 5 order 0 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_rop3;  /* RDP 5 order 0 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o00_abs_top:          /* RDP 5 order 0 absolute top */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O00_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_width;  /* RDP 5 order 0 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_width;  /* RDP 5 order 0 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_height;  /* RDP 5 order 0 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_height;  /* RDP 5 order 0 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_rop3;  /* RDP 5 order 0 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o00_abs_width:        /* RDP 5 order 0 absolute width */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_width
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O00_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_height;  /* RDP 5 order 0 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_height;  /* RDP 5 order 0 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_rop3;  /* RDP 5 order 0 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o00_abs_height:       /* RDP 5 order 0 absolute height */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_height
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O00_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_rop3;  /* RDP 5 order 0 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o00_delta_left:       /* RDP 5 order 0 delta left */
       D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O00_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_top;  /* RDP 5 order 0 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_top;  /* RDP 5 order 0 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_width;  /* RDP 5 order 0 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_width;  /* RDP 5 order 0 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_height;  /* RDP 5 order 0 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_height;  /* RDP 5 order 0 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_rop3;  /* RDP 5 order 0 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o00_delta_top:        /* RDP 5 order 0 delta top */
       D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned int) D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O00_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_width;  /* RDP 5 order 0 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_width;  /* RDP 5 order 0 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_height;  /* RDP 5 order 0 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_height;  /* RDP 5 order 0 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_rop3;  /* RDP 5 order 0 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o00_delta_width:      /* RDP 5 order 0 delta width */
       D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_width
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O00_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_height;  /* RDP 5 order 0 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_height;  /* RDP 5 order 0 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_rop3;  /* RDP 5 order 0 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o00_delta_height:     /* RDP 5 order 0 delta height */
       D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_height
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O00_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_rop3;  /* RDP 5 order 0 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o00_rop3:             /* RDP 5 order 0 ROP3      */
       D_ADSL_RCO1->dsc_ord_co_o00.ucc_brop3  /* index of the ternary raster operation */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O00_FIELDS()                       */
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o01_abs_left:         /* RDP 5 order 1 absolute left */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O01_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_top;  /* RDP 5 order 1 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_top;  /* RDP 5 order 1 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_width;  /* RDP 5 order 1 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_width;  /* RDP 5 order 1 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_height;  /* RDP 5 order 1 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_height;  /* RDP 5 order 1 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_rop3;  /* RDP 5 order 1 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_backgr;  /* RDP 5 order 1 background colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_backcolor = 0;  /* clear Order 1 background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_foregr;  /* RDP 5 order 1 foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_forecolor = 0;  /* clear Order 1 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_x;  /* RDP 5 order 1 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_y;  /* RDP 5 order 1 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_style;  /* RDP 5 order 1 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_hatch;  /* RDP 5 order 1 brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2
           = D_ADSL_RCL1->imc_pos_inp_frame
               - sizeof(D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra);  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra;  /* Order 1 brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o01_brush_data;  /* RDP 5 order 1 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o01_abs_top:          /* RDP 5 order 1 absolute top */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O01_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_width;  /* RDP 5 order 1 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_width;  /* RDP 5 order 1 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_height;  /* RDP 5 order 1 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_height;  /* RDP 5 order 1 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_rop3;  /* RDP 5 order 1 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_backgr;  /* RDP 5 order 1 background colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_backcolor = 0;  /* clear Order 1 background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_foregr;  /* RDP 5 order 1 foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_forecolor = 0;  /* clear Order 1 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_x;  /* RDP 5 order 1 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_y;  /* RDP 5 order 1 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_style;  /* RDP 5 order 1 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_hatch;  /* RDP 5 order 1 brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2
           = D_ADSL_RCL1->imc_pos_inp_frame
               - sizeof(D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra);  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra;  /* Order 1 brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o01_brush_data;  /* RDP 5 order 1 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o01_abs_width:        /* RDP 5 order 1 absolute width */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_width
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O01_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_height;  /* RDP 5 order 1 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_height;  /* RDP 5 order 1 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_rop3;  /* RDP 5 order 1 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_backgr;  /* RDP 5 order 1 background colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_backcolor = 0;  /* clear Order 1 background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_foregr;  /* RDP 5 order 1 foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_forecolor = 0;  /* clear Order 1 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_x;  /* RDP 5 order 1 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_y;  /* RDP 5 order 1 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_style;  /* RDP 5 order 1 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_hatch;  /* RDP 5 order 1 brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2
           = D_ADSL_RCL1->imc_pos_inp_frame
               - sizeof(D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra);  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra;  /* Order 1 brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o01_brush_data;  /* RDP 5 order 1 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o01_abs_height:       /* RDP 5 order 1 absolute height */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_height
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O01_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_rop3;  /* RDP 5 order 1 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_backgr;  /* RDP 5 order 1 background colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_backcolor = 0;  /* clear Order 1 background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_foregr;  /* RDP 5 order 1 foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_forecolor = 0;  /* clear Order 1 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_x;  /* RDP 5 order 1 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_y;  /* RDP 5 order 1 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_style;  /* RDP 5 order 1 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_hatch;  /* RDP 5 order 1 brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2
           = D_ADSL_RCL1->imc_pos_inp_frame
               - sizeof(D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra);  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra;  /* Order 1 brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o01_brush_data;  /* RDP 5 order 1 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o01_delta_left:       /* RDP 5 order 1 delta left */
       D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O01_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_top;  /* RDP 5 order 1 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_top;  /* RDP 5 order 1 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_width;  /* RDP 5 order 1 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_width;  /* RDP 5 order 1 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_height;  /* RDP 5 order 1 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_height;  /* RDP 5 order 1 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_rop3;  /* RDP 5 order 1 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_backgr;  /* RDP 5 order 1 background colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_backcolor = 0;  /* clear Order 1 background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_foregr;  /* RDP 5 order 1 foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_forecolor = 0;  /* clear Order 1 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_x;  /* RDP 5 order 1 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_y;  /* RDP 5 order 1 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_style;  /* RDP 5 order 1 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_hatch;  /* RDP 5 order 1 brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2
           = D_ADSL_RCL1->imc_pos_inp_frame
               - sizeof(D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra);  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra;  /* Order 1 brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o01_brush_data;  /* RDP 5 order 1 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o01_delta_top:        /* RDP 5 order 1 delta top */
       D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned int) D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O01_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_width;  /* RDP 5 order 1 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_width;  /* RDP 5 order 1 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_height;  /* RDP 5 order 1 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_height;  /* RDP 5 order 1 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_rop3;  /* RDP 5 order 1 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_backgr;  /* RDP 5 order 1 background colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_backcolor = 0;  /* clear Order 1 background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_foregr;  /* RDP 5 order 1 foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_forecolor = 0;  /* clear Order 1 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_x;  /* RDP 5 order 1 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_y;  /* RDP 5 order 1 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_style;  /* RDP 5 order 1 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_hatch;  /* RDP 5 order 1 brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2
           = D_ADSL_RCL1->imc_pos_inp_frame
               - sizeof(D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra);  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra;  /* Order 1 brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o01_brush_data;  /* RDP 5 order 1 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o01_delta_width:      /* RDP 5 order 1 delta width */
       D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_width
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O01_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_height;  /* RDP 5 order 1 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_height;  /* RDP 5 order 1 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_rop3;  /* RDP 5 order 1 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_backgr;  /* RDP 5 order 1 background colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_backcolor = 0;  /* clear Order 1 background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_foregr;  /* RDP 5 order 1 foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_forecolor = 0;  /* clear Order 1 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_x;  /* RDP 5 order 1 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_y;  /* RDP 5 order 1 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_style;  /* RDP 5 order 1 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_hatch;  /* RDP 5 order 1 brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2
           = D_ADSL_RCL1->imc_pos_inp_frame
               - sizeof(D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra);  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra;  /* Order 1 brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o01_brush_data;  /* RDP 5 order 1 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o01_delta_height:     /* RDP 5 order 1 delta height */
       D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_height
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O01_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_rop3;  /* RDP 5 order 1 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_backgr;  /* RDP 5 order 1 background colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_backcolor = 0;  /* clear Order 1 background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_foregr;  /* RDP 5 order 1 foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_forecolor = 0;  /* clear Order 1 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_x;  /* RDP 5 order 1 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_y;  /* RDP 5 order 1 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_style;  /* RDP 5 order 1 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_hatch;  /* RDP 5 order 1 brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2
           = D_ADSL_RCL1->imc_pos_inp_frame
               - sizeof(D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra);  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra;  /* Order 1 brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o01_brush_data;  /* RDP 5 order 1 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o01_rop3:             /* RDP 5 order 1 ROP3      */
       D_ADSL_RCO1->dsc_ord_co_o01.ucc_brop3  /* index of the ternary raster operation */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O01_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_backgr;  /* RDP 5 order 1 background colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_backcolor = 0;  /* clear Order 1 background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_foregr;  /* RDP 5 order 1 foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_forecolor = 0;  /* clear Order 1 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_x;  /* RDP 5 order 1 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_y;  /* RDP 5 order 1 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_style;  /* RDP 5 order 1 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_hatch;  /* RDP 5 order 1 brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2
           = D_ADSL_RCL1->imc_pos_inp_frame
               - sizeof(D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra);  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra;  /* Order 1 brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o01_brush_data;  /* RDP 5 order 1 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o01_col_backgr:       /* RDP 5 order 1 background colour */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o01.umc_backcolor
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O01_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_foregr;  /* RDP 5 order 1 foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_forecolor = 0;  /* clear Order 1 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_x;  /* RDP 5 order 1 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_y;  /* RDP 5 order 1 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_style;  /* RDP 5 order 1 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_hatch;  /* RDP 5 order 1 brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2
           = D_ADSL_RCL1->imc_pos_inp_frame
               - sizeof(D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra);  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra;  /* Order 1 brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o01_brush_data;  /* RDP 5 order 1 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o01_col_foregr:       /* RDP 5 order 1 foreground colour */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o01.umc_forecolor
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O01_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_x;  /* RDP 5 order 1 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_y;  /* RDP 5 order 1 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_style;  /* RDP 5 order 1 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_hatch;  /* RDP 5 order 1 brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2
           = D_ADSL_RCL1->imc_pos_inp_frame
               - sizeof(D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra);  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra;  /* Order 1 brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o01_brush_data;  /* RDP 5 order 1 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o01_brush_x:          /* RDP 5 order 1 brush X   */
       D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.scc_brushorgx  /* top leftmost pixel of brushpattern, x-coordinate */
         = (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O01_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_y;  /* RDP 5 order 1 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_style;  /* RDP 5 order 1 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_hatch;  /* RDP 5 order 1 brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2
           = D_ADSL_RCL1->imc_pos_inp_frame
               - sizeof(D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra);  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra;  /* Order 1 brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o01_brush_data;  /* RDP 5 order 1 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o01_brush_y:          /* RDP 5 order 1 brush Y   */
       D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.scc_brushorgy  /* top leftmost pixel of brushpattern, y-coordinate */
         = (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O01_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_style;  /* RDP 5 order 1 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_hatch;  /* RDP 5 order 1 brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2
           = D_ADSL_RCL1->imc_pos_inp_frame
               - sizeof(D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra);  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra;  /* Order 1 brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o01_brush_data;  /* RDP 5 order 1 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o01_brush_style:      /* RDP 5 order 1 brush style */
       D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.ucc_brushstyle  /* style of brush */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O01_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_hatch;  /* RDP 5 order 1 brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2
           = D_ADSL_RCL1->imc_pos_inp_frame
               - sizeof(D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra);  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra;  /* Order 1 brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o01_brush_data;  /* RDP 5 order 1 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o01_brush_hatch:      /* RDP 5 order 1 brush hatch */
       D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.ucc_brushhatch  /* hatched_brush info or last row of brush-pattern */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O01_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2
           = D_ADSL_RCL1->imc_pos_inp_frame
               - sizeof(D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra);  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra;  /* Order 1 brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o01_brush_data;  /* RDP 5 order 1 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o02_abs_left:         /* RDP 5 order 2 absolute left */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O02_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_top;  /* RDP 5 order 2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_top;  /* RDP 5 order 2 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_width;  /* RDP 5 order 2 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_width;  /* RDP 5 order 2 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_height;  /* RDP 5 order 2 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_height;  /* RDP 5 order 2 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_rop3;  /* RDP 5 order 2 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_x;  /* RDP 5 order 2 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_x;  /* RDP 5 order 2 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_y;  /* RDP 5 order 2 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_y;  /* RDP 5 order 2 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o02_abs_top:          /* RDP 5 order 2 absolute top */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O02_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_width;  /* RDP 5 order 2 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_width;  /* RDP 5 order 2 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_height;  /* RDP 5 order 2 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_height;  /* RDP 5 order 2 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_rop3;  /* RDP 5 order 2 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_x;  /* RDP 5 order 2 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_x;  /* RDP 5 order 2 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_y;  /* RDP 5 order 2 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_y;  /* RDP 5 order 2 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o02_abs_width:        /* RDP 5 order 2 absolute width */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_width
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O02_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_height;  /* RDP 5 order 2 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_height;  /* RDP 5 order 2 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_rop3;  /* RDP 5 order 2 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_x;  /* RDP 5 order 2 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_x;  /* RDP 5 order 2 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_y;  /* RDP 5 order 2 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_y;  /* RDP 5 order 2 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o02_abs_height:       /* RDP 5 order 2 absolute height */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_height
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O02_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_rop3;  /* RDP 5 order 2 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_x;  /* RDP 5 order 2 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_x;  /* RDP 5 order 2 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_y;  /* RDP 5 order 2 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_y;  /* RDP 5 order 2 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o02_delta_left:       /* RDP 5 order 2 delta left */
       D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O02_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_top;  /* RDP 5 order 2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_top;  /* RDP 5 order 2 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_width;  /* RDP 5 order 2 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_width;  /* RDP 5 order 2 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_height;  /* RDP 5 order 2 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_height;  /* RDP 5 order 2 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_rop3;  /* RDP 5 order 2 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_x;  /* RDP 5 order 2 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_x;  /* RDP 5 order 2 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_y;  /* RDP 5 order 2 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_y;  /* RDP 5 order 2 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o02_delta_top:        /* RDP 5 order 2 delta top */
       D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned int) D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O02_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_width;  /* RDP 5 order 2 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_width;  /* RDP 5 order 2 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_height;  /* RDP 5 order 2 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_height;  /* RDP 5 order 2 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_rop3;  /* RDP 5 order 2 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_x;  /* RDP 5 order 2 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_x;  /* RDP 5 order 2 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_y;  /* RDP 5 order 2 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_y;  /* RDP 5 order 2 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o02_delta_width:      /* RDP 5 order 2 delta width */
       D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_width
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O02_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_height;  /* RDP 5 order 2 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_height;  /* RDP 5 order 2 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_rop3;  /* RDP 5 order 2 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_x;  /* RDP 5 order 2 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_x;  /* RDP 5 order 2 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_y;  /* RDP 5 order 2 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_y;  /* RDP 5 order 2 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o02_delta_height:     /* RDP 5 order 2 delta height */
       D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_height
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O02_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_rop3;  /* RDP 5 order 2 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_x;  /* RDP 5 order 2 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_x;  /* RDP 5 order 2 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_y;  /* RDP 5 order 2 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_y;  /* RDP 5 order 2 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o02_rop3:             /* RDP 5 order 2 ROP3      */
       D_ADSL_RCO1->dsc_ord_co_o02.ucc_brop3  /* index of the ternary raster operation */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O02_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_x;  /* RDP 5 order 2 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_x;  /* RDP 5 order 2 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_y;  /* RDP 5 order 2 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_y;  /* RDP 5 order 2 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o02_abs_source_x:     /* RDP 5 order 2 abs source X */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o02.isc_x_src
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O02_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_y;  /* RDP 5 order 2 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_y;  /* RDP 5 order 2 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o02_abs_source_y:     /* RDP 5 order 2 abs source Y */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o02.isc_y_src
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O02_FIELDS()                       */
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o02_delta_source_x:   /* RDP 5 order 2 delta source X */
       D_ADSL_RCO1->dsc_ord_co_o02.isc_x_src
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O02_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_y;  /* RDP 5 order 2 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_y;  /* RDP 5 order 2 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o02_delta_source_y:   /* RDP 5 order 2 delta source Y */
       D_ADSL_RCO1->dsc_ord_co_o02.isc_y_src
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O02_FIELDS()                       */
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o07_abs_left:         /* RDP 5 order 7/0X07 absolute left */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O07_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_top;  /* RDP 5 order 7/0X07 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_top;  /* RDP 5 order 7/0X07 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_right;  /* RDP 5 order 7/0X07 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_right;  /* RDP 5 order 7/0X07 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_bottom;  /* RDP 5 order 7/0X07 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_bottom;  /* RDP 5 order 7/0X07 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_bitmapid;  /* RDP 5 order 7/0X07 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o07.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o07_abs_top:          /* RDP 5 order 7/0X07 absolute top */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O07_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_right;  /* RDP 5 order 7/0X07 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_right;  /* RDP 5 order 7/0X07 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_bottom;  /* RDP 5 order 7/0X07 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_bottom;  /* RDP 5 order 7/0X07 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_bitmapid;  /* RDP 5 order 7/0X07 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o07.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o07_abs_right:        /* RDP 5 order 7/0X07 absolute right */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_right
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_right
             > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_right)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_left)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O07_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_bottom;  /* RDP 5 order 7/0X07 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_bottom;  /* RDP 5 order 7/0X07 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_bitmapid;  /* RDP 5 order 7/0X07 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o07.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o07_abs_bottom:       /* RDP 5 order 7/0X07 absolute bottom */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_bottom
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_bottom
             > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_bottom)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_top)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O07_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_bitmapid;  /* RDP 5 order 7/0X07 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o07.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o07_delta_left:       /* RDP 5 order 7/0X07 delta left */
       D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O07_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_top;  /* RDP 5 order 7/0X07 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_top;  /* RDP 5 order 7/0X07 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_right;  /* RDP 5 order 7/0X07 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_right;  /* RDP 5 order 7/0X07 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_bottom;  /* RDP 5 order 7/0X07 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_bottom;  /* RDP 5 order 7/0X07 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_bitmapid;  /* RDP 5 order 7/0X07 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o07.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o07_delta_top:        /* RDP 5 order 7/0X07 delta top */
       D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O07_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_right;  /* RDP 5 order 7/0X07 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_right;  /* RDP 5 order 7/0X07 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_bottom;  /* RDP 5 order 7/0X07 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_bottom;  /* RDP 5 order 7/0X07 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_bitmapid;  /* RDP 5 order 7/0X07 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o07.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o07_delta_right:      /* RDP 5 order 7/0X07 delta right */
       D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_right
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_right
             > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_right)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_left)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O07_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_bottom;  /* RDP 5 order 7/0X07 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_bottom;  /* RDP 5 order 7/0X07 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_bitmapid;  /* RDP 5 order 7/0X07 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o07.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o07_delta_bottom:     /* RDP 5 order 7/0X07 delta bottom */
       D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_bottom
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_bottom
             > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_bottom)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_top)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O07_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_bitmapid;  /* RDP 5 order 7/0X07 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o07.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o07_bitmapid:         /* RDP 5 order 7/0X07 bitmapId */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o07.usc_bitmap_id  /* offscreen BitmapId */
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O07_FIELDS()                       */
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o08_abs_left:         /* RDP 5 order 8/0X08 absolute left */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O08_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_top;  /* RDP 5 order 8/0X08 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_top;  /* RDP 5 order 8/0X08 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_right;  /* RDP 5 order 8/0X08 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_right;  /* RDP 5 order 8/0X08 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_bottom;  /* RDP 5 order 8/0X08 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_bottom;  /* RDP 5 order 8/0X08 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_bitmapid;  /* RDP 5 order 8/0X08 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_len_delta_entries = 0;  /* length of points CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o08_abs_top:          /* RDP 5 order 8/0X08 absolute top */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O08_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_right;  /* RDP 5 order 8/0X08 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_right;  /* RDP 5 order 8/0X08 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_bottom;  /* RDP 5 order 8/0X08 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_bottom;  /* RDP 5 order 8/0X08 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_bitmapid;  /* RDP 5 order 8/0X08 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_len_delta_entries = 0;  /* length of points CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o08_abs_right:        /* RDP 5 order 8/0X08 absolute right */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_right
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_right
             > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_right)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_left)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O08_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_bottom;  /* RDP 5 order 8/0X08 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_bottom;  /* RDP 5 order 8/0X08 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_bitmapid;  /* RDP 5 order 8/0X08 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_len_delta_entries = 0;  /* length of points CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o08_abs_bottom:       /* RDP 5 order 8/0X08 absolute bottom */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_bottom
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_bottom
             > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_bottom)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_top)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O08_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_bitmapid;  /* RDP 5 order 8/0X08 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_len_delta_entries = 0;  /* length of points CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o08_delta_left:       /* RDP 5 order 8/0X08 delta left */
       D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O08_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_top;  /* RDP 5 order 8/0X08 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_top;  /* RDP 5 order 8/0X08 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_right;  /* RDP 5 order 8/0X08 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_right;  /* RDP 5 order 8/0X08 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_bottom;  /* RDP 5 order 8/0X08 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_bottom;  /* RDP 5 order 8/0X08 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_bitmapid;  /* RDP 5 order 8/0X08 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_len_delta_entries = 0;  /* length of points CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o08_delta_top:        /* RDP 5 order 8/0X08 delta top */
       D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O08_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_right;  /* RDP 5 order 8/0X08 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_right;  /* RDP 5 order 8/0X08 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_bottom;  /* RDP 5 order 8/0X08 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_bottom;  /* RDP 5 order 8/0X08 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_bitmapid;  /* RDP 5 order 8/0X08 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_len_delta_entries = 0;  /* length of points CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o08_delta_right:      /* RDP 5 order 8/0X08 delta right */
       D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_right
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_right
             > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_right)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_left)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O08_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_bottom;  /* RDP 5 order 8/0X08 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_bottom;  /* RDP 5 order 8/0X08 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_bitmapid;  /* RDP 5 order 8/0X08 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_len_delta_entries = 0;  /* length of points CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o08_delta_bottom:     /* RDP 5 order 8/0X08 delta bottom */
       D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_bottom
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_bottom
             > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_bottom)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_top)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O08_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_bitmapid;  /* RDP 5 order 8/0X08 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_len_delta_entries = 0;  /* length of points CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o08_bitmapid:         /* RDP 5 order 8/0X08 bitmapId */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o08.usc_bitmap_id  /* offscreen BitmapId */
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O08_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_len_delta_entries = 0;  /* length of points CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o08_no_delta_entries:  /* nDeltaEntries - number of delta entries */
       D_ADSL_RCO1->dsc_ord_co_o08.ucc_no_delta_entries  /* nDeltaEntries - number of delta entries */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       if (D_ADSL_RCO1->dsc_ord_co_o08.ucc_no_delta_entries == 0) {  /* nDeltaEntries - number of delta entries */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O08_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_len_delta_entries = 0;  /* length of points CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o08_len_delta:        /* length CodedDeltaList   */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o08.usc_len_delta_entries  /* length of points CodedDeltaList */
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o08.usc_len_delta_entries == 0) {  /* length of points CodedDeltaList */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCO1->dsc_ord_co_o08.achc_coded_delta_list  /* contains the points CodedDeltaList */
         = (char *) m_aux_stor_realloc( &ADSL_RDPA_F->dsc_stor_sdh_1,
                                        D_ADSL_RCO1->dsc_ord_co_o08.achc_coded_delta_list,
                                        D_ADSL_RCO1->dsc_ord_co_o08.usc_len_delta_entries );
       D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o08.achc_coded_delta_list;
       D_ADSL_RCL1->imc_prot_2
         = D_ADSL_RCL1->imc_pos_inp_frame - D_ADSL_RCO1->dsc_ord_co_o08.usc_len_delta_entries;
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data         */
       D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_pdu_apply_order;  /* RDP 5 PDU apply order */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_o09_backmode:         /* RDP 5 order 9 backmode  */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o09.usc_backmode
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O09_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nxstart;  /* RDP 5 order 9 delta nXStart */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nxstart;  /* RDP 5 order 9 absolute nXStart */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nxstart = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nystart;  /* RDP 5 order 9 delta nYStart */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nystart;  /* RDP 5 order 9 absolute nYStart */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nystart = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nxend;  /* RDP 5 order 9 delta nXEnd */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nxend;  /* RDP 5 order 9 absolute nXEnd */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nxend = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nyend;  /* RDP 5 order 9 delta nYEnd */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nyend;  /* RDP 5 order 9 absolute nYEnd */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nyend = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_backcolor;  /* RDP 5 order 9 BackColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_back_color = 0;  /* clear Order 9 BackColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_brop2;  /* RDP 5 order 9 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penstyle;  /* RDP 5 order 9 PenStyle */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penwidth;  /* RDP 5 order 9 PenWidth */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_pencolor;  /* RDP 5 order 9 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_pencolor = 0;  /* clear Order 9 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o09_abs_nxstart:      /* RDP 5 order 9 absolute nXStart */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nxstart
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O09_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nystart;  /* RDP 5 order 9 delta nYStart */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nystart;  /* RDP 5 order 9 absolute nYStart */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nystart = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nxend;  /* RDP 5 order 9 delta nXEnd */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nxend;  /* RDP 5 order 9 absolute nXEnd */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nxend = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nyend;  /* RDP 5 order 9 delta nYEnd */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nyend;  /* RDP 5 order 9 absolute nYEnd */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nyend = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_backcolor;  /* RDP 5 order 9 BackColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_back_color = 0;  /* clear Order 9 BackColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_brop2;  /* RDP 5 order 9 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penstyle;  /* RDP 5 order 9 PenStyle */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penwidth;  /* RDP 5 order 9 PenWidth */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_pencolor;  /* RDP 5 order 9 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_pencolor = 0;  /* clear Order 9 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o09_abs_nystart:      /* RDP 5 order 9 absolute nYStart */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nystart
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O09_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nxend;  /* RDP 5 order 9 delta nXEnd */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nxend;  /* RDP 5 order 9 absolute nXEnd */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nxend = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nyend;  /* RDP 5 order 9 delta nYEnd */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nyend;  /* RDP 5 order 9 absolute nYEnd */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nyend = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_backcolor;  /* RDP 5 order 9 BackColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_back_color = 0;  /* clear Order 9 BackColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_brop2;  /* RDP 5 order 9 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penstyle;  /* RDP 5 order 9 PenStyle */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penwidth;  /* RDP 5 order 9 PenWidth */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_pencolor;  /* RDP 5 order 9 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_pencolor = 0;  /* clear Order 9 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o09_abs_nxend:        /* RDP 5 order 9 absolute nXEnd */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nxend
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O09_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nyend;  /* RDP 5 order 9 delta nYEnd */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nyend;  /* RDP 5 order 9 absolute nYEnd */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nyend = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_backcolor;  /* RDP 5 order 9 BackColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_back_color = 0;  /* clear Order 9 BackColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_brop2;  /* RDP 5 order 9 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penstyle;  /* RDP 5 order 9 PenStyle */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penwidth;  /* RDP 5 order 9 PenWidth */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_pencolor;  /* RDP 5 order 9 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_pencolor = 0;  /* clear Order 9 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o09_abs_nyend:        /* RDP 5 order 9 absolute nYEnd */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nyend
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O09_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_backcolor;  /* RDP 5 order 9 BackColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_back_color = 0;  /* clear Order 9 BackColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_brop2;  /* RDP 5 order 9 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penstyle;  /* RDP 5 order 9 PenStyle */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penwidth;  /* RDP 5 order 9 PenWidth */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_pencolor;  /* RDP 5 order 9 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_pencolor = 0;  /* clear Order 9 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o09_delta_nxstart:    /* RDP 5 order 9 delta nXStart */
       D_ADSL_RCO1->dsc_ord_co_o09.isc_nxstart
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O09_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nystart;  /* RDP 5 order 9 delta nYStart */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nystart;  /* RDP 5 order 9 absolute nYStart */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nystart = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nxend;  /* RDP 5 order 9 delta nXEnd */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nxend;  /* RDP 5 order 9 absolute nXEnd */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nxend = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nyend;  /* RDP 5 order 9 delta nYEnd */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nyend;  /* RDP 5 order 9 absolute nYEnd */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nyend = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_backcolor;  /* RDP 5 order 9 BackColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_back_color = 0;  /* clear Order 9 BackColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_brop2;  /* RDP 5 order 9 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penstyle;  /* RDP 5 order 9 PenStyle */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penwidth;  /* RDP 5 order 9 PenWidth */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_pencolor;  /* RDP 5 order 9 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_pencolor = 0;  /* clear Order 9 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o09_delta_nystart:    /* RDP 5 order 9 delta nYStart */
       D_ADSL_RCO1->dsc_ord_co_o09.isc_nystart
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O09_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nxend;  /* RDP 5 order 9 delta nXEnd */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nxend;  /* RDP 5 order 9 absolute nXEnd */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nxend = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nyend;  /* RDP 5 order 9 delta nYEnd */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nyend;  /* RDP 5 order 9 absolute nYEnd */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nyend = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_backcolor;  /* RDP 5 order 9 BackColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_back_color = 0;  /* clear Order 9 BackColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_brop2;  /* RDP 5 order 9 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penstyle;  /* RDP 5 order 9 PenStyle */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penwidth;  /* RDP 5 order 9 PenWidth */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_pencolor;  /* RDP 5 order 9 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_pencolor = 0;  /* clear Order 9 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o09_delta_nxend:      /* RDP 5 order 9 delta nXEnd */
       D_ADSL_RCO1->dsc_ord_co_o09.isc_nxend
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O09_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nyend;  /* RDP 5 order 9 delta nYEnd */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nyend;  /* RDP 5 order 9 absolute nYEnd */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nyend = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_backcolor;  /* RDP 5 order 9 BackColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_back_color = 0;  /* clear Order 9 BackColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_brop2;  /* RDP 5 order 9 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penstyle;  /* RDP 5 order 9 PenStyle */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penwidth;  /* RDP 5 order 9 PenWidth */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_pencolor;  /* RDP 5 order 9 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_pencolor = 0;  /* clear Order 9 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o09_delta_nyend:      /* RDP 5 order 9 delta nYEnd */
       D_ADSL_RCO1->dsc_ord_co_o09.isc_nyend
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O09_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_backcolor;  /* RDP 5 order 9 BackColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_back_color = 0;  /* clear Order 9 BackColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_brop2;  /* RDP 5 order 9 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penstyle;  /* RDP 5 order 9 PenStyle */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penwidth;  /* RDP 5 order 9 PenWidth */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_pencolor;  /* RDP 5 order 9 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_pencolor = 0;  /* clear Order 9 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o09_backcolor:        /* RDP 5 order 9 BackColor */
       /* colour bit / little endian                                   */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o09.umc_back_color
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O09_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_brop2;  /* RDP 5 order 9 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penstyle;  /* RDP 5 order 9 PenStyle */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penwidth;  /* RDP 5 order 9 PenWidth */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_pencolor;  /* RDP 5 order 9 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_pencolor = 0;  /* clear Order 9 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o09_brop2:            /* RDP 5 order 9 bRop2     */
       D_ADSL_RCO1->dsc_ord_co_o09.ucc_brop2
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O09_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penstyle;  /* RDP 5 order 9 PenStyle */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penwidth;  /* RDP 5 order 9 PenWidth */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_pencolor;  /* RDP 5 order 9 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_pencolor = 0;  /* clear Order 9 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o09_penstyle:         /* RDP 5 order 9 PenStyle  */
       D_ADSL_RCO1->dsc_ord_co_o09.ucc_penstyle
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O09_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penwidth;  /* RDP 5 order 9 PenWidth */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_pencolor;  /* RDP 5 order 9 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_pencolor = 0;  /* clear Order 9 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o09_penwidth:         /* RDP 5 order 9 PenWidth  */
       D_ADSL_RCO1->dsc_ord_co_o09.ucc_penwidth
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O09_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_pencolor;  /* RDP 5 order 9 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_pencolor = 0;  /* clear Order 9 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o09_pencolor:         /* RDP 5 order 9 PenColor  */
       /* colour bit / little endian                                   */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o09.umc_pencolor
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O09_FIELDS()                       */
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0a_abs_left:         /* RDP 5 order 10/0AH absolute left */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_top;  /* RDP 5 order 10/0AH delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_top;  /* RDP 5 order 10/0AH absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_width;  /* RDP 5 order 10/0AH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_width;  /* RDP 5 order 10/0AH absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_height;  /* RDP 5 order 10/0AH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_height;  /* RDP 5 order 10/0AH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       iml1 = imrs_colour_tab[ (D_ADSL_RCL1->imc_prot_prfl & 0X70) >> 4 ];
       if (iml1) {                          /* colour specified        */
         if (iml1 < 0) {                    /* value not valid         */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - iml1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         /* get colour big endian                                        */
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
//       D_ADSL_RCL1->imc_prot_6 = 0;
         D_ADSL_RCO1->dsc_ord_co_o0a.umc_color = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_colour;  /* RDP 5 order 10/0AH colour */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0a_abs_top:          /* RDP 5 order 10/0AH absolute top */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_width;  /* RDP 5 order 10/0AH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_width;  /* RDP 5 order 10/0AH absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_height;  /* RDP 5 order 10/0AH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_height;  /* RDP 5 order 10/0AH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       iml1 = imrs_colour_tab[ (D_ADSL_RCL1->imc_prot_prfl & 0X70) >> 4 ];
       if (iml1) {                          /* colour specified        */
         if (iml1 < 0) {                    /* value not valid         */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - iml1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         /* get colour big endian                                        */
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
//       D_ADSL_RCL1->imc_prot_6 = 0;
         D_ADSL_RCO1->dsc_ord_co_o0a.umc_color = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_colour;  /* RDP 5 order 10/0AH colour */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0a_abs_width:        /* RDP 5 order 10/0AH absolute width */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_width
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_height;  /* RDP 5 order 10/0AH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_height;  /* RDP 5 order 10/0AH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       iml1 = imrs_colour_tab[ (D_ADSL_RCL1->imc_prot_prfl & 0X70) >> 4 ];
       if (iml1) {                          /* colour specified        */
         if (iml1 < 0) {                    /* value not valid         */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - iml1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         /* get colour big endian                                        */
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
//       D_ADSL_RCL1->imc_prot_6 = 0;
         D_ADSL_RCO1->dsc_ord_co_o0a.umc_color = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_colour;  /* RDP 5 order 10/0AH colour */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0a_abs_height:       /* RDP 5 order 10/0AH absolute height */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_height
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0A_FIELDS()                       */
       iml1 = imrs_colour_tab[ (D_ADSL_RCL1->imc_prot_prfl & 0X70) >> 4 ];
       if (iml1) {                          /* colour specified        */
         if (iml1 < 0) {                    /* value not valid         */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - iml1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         /* get colour big endian                                        */
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
//       D_ADSL_RCL1->imc_prot_6 = 0;
         D_ADSL_RCO1->dsc_ord_co_o0a.umc_color = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_colour;  /* RDP 5 order 10/0AH colour */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0a_delta_left:       /* RDP 5 order 10/0AH delta left */
       D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_top;  /* RDP 5 order 10/0AH delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_top;  /* RDP 5 order 10/0AH absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_width;  /* RDP 5 order 10/0AH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_width;  /* RDP 5 order 10/0AH absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_height;  /* RDP 5 order 10/0AH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_height;  /* RDP 5 order 10/0AH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       iml1 = imrs_colour_tab[ (D_ADSL_RCL1->imc_prot_prfl & 0X70) >> 4 ];
       if (iml1) {                          /* colour specified        */
         if (iml1 < 0) {                    /* value not valid         */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - iml1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         /* get colour big endian                                        */
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
//       D_ADSL_RCL1->imc_prot_6 = 0;
         D_ADSL_RCO1->dsc_ord_co_o0a.umc_color = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_colour;  /* RDP 5 order 10/0AH colour */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0a_delta_top:        /* RDP 5 order 10/0AH delta top */
       D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned int) D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_width;  /* RDP 5 order 10/0AH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_width;  /* RDP 5 order 10/0AH absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_height;  /* RDP 5 order 10/0AH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_height;  /* RDP 5 order 10/0AH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       iml1 = imrs_colour_tab[ (D_ADSL_RCL1->imc_prot_prfl & 0X70) >> 4 ];
       if (iml1) {                          /* colour specified        */
         if (iml1 < 0) {                    /* value not valid         */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - iml1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         /* get colour big endian                                        */
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
//       D_ADSL_RCL1->imc_prot_6 = 0;
         D_ADSL_RCO1->dsc_ord_co_o0a.umc_color = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_colour;  /* RDP 5 order 10/0AH colour */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0a_delta_width:      /* RDP 5 order 10/0AH delta width */
       D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_width
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_height;  /* RDP 5 order 10/0AH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_height;  /* RDP 5 order 10/0AH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       iml1 = imrs_colour_tab[ (D_ADSL_RCL1->imc_prot_prfl & 0X70) >> 4 ];
       if (iml1) {                          /* colour specified        */
         if (iml1 < 0) {                    /* value not valid         */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - iml1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         /* get colour big endian                                        */
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
//       D_ADSL_RCL1->imc_prot_6 = 0;
         D_ADSL_RCO1->dsc_ord_co_o0a.umc_color = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_colour;  /* RDP 5 order 10/0AH colour */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0a_delta_height:     /* RDP 5 order 10/0AH delta height */
       D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_height
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0A_FIELDS()                       */
       iml1 = imrs_colour_tab[ (D_ADSL_RCL1->imc_prot_prfl & 0X70) >> 4 ];
       if (iml1) {                          /* colour specified        */
         if (iml1 < 0) {                    /* value not valid         */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - iml1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         /* get colour big endian                                        */
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
//       D_ADSL_RCL1->imc_prot_6 = 0;
         D_ADSL_RCO1->dsc_ord_co_o0a.umc_color = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_colour;  /* RDP 5 order 10/0AH colour */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0a_colour:           /* RDP 5 order 10/0AH colour */
       /* colour bit / little endian                                   */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0a.umc_color
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O0A_FIELDS()                       */
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0b_saveoffset:       /* RDP 5 order 11 SaveOffset */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0b.umc_savedbitmappos
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O0B_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_left;  /* RDP 5 order 11 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_left;  /* RDP 5 order 11 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_top;  /* RDP 5 order 11 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_top;  /* RDP 5 order 11 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_right;  /* RDP 5 order 11 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_right;  /* RDP 5 order 11 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_bottom;  /* RDP 5 order 11 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_bottom;  /* RDP 5 order 11 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_oper;  /* RDP 5 order 11/0BH operation */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0b_abs_left:         /* RDP 5 order 11/0BH absolute left */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0B_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_top;  /* RDP 5 order 11 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_top;  /* RDP 5 order 11 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_right;  /* RDP 5 order 11 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_right;  /* RDP 5 order 11 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_bottom;  /* RDP 5 order 11 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_bottom;  /* RDP 5 order 11 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_oper;  /* RDP 5 order 11/0BH operation */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0b_abs_top:          /* RDP 5 order 11/0BH absolute top */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0B_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_right;  /* RDP 5 order 11 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_right;  /* RDP 5 order 11 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_bottom;  /* RDP 5 order 11 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_bottom;  /* RDP 5 order 11 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_oper;  /* RDP 5 order 11/0BH operation */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0b_abs_right:        /* RDP 5 order 11/0BH absolute right */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_right
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_right
             > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_right)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_left)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0B_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_bottom;  /* RDP 5 order 11 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_bottom;  /* RDP 5 order 11 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_oper;  /* RDP 5 order 11/0BH operation */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0b_abs_bottom:       /* RDP 5 order 11/0BH absolute bottom */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_bottom
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_bottom
             > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_bottom)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_top)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0B_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_oper;  /* RDP 5 order 11/0BH operation */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0b_delta_left:       /* RDP 5 order 11/0BH delta left */
       D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0B_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_top;  /* RDP 5 order 11 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_top;  /* RDP 5 order 11 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_right;  /* RDP 5 order 11 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_right;  /* RDP 5 order 11 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_bottom;  /* RDP 5 order 11 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_bottom;  /* RDP 5 order 11 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_oper;  /* RDP 5 order 11/0BH operation */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0b_delta_top:        /* RDP 5 order 11/0BH delta top */
       D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0B_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_right;  /* RDP 5 order 11 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_right;  /* RDP 5 order 11 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_bottom;  /* RDP 5 order 11 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_bottom;  /* RDP 5 order 11 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_oper;  /* RDP 5 order 11/0BH operation */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0b_delta_right:      /* RDP 5 order 11/0BH delta right */
       D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_right
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_right
             > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_right)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_left)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0B_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_bottom;  /* RDP 5 order 11 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_bottom;  /* RDP 5 order 11 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_oper;  /* RDP 5 order 11/0BH operation */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0b_delta_bottom:     /* RDP 5 order 11/0BH delta bottom */
       D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_bottom
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_bottom
             > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_bottom)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_top)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0B_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_oper;  /* RDP 5 order 11/0BH operation */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0b_oper:             /* RDP 5 order 11/0BH operation */
       D_ADSL_RCO1->dsc_ord_co_o0b.ucc_operation = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;  /* Order 11/0BH Operation */
       D_ADSL_RCL1->imc_pos_inp_frame--;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0d_cache_id:         /* RDP 5 order 13/0DH cacheId */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cache_id
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O0D_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_left;  /* RDP 5 order 13 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_left;  /* RDP 5 order 13 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_top;  /* RDP 5 order 13 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_top;  /* RDP 5 order 13 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_width;  /* RDP 5 order 13/0DH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_width;  /* RDP 5 order 13/0DH absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_height;  /* RDP 5 order 13/0DH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_height;  /* RDP 5 order 13/0DH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_rop3;  /* RDP 5 order 13 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_x;  /* RDP 5 order 13 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_x;  /* RDP 5 order 13 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_y;  /* RDP 5 order 13 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_y;  /* RDP 5 order 13 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_bitmapcind;  /* RDP 5 order 13 BitmapCacheIndex */
//       D_ADSL_RCL1->dsrc_ord_co_1[ D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim ].inc_cache_ind = 0;
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_order_0d_00;           /* apply the order 13 / 0DH */
     case ied_fsfp_r5_o0d_abs_left:         /* RDP 5 order 13/0DH absolute left */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0D_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_top;  /* RDP 5 order 13 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_top;  /* RDP 5 order 13 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_width;  /* RDP 5 order 13/0DH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_width;  /* RDP 5 order 13/0DH absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_height;  /* RDP 5 order 13/0DH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_height;  /* RDP 5 order 13/0DH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_rop3;  /* RDP 5 order 13 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_x;  /* RDP 5 order 13 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_x;  /* RDP 5 order 13 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_y;  /* RDP 5 order 13 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_y;  /* RDP 5 order 13 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_bitmapcind;  /* RDP 5 order 13 BitmapCacheIndex */
//       D_ADSL_RCL1->dsrc_ord_co_1[ D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim ].inc_cache_ind = 0;
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_order_0d_00;           /* apply the order 13 / 0DH */
     case ied_fsfp_r5_o0d_abs_top:          /* RDP 5 order 13 absolute top */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0D_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_width;  /* RDP 5 order 13/0DH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_width;  /* RDP 5 order 13/0DH absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_height;  /* RDP 5 order 13/0DH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_height;  /* RDP 5 order 13/0DH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_rop3;  /* RDP 5 order 13 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_x;  /* RDP 5 order 13 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_x;  /* RDP 5 order 13 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_y;  /* RDP 5 order 13 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_y;  /* RDP 5 order 13 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_bitmapcind;  /* RDP 5 order 13 BitmapCacheIndex */
//       D_ADSL_RCL1->dsrc_ord_co_1[ D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim ].inc_cache_ind = 0;
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_order_0d_00;           /* apply the order 13 / 0DH */
     case ied_fsfp_r5_o0d_abs_width:        /* RDP 5 order 13/0DH absolute width */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_width
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0D_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_height;  /* RDP 5 order 13/0DH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_height;  /* RDP 5 order 13/0DH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_rop3;  /* RDP 5 order 13 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_x;  /* RDP 5 order 13 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_x;  /* RDP 5 order 13 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_y;  /* RDP 5 order 13 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_y;  /* RDP 5 order 13 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_bitmapcind;  /* RDP 5 order 13 BitmapCacheIndex */
//       D_ADSL_RCL1->dsrc_ord_co_1[ D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim ].inc_cache_ind = 0;
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_order_0d_00;           /* apply the order 13 / 0DH */
     case ied_fsfp_r5_o0d_abs_height:       /* RDP 5 order 13/0DH absolute height */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_height
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0D_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_rop3;  /* RDP 5 order 13 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_x;  /* RDP 5 order 13 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_x;  /* RDP 5 order 13 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_y;  /* RDP 5 order 13 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_y;  /* RDP 5 order 13 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_bitmapcind;  /* RDP 5 order 13 BitmapCacheIndex */
//       D_ADSL_RCL1->dsrc_ord_co_1[ D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim ].inc_cache_ind = 0;
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_order_0d_00;           /* apply the order 13 / 0DH */
     case ied_fsfp_r5_o0d_delta_left:       /* RDP 5 order 13 delta left */
       D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0D_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_top;  /* RDP 5 order 13 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_top;  /* RDP 5 order 13 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_width;  /* RDP 5 order 13/0DH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_width;  /* RDP 5 order 13/0DH absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_height;  /* RDP 5 order 13/0DH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_height;  /* RDP 5 order 13/0DH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_rop3;  /* RDP 5 order 13 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_x;  /* RDP 5 order 13 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_x;  /* RDP 5 order 13 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_y;  /* RDP 5 order 13 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_y;  /* RDP 5 order 13 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_bitmapcind;  /* RDP 5 order 13 BitmapCacheIndex */
//       D_ADSL_RCL1->dsrc_ord_co_1[ D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim ].inc_cache_ind = 0;
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_order_0d_00;           /* apply the order 13 / 0DH */
     case ied_fsfp_r5_o0d_delta_top:        /* RDP 5 order 13 delta top */
       D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0D_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_width;  /* RDP 5 order 13/0DH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_width;  /* RDP 5 order 13/0DH absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_height;  /* RDP 5 order 13/0DH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_height;  /* RDP 5 order 13/0DH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_rop3;  /* RDP 5 order 13 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_x;  /* RDP 5 order 13 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_x;  /* RDP 5 order 13 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_y;  /* RDP 5 order 13 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_y;  /* RDP 5 order 13 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_bitmapcind;  /* RDP 5 order 13 BitmapCacheIndex */
//       D_ADSL_RCL1->dsrc_ord_co_1[ D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim ].inc_cache_ind = 0;
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_order_0d_00;           /* apply the order 13 / 0DH */
     case ied_fsfp_r5_o0d_delta_width:      /* RDP 5 order 13/0DH delta width */
       D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_width
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0D_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_height;  /* RDP 5 order 13/0DH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_height;  /* RDP 5 order 13/0DH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_rop3;  /* RDP 5 order 13 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_x;  /* RDP 5 order 13 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_x;  /* RDP 5 order 13 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_y;  /* RDP 5 order 13 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_y;  /* RDP 5 order 13 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_bitmapcind;  /* RDP 5 order 13 BitmapCacheIndex */
//       D_ADSL_RCL1->dsrc_ord_co_1[ D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim ].inc_cache_ind = 0;
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_order_0d_00;           /* apply the order 13 / 0DH */
     case ied_fsfp_r5_o0d_delta_height:     /* RDP 5 order 13/0DH delta height */
       D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_height
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0D_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_rop3;  /* RDP 5 order 13 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_x;  /* RDP 5 order 13 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_x;  /* RDP 5 order 13 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_y;  /* RDP 5 order 13 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_y;  /* RDP 5 order 13 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_bitmapcind;  /* RDP 5 order 13 BitmapCacheIndex */
//       D_ADSL_RCL1->dsrc_ord_co_1[ D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim ].inc_cache_ind = 0;
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_order_0d_00;           /* apply the order 13 / 0DH */
     case ied_fsfp_r5_o0d_rop3:             /* RDP 5 order 13/0DH ROP3 */
       D_ADSL_RCO1->dsc_ord_co_o0d.ucc_brop3  /* index of the ternary raster operation */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O0D_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_x;  /* RDP 5 order 13 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_x;  /* RDP 5 order 13 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_y;  /* RDP 5 order 13 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_y;  /* RDP 5 order 13 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_bitmapcind;  /* RDP 5 order 13 BitmapCacheIndex */
//       D_ADSL_RCL1->dsrc_ord_co_1[ D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim ].inc_cache_ind = 0;
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_order_0d_00;           /* apply the order 13 / 0DH */
     case ied_fsfp_r5_o0d_abs_source_x:     /* RDP 5 order 13/0DH abs source X */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_x_src
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O0D_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_y;  /* RDP 5 order 13 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_y;  /* RDP 5 order 13 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_bitmapcind;  /* RDP 5 order 13 BitmapCacheIndex */
//       D_ADSL_RCL1->dsrc_ord_co_1[ D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim ].inc_cache_ind = 0;
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_order_0d_00;           /* apply the order 13 / 0DH */
     case ied_fsfp_r5_o0d_abs_source_y:     /* RDP 5 order 13/0DH abs source Y */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_y_src
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O0D_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_bitmapcind;  /* RDP 5 order 13 BitmapCacheIndex */
//       D_ADSL_RCL1->dsrc_ord_co_1[ D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim ].inc_cache_ind = 0;
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_order_0d_00;           /* apply the order 13 / 0DH */
     case ied_fsfp_r5_o0d_delta_source_x:   /* RDP 5 order 13/0DH delta source X */
       D_ADSL_RCO1->dsc_ord_co_o0d.isc_x_src
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O0D_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_y;  /* RDP 5 order 13 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_y;  /* RDP 5 order 13 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_bitmapcind;  /* RDP 5 order 13 BitmapCacheIndex */
//       D_ADSL_RCL1->dsrc_ord_co_1[ D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim ].inc_cache_ind = 0;
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_order_0d_00;           /* apply the order 13 / 0DH */
     case ied_fsfp_r5_o0d_delta_source_y:   /* RDP 5 order 13/0DH delta source Y */
       D_ADSL_RCO1->dsc_ord_co_o0d.isc_y_src
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O0D_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_bitmapcind;  /* RDP 5 order 13 BitmapCacheIndex */
//       D_ADSL_RCL1->dsrc_ord_co_1[ D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim ].inc_cache_ind = 0;
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_order_0d_00;           /* apply the order 13 / 0DH */
     case ied_fsfp_r5_o0d_bitmapcind:       /* RDP 5 order 13/0DH BitmapCacheIndex */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cacheindex
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       goto pfrse_po_order_0d_00;           /* apply the order 13 / 0DH */
     case ied_fsfp_r5_o0e_cache_id:         /* RDP 5 order 14/0EH cacheId */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cache_id
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_left;  /* RDP 5 order 14 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_left;  /* RDP 5 order 14 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_top;  /* RDP 5 order 14 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_top;  /* RDP 5 order 14 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_width;  /* RDP 5 order 14/0EH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_width;  /* RDP 5 order 14 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_height;  /* RDP 5 order 14/0EH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_height;  /* RDP 5 order 14 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_rop3;  /* RDP 5 order 14 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_x;  /* RDP 5 order 14 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_x;  /* RDP 5 order 14 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_y;  /* RDP 5 order 14 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_y;  /* RDP 5 order 14/0EH abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_backgr;  /* RDP 5 order 14/0EH background colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_backcolor = 0;  /* clear Order 14/0EH background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_foregr;  /* RDP 5 order 14/0EH foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_forecolor = 0;  /* clear Order 14/0EH foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_x;  /* RDP 5 order 14 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_y;  /* RDP 5 order 14 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_abs_left:         /* RDP 5 order 14 absolute left */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_top;  /* RDP 5 order 14 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_top;  /* RDP 5 order 14 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_width;  /* RDP 5 order 14/0EH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_width;  /* RDP 5 order 14 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_height;  /* RDP 5 order 14/0EH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_height;  /* RDP 5 order 14 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_rop3;  /* RDP 5 order 14 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_x;  /* RDP 5 order 14 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_x;  /* RDP 5 order 14 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_y;  /* RDP 5 order 14 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_y;  /* RDP 5 order 14/0EH abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_backgr;  /* RDP 5 order 14/0EH background colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_backcolor = 0;  /* clear Order 14/0EH background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_foregr;  /* RDP 5 order 14/0EH foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_forecolor = 0;  /* clear Order 14/0EH foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_x;  /* RDP 5 order 14 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_y;  /* RDP 5 order 14 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_abs_top:          /* RDP 5 order 14 absolute top */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_width;  /* RDP 5 order 14/0EH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_width;  /* RDP 5 order 14 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_height;  /* RDP 5 order 14/0EH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_height;  /* RDP 5 order 14 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_rop3;  /* RDP 5 order 14 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_x;  /* RDP 5 order 14 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_x;  /* RDP 5 order 14 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_y;  /* RDP 5 order 14 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_y;  /* RDP 5 order 14/0EH abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_backgr;  /* RDP 5 order 14/0EH background colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_backcolor = 0;  /* clear Order 14/0EH background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_foregr;  /* RDP 5 order 14/0EH foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_forecolor = 0;  /* clear Order 14/0EH foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_x;  /* RDP 5 order 14 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_y;  /* RDP 5 order 14 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_abs_width:        /* RDP 5 order 14/0EH absolute width */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_width
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_height;  /* RDP 5 order 14/0EH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_height;  /* RDP 5 order 14 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_rop3;  /* RDP 5 order 14 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_x;  /* RDP 5 order 14 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_x;  /* RDP 5 order 14 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_y;  /* RDP 5 order 14 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_y;  /* RDP 5 order 14/0EH abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_backgr;  /* RDP 5 order 14/0EH background colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_backcolor = 0;  /* clear Order 14/0EH background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_foregr;  /* RDP 5 order 14/0EH foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_forecolor = 0;  /* clear Order 14/0EH foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_x;  /* RDP 5 order 14 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_y;  /* RDP 5 order 14 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_abs_height:       /* RDP 5 order 14/0EH absolute height */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_height
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_rop3;  /* RDP 5 order 14 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_x;  /* RDP 5 order 14 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_x;  /* RDP 5 order 14 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_y;  /* RDP 5 order 14 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_y;  /* RDP 5 order 14/0EH abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_backgr;  /* RDP 5 order 14/0EH background colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_backcolor = 0;  /* clear Order 14/0EH background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_foregr;  /* RDP 5 order 14/0EH foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_forecolor = 0;  /* clear Order 14/0EH foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_x;  /* RDP 5 order 14 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_y;  /* RDP 5 order 14 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_delta_left:       /* RDP 5 order 14 delta left */
       D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_top;  /* RDP 5 order 14 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_top;  /* RDP 5 order 14 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_width;  /* RDP 5 order 14/0EH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_width;  /* RDP 5 order 14 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_height;  /* RDP 5 order 14/0EH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_height;  /* RDP 5 order 14 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_rop3;  /* RDP 5 order 14 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_x;  /* RDP 5 order 14 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_x;  /* RDP 5 order 14 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_y;  /* RDP 5 order 14 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_y;  /* RDP 5 order 14/0EH abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_backgr;  /* RDP 5 order 14/0EH background colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_backcolor = 0;  /* clear Order 14/0EH background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_foregr;  /* RDP 5 order 14/0EH foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_forecolor = 0;  /* clear Order 14/0EH foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_x;  /* RDP 5 order 14 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_y;  /* RDP 5 order 14 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_delta_top:        /* RDP 5 order 14 delta top */
       D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned int) D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_width;  /* RDP 5 order 14/0EH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_width;  /* RDP 5 order 14 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_height;  /* RDP 5 order 14/0EH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_height;  /* RDP 5 order 14 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_rop3;  /* RDP 5 order 14 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_x;  /* RDP 5 order 14 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_x;  /* RDP 5 order 14 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_y;  /* RDP 5 order 14 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_y;  /* RDP 5 order 14/0EH abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_backgr;  /* RDP 5 order 14/0EH background colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_backcolor = 0;  /* clear Order 14/0EH background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_foregr;  /* RDP 5 order 14/0EH foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_forecolor = 0;  /* clear Order 14/0EH foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_x;  /* RDP 5 order 14 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_y;  /* RDP 5 order 14 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_delta_width:      /* RDP 5 order 14/0EH delta width */
       D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_width
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_height;  /* RDP 5 order 14/0EH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_height;  /* RDP 5 order 14 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_rop3;  /* RDP 5 order 14 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_x;  /* RDP 5 order 14 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_x;  /* RDP 5 order 14 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_y;  /* RDP 5 order 14 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_y;  /* RDP 5 order 14/0EH abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_backgr;  /* RDP 5 order 14/0EH background colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_backcolor = 0;  /* clear Order 14/0EH background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_foregr;  /* RDP 5 order 14/0EH foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_forecolor = 0;  /* clear Order 14/0EH foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_x;  /* RDP 5 order 14 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_y;  /* RDP 5 order 14 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_delta_height:     /* RDP 5 order 14/0EH delta height */
       chs_save_tra1 = *adsl_gai1_inp_1->achc_ginp_cur;
       D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_height
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_rop3;  /* RDP 5 order 14 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_x;  /* RDP 5 order 14 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_x;  /* RDP 5 order 14 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_y;  /* RDP 5 order 14 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_y;  /* RDP 5 order 14/0EH abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_backgr;  /* RDP 5 order 14/0EH background colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_backcolor = 0;  /* clear Order 14/0EH background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_foregr;  /* RDP 5 order 14/0EH foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_forecolor = 0;  /* clear Order 14/0EH foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_x;  /* RDP 5 order 14 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_y;  /* RDP 5 order 14 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_rop3:             /* RDP 5 order 14/0EH ROP3 */
       D_ADSL_RCO1->dsc_ord_co_o0e.ucc_brop3  /* index of the ternary raster operation */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_x;  /* RDP 5 order 14 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_x;  /* RDP 5 order 14 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_y;  /* RDP 5 order 14 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_y;  /* RDP 5 order 14/0EH abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_backgr;  /* RDP 5 order 14/0EH background colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_backcolor = 0;  /* clear Order 14/0EH background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_foregr;  /* RDP 5 order 14/0EH foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_forecolor = 0;  /* clear Order 14/0EH foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_x;  /* RDP 5 order 14 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_y;  /* RDP 5 order 14 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_abs_source_x:     /* RDP 5 order 14/0EH abs source X */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_x_src
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_y;  /* RDP 5 order 14 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_y;  /* RDP 5 order 14/0EH abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_backgr;  /* RDP 5 order 14/0EH background colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_backcolor = 0;  /* clear Order 14/0EH background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_foregr;  /* RDP 5 order 14/0EH foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_forecolor = 0;  /* clear Order 14/0EH foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_x;  /* RDP 5 order 14 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_y;  /* RDP 5 order 14 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_abs_source_y:     /* RDP 5 order 14/0EH abs source Y */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_y_src
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_backgr;  /* RDP 5 order 14/0EH background colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_backcolor = 0;  /* clear Order 14/0EH background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_foregr;  /* RDP 5 order 14/0EH foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_forecolor = 0;  /* clear Order 14/0EH foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_x;  /* RDP 5 order 14 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_y;  /* RDP 5 order 14 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_delta_source_x:   /* RDP 5 order 14/0EH delta source X */
       D_ADSL_RCO1->dsc_ord_co_o0e.isc_x_src
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_y;  /* RDP 5 order 14 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_y;  /* RDP 5 order 14/0EH abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_backgr;  /* RDP 5 order 14/0EH background colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_backcolor = 0;  /* clear Order 14/0EH background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_foregr;  /* RDP 5 order 14/0EH foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_forecolor = 0;  /* clear Order 14/0EH foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_x;  /* RDP 5 order 14 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_y;  /* RDP 5 order 14 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_delta_source_y:   /* RDP 5 order 14/0EH delta source Y */
       D_ADSL_RCO1->dsc_ord_co_o0e.isc_y_src
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_backgr;  /* RDP 5 order 14/0EH background colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_backcolor = 0;  /* clear Order 14/0EH background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_foregr;  /* RDP 5 order 14/0EH foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_forecolor = 0;  /* clear Order 14/0EH foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_x;  /* RDP 5 order 14 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_y;  /* RDP 5 order 14 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_col_backgr:       /* RDP 5 order 14/0EH background colour */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_backcolor
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_foregr;  /* RDP 5 order 14/0EH foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_forecolor = 0;  /* clear Order 14/0EH foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_x;  /* RDP 5 order 14 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_y;  /* RDP 5 order 14 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_col_foregr:       /* RDP 5 order 14/0EH foreground colour */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_forecolor
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_x;  /* RDP 5 order 14 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_y;  /* RDP 5 order 14 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_brush_x:          /* RDP 5 order 14/0EH brush X */
       D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.scc_brushorgx  /* top leftmost pixel of brushpattern, x-coordinate */
         = (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_y;  /* RDP 5 order 14 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_brush_y:          /* RDP 5 order 14/0EH brush Y */
       D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.scc_brushorgy  /* top leftmost pixel of brushpattern, y-coordinate */
         = (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_brush_style:      /* RDP 5 order 14/0EH brush style */
       D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.ucc_brushstyle  /* style of brush */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_brush_hatch:      /* RDP 5 order 14/0EH brush hatch */
       D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.ucc_brushhatch  /* hatched_brush info or last row of brush-pattern */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0e_bitmapcind:       /* RDP 5 order 14/0EH BitmapCacheIndex */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0f_abs_left:         /* RDP 5 order 15/0FH absolute left */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0F_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_top;  /* RDP 5 order 15/0FH delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_top;  /* RDP 5 order 15/0FH absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_width;  /* RDP 5 order 15/0FH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_width;  /* RDP 5 order 15/0FH absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_height;  /* RDP 5 order 15/0FH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_height;  /* RDP 5 order 15/0FH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_rop3;  /* RDP 5 order 15 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0f.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0f_abs_top:          /* RDP 5 order 15/0FH absolute top */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0F_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_width;  /* RDP 5 order 15/0FH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_width;  /* RDP 5 order 15/0FH absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_height;  /* RDP 5 order 15/0FH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_height;  /* RDP 5 order 15/0FH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_rop3;  /* RDP 5 order 15 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0f.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0f_abs_width:        /* RDP 5 order 15/0FH absolute width */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_width
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0F_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_height;  /* RDP 5 order 15/0FH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_height;  /* RDP 5 order 15/0FH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_rop3;  /* RDP 5 order 15 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0f.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0f_abs_height:       /* RDP 5 order 15/0FH absolute height */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_height
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0F_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_rop3;  /* RDP 5 order 15 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0f.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0f_delta_left:       /* RDP 5 order 15/0FH delta left */
       D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0F_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_top;  /* RDP 5 order 15/0FH delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_top;  /* RDP 5 order 15/0FH absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_width;  /* RDP 5 order 15/0FH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_width;  /* RDP 5 order 15/0FH absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_height;  /* RDP 5 order 15/0FH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_height;  /* RDP 5 order 15/0FH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_rop3;  /* RDP 5 order 15 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0f.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0f_delta_top:        /* RDP 5 order 15/0FH delta top */
       D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned int) D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0F_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_width;  /* RDP 5 order 15/0FH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_width;  /* RDP 5 order 15/0FH absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_height;  /* RDP 5 order 15/0FH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_height;  /* RDP 5 order 15/0FH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_rop3;  /* RDP 5 order 15 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0f.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0f_delta_width:      /* RDP 5 order 15/0FH delta width */
       D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_width
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0F_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_height;  /* RDP 5 order 15/0FH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_height;  /* RDP 5 order 15/0FH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_rop3;  /* RDP 5 order 15 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0f.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0f_delta_height:     /* RDP 5 order 15/0FH delta height */
       D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_height
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O0F_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_rop3;  /* RDP 5 order 15 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0f.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0f_rop3:             /* RDP 5 order 15 ROP3     */
       D_ADSL_RCO1->dsc_ord_co_o0f.ucc_brop3  /* index of the ternary raster operation */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O0F_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0f.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0f_no_delta_entries:  /* nDeltaEntries - number of delta entries */
       D_ADSL_RCO1->dsc_ord_co_o0f.ucc_no_delta_entries  /* nDeltaEntries - number of delta entries */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       if (D_ADSL_RCO1->dsc_ord_co_o0f.ucc_no_delta_entries == 0) {  /* nDeltaEntries - number of delta entries */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O0F_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0f.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o0f_len_delta:        /* length CodedDeltaList   */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o0f.usc_len_delta  /* length of points CodedDeltaList */
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o0f.usc_len_delta == 0) {  /* length of points CodedDeltaList */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCO1->dsc_ord_co_o0f.achc_delta  /* contains the points CodedDeltaList */
         = (char *) m_aux_stor_realloc( &ADSL_RDPA_F->dsc_stor_sdh_1,
                                        D_ADSL_RCO1->dsc_ord_co_o0f.achc_delta,
                                        D_ADSL_RCO1->dsc_ord_co_o0f.usc_len_delta );
       D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0f.achc_delta;
       D_ADSL_RCL1->imc_prot_2
         = D_ADSL_RCL1->imc_pos_inp_frame - D_ADSL_RCO1->dsc_ord_co_o0f.usc_len_delta;
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data         */
       D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_pdu_apply_order;  /* RDP 5 PDU apply order */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_o10_abs_left:         /* RDP 5 order 16/10H absolute left */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O10_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_top;  /* RDP 5 order 16/10H delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_top;  /* RDP 5 order 16/10H absolute top */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_width;  /* RDP 5 order 16/10H delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_width;  /* RDP 5 order 16/10H absolute width */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_height;  /* RDP 5 order 16/10H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_height;  /* RDP 5 order 16/10H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_rop3;  /* RDP 5 order 16 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_backgr;  /* RDP 5 order 16/10H background colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_backcolor = 0;  /* clear Order 16/10H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_foregr;  /* RDP 5 order 16/10H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_forecolor = 0;  /* clear Order 16/10H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_x;  /* RDP 5 order 16 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_y;  /* RDP 5 order 16 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_style;  /* RDP 5 order 16 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_hatch;  /* RDP 5 order 16/10H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.chrc_brushextra;  /* Order 16/10H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o10_brush_data;  /* RDP 5 order 16 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o10_abs_top:          /* RDP 5 order 16/10H absolute top */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O10_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_width;  /* RDP 5 order 16/10H delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_width;  /* RDP 5 order 16/10H absolute width */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_height;  /* RDP 5 order 16/10H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_height;  /* RDP 5 order 16/10H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_rop3;  /* RDP 5 order 16 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_backgr;  /* RDP 5 order 16/10H background colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_backcolor = 0;  /* clear Order 16/10H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_foregr;  /* RDP 5 order 16/10H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_forecolor = 0;  /* clear Order 16/10H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_x;  /* RDP 5 order 16 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_y;  /* RDP 5 order 16 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_style;  /* RDP 5 order 16 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_hatch;  /* RDP 5 order 16/10H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.chrc_brushextra;  /* Order 16/10H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o10_brush_data;  /* RDP 5 order 16 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o10_abs_width:        /* RDP 5 order 16/10H absolute width */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_width
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O10_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_height;  /* RDP 5 order 16/10H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_height;  /* RDP 5 order 16/10H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_rop3;  /* RDP 5 order 16 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_backgr;  /* RDP 5 order 16/10H background colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_backcolor = 0;  /* clear Order 16/10H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_foregr;  /* RDP 5 order 16/10H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_forecolor = 0;  /* clear Order 16/10H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_x;  /* RDP 5 order 16 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_y;  /* RDP 5 order 16 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_style;  /* RDP 5 order 16 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_hatch;  /* RDP 5 order 16/10H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.chrc_brushextra;  /* Order 16/10H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o10_brush_data;  /* RDP 5 order 16 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o10_abs_height:       /* RDP 5 order 16/10H absolute height */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_height
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O10_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_rop3;  /* RDP 5 order 16 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_backgr;  /* RDP 5 order 16/10H background colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_backcolor = 0;  /* clear Order 16/10H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_foregr;  /* RDP 5 order 16/10H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_forecolor = 0;  /* clear Order 16/10H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_x;  /* RDP 5 order 16 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_y;  /* RDP 5 order 16 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_style;  /* RDP 5 order 16 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_hatch;  /* RDP 5 order 16/10H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.chrc_brushextra;  /* Order 16/10H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o10_brush_data;  /* RDP 5 order 16 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o10_delta_left:       /* RDP 5 order 16/10H delta left */
       D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O10_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_top;  /* RDP 5 order 16/10H delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_top;  /* RDP 5 order 16/10H absolute top */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_width;  /* RDP 5 order 16/10H delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_width;  /* RDP 5 order 16/10H absolute width */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_height;  /* RDP 5 order 16/10H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_height;  /* RDP 5 order 16/10H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_rop3;  /* RDP 5 order 16 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_backgr;  /* RDP 5 order 16/10H background colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_backcolor = 0;  /* clear Order 16/10H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_foregr;  /* RDP 5 order 16/10H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_forecolor = 0;  /* clear Order 16/10H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_x;  /* RDP 5 order 16 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_y;  /* RDP 5 order 16 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_style;  /* RDP 5 order 16 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_hatch;  /* RDP 5 order 16/10H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.chrc_brushextra;  /* Order 16/10H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o10_brush_data;  /* RDP 5 order 16 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o10_delta_top:        /* RDP 5 order 16/10H delta top */
       D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned int) D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O10_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_width;  /* RDP 5 order 16/10H delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_width;  /* RDP 5 order 16/10H absolute width */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_height;  /* RDP 5 order 16/10H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_height;  /* RDP 5 order 16/10H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_rop3;  /* RDP 5 order 16 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_backgr;  /* RDP 5 order 16/10H background colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_backcolor = 0;  /* clear Order 16/10H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_foregr;  /* RDP 5 order 16/10H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_forecolor = 0;  /* clear Order 16/10H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_x;  /* RDP 5 order 16 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_y;  /* RDP 5 order 16 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_style;  /* RDP 5 order 16 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_hatch;  /* RDP 5 order 16/10H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.chrc_brushextra;  /* Order 16/10H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o10_brush_data;  /* RDP 5 order 16 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o10_delta_width:      /* RDP 5 order 16/10H delta width */
       D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_width
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O10_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_height;  /* RDP 5 order 16/10H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_height;  /* RDP 5 order 16/10H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_rop3;  /* RDP 5 order 16 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_backgr;  /* RDP 5 order 16/10H background colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_backcolor = 0;  /* clear Order 16/10H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_foregr;  /* RDP 5 order 16/10H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_forecolor = 0;  /* clear Order 16/10H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_x;  /* RDP 5 order 16 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_y;  /* RDP 5 order 16 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_style;  /* RDP 5 order 16 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_hatch;  /* RDP 5 order 16/10H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.chrc_brushextra;  /* Order 16/10H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o10_brush_data;  /* RDP 5 order 16 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o10_delta_height:     /* RDP 5 order 16/10H delta height */
       D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_height
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O10_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_rop3;  /* RDP 5 order 16 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_backgr;  /* RDP 5 order 16/10H background colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_backcolor = 0;  /* clear Order 16/10H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_foregr;  /* RDP 5 order 16/10H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_forecolor = 0;  /* clear Order 16/10H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_x;  /* RDP 5 order 16 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_y;  /* RDP 5 order 16 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_style;  /* RDP 5 order 16 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_hatch;  /* RDP 5 order 16/10H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.chrc_brushextra;  /* Order 16/10H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o10_brush_data;  /* RDP 5 order 16 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o10_rop3:             /* RDP 5 order 16 ROP3     */
       D_ADSL_RCO1->dsc_ord_co_o10.ucc_brop3  /* index of the ternary raster operation */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O10_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_backgr;  /* RDP 5 order 16/10H background colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_backcolor = 0;  /* clear Order 16/10H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_foregr;  /* RDP 5 order 16/10H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_forecolor = 0;  /* clear Order 16/10H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_x;  /* RDP 5 order 16 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_y;  /* RDP 5 order 16 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_style;  /* RDP 5 order 16 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_hatch;  /* RDP 5 order 16/10H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.chrc_brushextra;  /* Order 16/10H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o10_brush_data;  /* RDP 5 order 16 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o10_col_backgr:       /* RDP 5 order 16/10H background colour */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o10.umc_backcolor
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O10_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_foregr;  /* RDP 5 order 16/10H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_forecolor = 0;  /* clear Order 16/10H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_x;  /* RDP 5 order 16 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_y;  /* RDP 5 order 16 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_style;  /* RDP 5 order 16 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_hatch;  /* RDP 5 order 16/10H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.chrc_brushextra;  /* Order 16/10H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o10_brush_data;  /* RDP 5 order 16 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o10_col_foregr:       /* RDP 5 order 16/10H foreground colour */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o10.umc_forecolor
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O10_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_x;  /* RDP 5 order 16 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_y;  /* RDP 5 order 16 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_style;  /* RDP 5 order 16 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_hatch;  /* RDP 5 order 16/10H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.chrc_brushextra;  /* Order 16/10H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o10_brush_data;  /* RDP 5 order 16 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o10_brush_x:          /* RDP 5 order 16 brush X  */
       D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.scc_brushorgx  /* top leftmost pixel of brushpattern, x-coordinate */
         = (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O10_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_y;  /* RDP 5 order 16 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_style;  /* RDP 5 order 16 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_hatch;  /* RDP 5 order 16/10H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.chrc_brushextra;  /* Order 16/10H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o10_brush_data;  /* RDP 5 order 16 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o10_brush_y:          /* RDP 5 order 16 brush Y  */
       D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.scc_brushorgy  /* top leftmost pixel of brushpattern, y-coordinate */
         = (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O10_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_style;  /* RDP 5 order 16 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_hatch;  /* RDP 5 order 16/10H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.chrc_brushextra;  /* Order 16/10H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o10_brush_data;  /* RDP 5 order 16 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o10_brush_style:      /* RDP 5 order 16 brush style */
       D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.ucc_brushstyle  /* style of brush */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O10_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_hatch;  /* RDP 5 order 16/10H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.chrc_brushextra;  /* Order 16/10H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o10_brush_data;  /* RDP 5 order 16 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o10_brush_hatch:      /* RDP 5 order 16/10H brush hatch */
       D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.ucc_brushhatch  /* hatched_brush info or last row of brush-pattern */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O10_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.chrc_brushextra;  /* Order 16/10H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o10_brush_data;  /* RDP 5 order 16 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o10_no_delta_entries:  /* nDeltaEntries - number of delta entries */
       D_ADSL_RCO1->dsc_ord_co_o10.ucc_no_delta_entries  /* nDeltaEntries - number of delta entries */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       if (D_ADSL_RCO1->dsc_ord_co_o10.ucc_no_delta_entries == 0) {  /* nDeltaEntries - number of delta entries */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O10_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o10_len_delta:        /* length CodedDeltaList   */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta  /* length of points CodedDeltaList */
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta == 0) {  /* length of points CodedDeltaList */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCO1->dsc_ord_co_o10.achc_delta  /* contains the points CodedDeltaList */
         = (char *) m_aux_stor_realloc( &ADSL_RDPA_F->dsc_stor_sdh_1,
                                        D_ADSL_RCO1->dsc_ord_co_o10.achc_delta,
                                        D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta );
       D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o10.achc_delta;
       D_ADSL_RCL1->imc_prot_2
         = D_ADSL_RCL1->imc_pos_inp_frame - D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta;
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data         */
       D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_pdu_apply_order;  /* RDP 5 PDU apply order */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_o11_abs_left:         /* RDP 5 order 17/11H absolute left */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O11_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_top;  /* RDP 5 order 17/11H delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_top;  /* RDP 5 order 17/11H absolute top */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_width;  /* RDP 5 order 17/11H delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_width;  /* RDP 5 order 17/11H absolute width */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_height;  /* RDP 5 order 17/11H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_height;  /* RDP 5 order 17/11H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_rop3;  /* RDP 5 order 17/11H ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_x;  /* RDP 5 order 17/11H delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_x;  /* RDP 5 order 17/11H abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_y;  /* RDP 5 order 17/11H delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_y;  /* RDP 5 order 17/11H abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o11_abs_top:          /* RDP 5 order 17/11H absolute top */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O11_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_width;  /* RDP 5 order 17/11H delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_width;  /* RDP 5 order 17/11H absolute width */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_height;  /* RDP 5 order 17/11H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_height;  /* RDP 5 order 17/11H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_rop3;  /* RDP 5 order 17/11H ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_x;  /* RDP 5 order 17/11H delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_x;  /* RDP 5 order 17/11H abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_y;  /* RDP 5 order 17/11H delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_y;  /* RDP 5 order 17/11H abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o11_abs_width:        /* RDP 5 order 17/11H absolute width */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_width
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O11_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_height;  /* RDP 5 order 17/11H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_height;  /* RDP 5 order 17/11H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_rop3;  /* RDP 5 order 17/11H ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_x;  /* RDP 5 order 17/11H delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_x;  /* RDP 5 order 17/11H abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_y;  /* RDP 5 order 17/11H delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_y;  /* RDP 5 order 17/11H abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o11_abs_height:       /* RDP 5 order 17/11H absolute height */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_height
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O11_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_rop3;  /* RDP 5 order 17/11H ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_x;  /* RDP 5 order 17/11H delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_x;  /* RDP 5 order 17/11H abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_y;  /* RDP 5 order 17/11H delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_y;  /* RDP 5 order 17/11H abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o11_delta_left:       /* RDP 5 order 17/11H delta left */
       D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O11_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_top;  /* RDP 5 order 17/11H delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_top;  /* RDP 5 order 17/11H absolute top */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_width;  /* RDP 5 order 17/11H delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_width;  /* RDP 5 order 17/11H absolute width */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_height;  /* RDP 5 order 17/11H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_height;  /* RDP 5 order 17/11H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_rop3;  /* RDP 5 order 17/11H ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_x;  /* RDP 5 order 17/11H delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_x;  /* RDP 5 order 17/11H abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_y;  /* RDP 5 order 17/11H delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_y;  /* RDP 5 order 17/11H abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o11_delta_top:        /* RDP 5 order 17/11H delta top */
       D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned int) D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O11_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_width;  /* RDP 5 order 17/11H delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_width;  /* RDP 5 order 17/11H absolute width */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_height;  /* RDP 5 order 17/11H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_height;  /* RDP 5 order 17/11H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_rop3;  /* RDP 5 order 17/11H ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_x;  /* RDP 5 order 17/11H delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_x;  /* RDP 5 order 17/11H abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_y;  /* RDP 5 order 17/11H delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_y;  /* RDP 5 order 17/11H abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o11_delta_width:      /* RDP 5 order 17/11H delta width */
       D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_width
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O11_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_height;  /* RDP 5 order 17/11H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_height;  /* RDP 5 order 17/11H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_rop3;  /* RDP 5 order 17/11H ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_x;  /* RDP 5 order 17/11H delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_x;  /* RDP 5 order 17/11H abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_y;  /* RDP 5 order 17/11H delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_y;  /* RDP 5 order 17/11H abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o11_delta_height:     /* RDP 5 order 17/11H delta height */
       D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_height
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O11_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_rop3;  /* RDP 5 order 17/11H ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_x;  /* RDP 5 order 17/11H delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_x;  /* RDP 5 order 17/11H abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_y;  /* RDP 5 order 17/11H delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_y;  /* RDP 5 order 17/11H abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o11_rop3:             /* RDP 5 order 17/11H ROP3 */
       D_ADSL_RCO1->dsc_ord_co_o11.ucc_brop3  /* index of the ternary raster operation */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O11_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_x;  /* RDP 5 order 17/11H delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_x;  /* RDP 5 order 17/11H abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_y;  /* RDP 5 order 17/11H delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_y;  /* RDP 5 order 17/11H abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o11_abs_source_x:     /* RDP 5 order 17/11H abs source X */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o11.isc_x_src
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O11_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_y;  /* RDP 5 order 17/11H delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_y;  /* RDP 5 order 17/11H abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o11_abs_source_y:     /* RDP 5 order 17/11H abs source Y */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o11.isc_y_src
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O11_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o11_delta_source_x:   /* RDP 5 order 17/11H delta source X */
       D_ADSL_RCO1->dsc_ord_co_o11.isc_x_src
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O11_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_y;  /* RDP 5 order 17/11H delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_y;  /* RDP 5 order 17/11H abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o11_delta_source_y:   /* RDP 5 order 17/11H delta source Y */
       D_ADSL_RCO1->dsc_ord_co_o11.isc_y_src
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O11_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o11_no_delta_entries:  /* nDeltaEntries - number of delta entries */
       D_ADSL_RCO1->dsc_ord_co_o11.ucc_no_delta_entries  /* nDeltaEntries - number of delta entries */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       if (D_ADSL_RCO1->dsc_ord_co_o11.ucc_no_delta_entries == 0) {  /* nDeltaEntries - number of delta entries */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O11_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o11_len_delta:        /* length CodedDeltaList   */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta  /* length of points CodedDeltaList */
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta == 0) {  /* length of points CodedDeltaList */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCO1->dsc_ord_co_o11.achc_delta  /* contains the points CodedDeltaList */
         = (char *) m_aux_stor_realloc( &ADSL_RDPA_F->dsc_stor_sdh_1,
                                        D_ADSL_RCO1->dsc_ord_co_o11.achc_delta,
                                        D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta );
       D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o11.achc_delta;
       D_ADSL_RCL1->imc_prot_2
         = D_ADSL_RCL1->imc_pos_inp_frame - D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta;
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data         */
       D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_pdu_apply_order;  /* RDP 5 PDU apply order */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_o12_abs_left:         /* RDP 5 order 18/12H absolute left */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O12_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_top;  /* RDP 5 order 18/12H delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_top;  /* RDP 5 order 18/12H absolute top */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_width;  /* RDP 5 order 0 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_width;  /* RDP 5 order 18/12H absolute width */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_height;  /* RDP 5 order 18/12H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_height;  /* RDP 5 order 18/12H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_red;  /* RDP 5 order 18/12H RedOrPaletteIndex */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_green;  /* RDP 5 order 18/12H Green */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_blue;  /* RDP 5 order 18/12H Blue */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o12.usc_len_delta = 0;  /* clear length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o12_abs_top:          /* RDP 5 order 18/12H absolute top */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O12_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_width;  /* RDP 5 order 0 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_width;  /* RDP 5 order 18/12H absolute width */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_height;  /* RDP 5 order 18/12H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_height;  /* RDP 5 order 18/12H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_red;  /* RDP 5 order 18/12H RedOrPaletteIndex */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_green;  /* RDP 5 order 18/12H Green */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_blue;  /* RDP 5 order 18/12H Blue */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o12.usc_len_delta = 0;  /* clear length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o12_abs_width:        /* RDP 5 order 18/12H absolute width */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_width
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O12_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_height;  /* RDP 5 order 18/12H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_height;  /* RDP 5 order 18/12H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_red;  /* RDP 5 order 18/12H RedOrPaletteIndex */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_green;  /* RDP 5 order 18/12H Green */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_blue;  /* RDP 5 order 18/12H Blue */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o12.usc_len_delta = 0;  /* clear length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o12_abs_height:       /* RDP 5 order 18/12H absolute height */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_height
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O12_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_red;  /* RDP 5 order 18/12H RedOrPaletteIndex */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_green;  /* RDP 5 order 18/12H Green */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_blue;  /* RDP 5 order 18/12H Blue */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o12.usc_len_delta = 0;  /* clear length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o12_delta_left:       /* RDP 5 order 18/12H delta left */
       D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O12_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_top;  /* RDP 5 order 18/12H delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_top;  /* RDP 5 order 18/12H absolute top */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_width;  /* RDP 5 order 0 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_width;  /* RDP 5 order 18/12H absolute width */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_height;  /* RDP 5 order 18/12H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_height;  /* RDP 5 order 18/12H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_red;  /* RDP 5 order 18/12H RedOrPaletteIndex */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_green;  /* RDP 5 order 18/12H Green */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_blue;  /* RDP 5 order 18/12H Blue */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o12.usc_len_delta = 0;  /* clear length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o12_delta_top:        /* RDP 5 order 18/12H delta top */
       D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned int) D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O12_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_width;  /* RDP 5 order 0 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_width;  /* RDP 5 order 18/12H absolute width */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_height;  /* RDP 5 order 18/12H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_height;  /* RDP 5 order 18/12H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_red;  /* RDP 5 order 18/12H RedOrPaletteIndex */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_green;  /* RDP 5 order 18/12H Green */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_blue;  /* RDP 5 order 18/12H Blue */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o12.usc_len_delta = 0;  /* clear length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o12_delta_width:      /* RDP 5 order 18/12H delta width */
       D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_width
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_width <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_width
             + D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_left
               > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O12_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_height;  /* RDP 5 order 18/12H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_height;  /* RDP 5 order 18/12H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_red;  /* RDP 5 order 18/12H RedOrPaletteIndex */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_green;  /* RDP 5 order 18/12H Green */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_blue;  /* RDP 5 order 18/12H Blue */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o12.usc_len_delta = 0;  /* clear length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o12_delta_height:     /* RDP 5 order 18/12H delta height */
       D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_height
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_height <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_height
             + D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_top
               > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O12_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_red;  /* RDP 5 order 18/12H RedOrPaletteIndex */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_green;  /* RDP 5 order 18/12H Green */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_blue;  /* RDP 5 order 18/12H Blue */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o12.usc_len_delta = 0;  /* clear length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o12_color_red:          /* RDP 5 order 18/12H RedOrPaletteIndex */
       D_ADSL_RCO1->dsc_ord_co_o12.ucc_color_red  /* RedOrPaletteIndex */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O12_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_green;  /* RDP 5 order 18/12H Green */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_blue;  /* RDP 5 order 18/12H Blue */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o12.usc_len_delta = 0;  /* clear length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o12_color_green:        /* RDP 5 order 18/12H Green */
       D_ADSL_RCO1->dsc_ord_co_o12.ucc_color_green  /* Green           */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O12_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_blue;  /* RDP 5 order 18/12H Blue */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o12.usc_len_delta = 0;  /* clear length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o12_color_blue:         /* RDP 5 order 18/12H Blue */
       D_ADSL_RCO1->dsc_ord_co_o12.ucc_color_blue  /* Blue             */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O12_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o12.usc_len_delta = 0;  /* clear length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o12_no_delta_entries:  /* RDP 5 order 18/12H nDeltaEntries - number of delta entries */
       D_ADSL_RCO1->dsc_ord_co_o12.ucc_no_delta_entries  /* nDeltaEntries - number of delta entries */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       if (D_ADSL_RCO1->dsc_ord_co_o12.ucc_no_delta_entries == 0) {  /* nDeltaEntries - number of delta entries */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O12_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o12.usc_len_delta = 0;  /* clear length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o12_len_delta:        /* length CodedDeltaList   */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o12.usc_len_delta   /* length CodedDeltaList */
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o12.usc_len_delta == 0) {  /* length CodedDeltaList */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCO1->dsc_ord_co_o12.achc_delta  /* CodedDeltaList       */
         = (char *) m_aux_stor_realloc( &ADSL_RDPA_F->dsc_stor_sdh_1,
                                        D_ADSL_RCO1->dsc_ord_co_o12.achc_delta,
                                        D_ADSL_RCO1->dsc_ord_co_o12.usc_len_delta );
       D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o12.achc_delta;
       D_ADSL_RCL1->imc_prot_2
         = D_ADSL_RCL1->imc_pos_inp_frame - D_ADSL_RCO1->dsc_ord_co_o12.usc_len_delta;
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data         */
       D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_pdu_apply_order;  /* RDP 5 PDU apply order */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_o13_cache_id:         /* RDP 5 order 19/13H cache Id */
       D_ADSL_RCO1->dsc_ord_co_o13.ucc_cache_id = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
//       D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
//       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_deltas;  /* RDP 5 order 19 deltas */
//       D_ADSL_RCL1->usc_o13_deltas = 0;   /* clear Order 19 deltas   */
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_fdrawing;  /* RDP 5 order 19/13H fDrawing */
         D_ADSL_RCO1->dsc_ord_co_o13.usc_fdrawing = 0;  /* clear Order 19/13H fDrawing */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_col_backgr;  /* RDP 5 order 19 background colour */
         D_ADSL_RCO1->dsc_ord_co_o13.umc_backcolor = 0;  /* clear Order 19/13H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_col_foregr;  /* RDP 5 order 19 foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o13.umc_forecolor = 0;  /* clear Order 19/13H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_left;  /* RDP 5 order 19 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_left = 0;  /* clear Order 19/13H background left */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_left;  /* RDP 5 order 19 absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_top;  /* RDP 5 order 19 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_top = 0;  /* clear Order 19/13H background top */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_top;  /* RDP 5 order 19 absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_right;  /* RDP 5 order 19 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_right = 0;  /* clear Order 19/13H background right */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_right;  /* RDP 5 order 19 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_bottom;  /* RDP 5 order 19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_bottom = 0;  /* clear Order 19/13H background bottom */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_bottom;  /* RDP 5 order 19 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_left;  /* RDP 5 order 19 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_left;  /* RDP 5 order 19 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_left = 0;  /* clear Order 19/13H opaque left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_top;  /* RDP 5 order 19 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_top;  /* RDP 5 order 19 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_top = 0;  /* clear Order 19/13H opaque top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_right;  /* RDP 5 order 19 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_right;  /* RDP 5 order 19 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right = 0;  /* clear Order 19/13H opaque right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
//   case ied_fsfp_r5_o13_deltas:           /* RDP 5 order 19 deltas   */
     case ied_fsfp_r5_o13_fdrawing:         /* RDP 5 order 19/13H fDrawing */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o13.usc_fdrawing
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_col_backgr;  /* RDP 5 order 19 background colour */
         D_ADSL_RCO1->dsc_ord_co_o13.umc_backcolor = 0;  /* clear Order 19/13H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_col_foregr;  /* RDP 5 order 19 foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o13.umc_forecolor = 0;  /* clear Order 19/13H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_left;  /* RDP 5 order 19 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_left = 0;  /* clear Order 19/13H background left */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_left;  /* RDP 5 order 19 absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_top;  /* RDP 5 order 19 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_top = 0;  /* clear Order 19/13H background top */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_top;  /* RDP 5 order 19 absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_right;  /* RDP 5 order 19 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_right = 0;  /* clear Order 19/13H background right */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_right;  /* RDP 5 order 19 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_bottom;  /* RDP 5 order 19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_bottom = 0;  /* clear Order 19/13H background bottom */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_bottom;  /* RDP 5 order 19 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_left;  /* RDP 5 order 19 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_left;  /* RDP 5 order 19 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_left = 0;  /* clear Order 19/13H opaque left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_top;  /* RDP 5 order 19 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_top;  /* RDP 5 order 19 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_top = 0;  /* clear Order 19/13H opaque top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_right;  /* RDP 5 order 19 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_right;  /* RDP 5 order 19 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right = 0;  /* clear Order 19/13H opaque right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_col_backgr:       /* RDP 5 order 19 background colour */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o13.umc_backcolor
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_col_foregr;  /* RDP 5 order 19 foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o13.umc_forecolor = 0;  /* clear Order 19/13H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_left;  /* RDP 5 order 19 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_left = 0;  /* clear Order 19/13H background left */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_left;  /* RDP 5 order 19 absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_top;  /* RDP 5 order 19 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_top = 0;  /* clear Order 19/13H background top */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_top;  /* RDP 5 order 19 absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_right;  /* RDP 5 order 19 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_right = 0;  /* clear Order 19/13H background right */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_right;  /* RDP 5 order 19 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_bottom;  /* RDP 5 order 19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_bottom = 0;  /* clear Order 19/13H background bottom */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_bottom;  /* RDP 5 order 19 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_left;  /* RDP 5 order 19 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_left;  /* RDP 5 order 19 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_left = 0;  /* clear Order 19/13H opaque left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_top;  /* RDP 5 order 19 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_top;  /* RDP 5 order 19 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_top = 0;  /* clear Order 19/13H opaque top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_right;  /* RDP 5 order 19 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_right;  /* RDP 5 order 19 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right = 0;  /* clear Order 19/13H opaque right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_col_foregr:       /* RDP 5 order 19 foreground colour */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o13.umc_forecolor
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_left;  /* RDP 5 order 19 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_left = 0;  /* clear Order 19/13H background left */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_left;  /* RDP 5 order 19 absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_top;  /* RDP 5 order 19 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_top = 0;  /* clear Order 19/13H background top */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_top;  /* RDP 5 order 19 absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_right;  /* RDP 5 order 19 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_right = 0;  /* clear Order 19/13H background right */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_right;  /* RDP 5 order 19 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_bottom;  /* RDP 5 order 19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_bottom = 0;  /* clear Order 19/13H background bottom */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_bottom;  /* RDP 5 order 19 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_left;  /* RDP 5 order 19 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_left;  /* RDP 5 order 19 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_left = 0;  /* clear Order 19/13H opaque left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_top;  /* RDP 5 order 19 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_top;  /* RDP 5 order 19 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_top = 0;  /* clear Order 19/13H opaque top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_right;  /* RDP 5 order 19 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_right;  /* RDP 5 order 19 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right = 0;  /* clear Order 19/13H opaque right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_abs_left:         /* RDP 5 order 19/13H absolute left */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_left >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_top;  /* RDP 5 order 19 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_top = 0;  /* clear Order 19/13H background top */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_top;  /* RDP 5 order 19 absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_right;  /* RDP 5 order 19 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_right = 0;  /* clear Order 19/13H background right */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_right;  /* RDP 5 order 19 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_bottom;  /* RDP 5 order 19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_bottom = 0;  /* clear Order 19/13H background bottom */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_bottom;  /* RDP 5 order 19 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_left;  /* RDP 5 order 19 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_left;  /* RDP 5 order 19 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_left = 0;  /* clear Order 19/13H opaque left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_top;  /* RDP 5 order 19 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_top;  /* RDP 5 order 19 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_top = 0;  /* clear Order 19/13H opaque top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_right;  /* RDP 5 order 19 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_right;  /* RDP 5 order 19 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right = 0;  /* clear Order 19/13H opaque right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_abs_top:          /* RDP 5 order 19/13H absolute top */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_right;  /* RDP 5 order 19 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_right = 0;  /* clear Order 19/13H background right */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_right;  /* RDP 5 order 19 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_bottom;  /* RDP 5 order 19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_bottom = 0;  /* clear Order 19/13H background bottom */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_bottom;  /* RDP 5 order 19 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_left;  /* RDP 5 order 19 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_left;  /* RDP 5 order 19 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_left = 0;  /* clear Order 19/13H opaque left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_top;  /* RDP 5 order 19 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_top;  /* RDP 5 order 19 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_top = 0;  /* clear Order 19/13H opaque top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_right;  /* RDP 5 order 19 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_right;  /* RDP 5 order 19 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right = 0;  /* clear Order 19/13H opaque right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_abs_right:        /* RDP 5 order 19/13H absolute right */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_right
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_right)
             > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_right)
             <= *((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_left)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_bottom;  /* RDP 5 order 19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_bottom = 0;  /* clear Order 19/13H background bottom */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_bottom;  /* RDP 5 order 19 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_left;  /* RDP 5 order 19 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_left;  /* RDP 5 order 19 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_left = 0;  /* clear Order 19/13H opaque left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_top;  /* RDP 5 order 19 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_top;  /* RDP 5 order 19 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_top = 0;  /* clear Order 19/13H opaque top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_right;  /* RDP 5 order 19 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_right;  /* RDP 5 order 19 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right = 0;  /* clear Order 19/13H opaque right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_abs_bottom:       /* RDP 5 order 19/13H absolute bottom */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_bottom
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_bottom)
             > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_bottom)
             <= *((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_top)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_left;  /* RDP 5 order 19 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_left;  /* RDP 5 order 19 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_left = 0;  /* clear Order 19/13H opaque left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_top;  /* RDP 5 order 19 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_top;  /* RDP 5 order 19 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_top = 0;  /* clear Order 19/13H opaque top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_right;  /* RDP 5 order 19 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_right;  /* RDP 5 order 19 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right = 0;  /* clear Order 19/13H opaque right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_delta_left:       /* RDP 5 order 19/13H delta left */
       D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_left
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_top;  /* RDP 5 order 19 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_top = 0;  /* clear Order 19/13H background top */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_top;  /* RDP 5 order 19 absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_right;  /* RDP 5 order 19 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_right = 0;  /* clear Order 19/13H background right */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_right;  /* RDP 5 order 19 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_bottom;  /* RDP 5 order 19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_bottom = 0;  /* clear Order 19/13H background bottom */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_bottom;  /* RDP 5 order 19 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_left;  /* RDP 5 order 19 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_left;  /* RDP 5 order 19 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_left = 0;  /* clear Order 19/13H opaque left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_top;  /* RDP 5 order 19 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_top;  /* RDP 5 order 19 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_top = 0;  /* clear Order 19/13H opaque top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_right;  /* RDP 5 order 19 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_right;  /* RDP 5 order 19 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right = 0;  /* clear Order 19/13H opaque right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_delta_top:        /* RDP 5 order 19/13H delta top */
       D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_right;  /* RDP 5 order 19 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_right = 0;  /* clear Order 19/13H background right */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_right;  /* RDP 5 order 19 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_bottom;  /* RDP 5 order 19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_bottom = 0;  /* clear Order 19/13H background bottom */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_bottom;  /* RDP 5 order 19 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_left;  /* RDP 5 order 19 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_left;  /* RDP 5 order 19 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_left = 0;  /* clear Order 19/13H opaque left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_top;  /* RDP 5 order 19 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_top;  /* RDP 5 order 19 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_top = 0;  /* clear Order 19/13H opaque top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_right;  /* RDP 5 order 19 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_right;  /* RDP 5 order 19 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right = 0;  /* clear Order 19/13H opaque right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_delta_right:      /* RDP 5 order 19/13H delta right */
       D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_right
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_right)
             > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_right
             <= D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_left) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_bottom;  /* RDP 5 order 19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_bottom = 0;  /* clear Order 19/13H background bottom */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_bottom;  /* RDP 5 order 19 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_left;  /* RDP 5 order 19 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_left;  /* RDP 5 order 19 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_left = 0;  /* clear Order 19/13H opaque left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_top;  /* RDP 5 order 19 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_top;  /* RDP 5 order 19 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_top = 0;  /* clear Order 19/13H opaque top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_right;  /* RDP 5 order 19 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_right;  /* RDP 5 order 19 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right = 0;  /* clear Order 19/13H opaque right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_delta_bottom:     /* RDP 5 order 19/13H delta bottom */
       D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_bottom
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_bottom)
             > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_bottom)
             <= *((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_top)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_left;  /* RDP 5 order 19 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_left;  /* RDP 5 order 19 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_left = 0;  /* clear Order 19/13H opaque left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_top;  /* RDP 5 order 19 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_top;  /* RDP 5 order 19 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_top = 0;  /* clear Order 19/13H opaque top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_right;  /* RDP 5 order 19 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_right;  /* RDP 5 order 19 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right = 0;  /* clear Order 19/13H opaque right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_r2_abs_left:      /* RDP 5 order 19/13H rect2 absolute left */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_top;  /* RDP 5 order 19 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_top;  /* RDP 5 order 19 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_top = 0;  /* clear Order 19/13H opaque top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_right;  /* RDP 5 order 19 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_right;  /* RDP 5 order 19 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right = 0;  /* clear Order 19/13H opaque right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_r2_abs_top:       /* RDP 5 order 19/13H rect2 absolute top */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_right;  /* RDP 5 order 19 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_right;  /* RDP 5 order 19 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right = 0;  /* clear Order 19/13H opaque right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_r2_abs_right:     /* RDP 5 order 19/13H rect2 absolute right */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_r2_abs_bottom:    /* RDP 5 order 19/13H rect2 absolute bottom */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_r2_delta_left:    /* RDP 5 order 19 rect2 delta left */
       D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_top;  /* RDP 5 order 19 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_top;  /* RDP 5 order 19 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_top = 0;  /* clear Order 19/13H opaque top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_right;  /* RDP 5 order 19 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_right;  /* RDP 5 order 19 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right = 0;  /* clear Order 19/13H opaque right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_r2_delta_top:     /* RDP 5 order 19 rect2 delta top */
       D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_right;  /* RDP 5 order 19 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_right;  /* RDP 5 order 19 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right = 0;  /* clear Order 19/13H opaque right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_r2_delta_right:   /* RDP 5 order 19 rect2 delta right */
       D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_r2_delta_bottom:  /* RDP 5 order 19 rect2 delta bottom */
       D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_abs_start_x:      /* RDP 5 order 19/13H start X  */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_abs_start_y:      /* RDP 5 order 19/13H start Y  */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_delta_start_x:    /* RDP 5 order 19/13H delta start X */
       D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_delta_start_y:    /* RDP 5 order 19/13H delta start Y */
       D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o13_len_glyph:        /* RDP 5 order 19/13H length glyph */
       D_ADSL_RCO1->dsc_ord_co_o13.ucc_len_glyph  /* length glyph data */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o13.ucc_len_glyph == 0) {  /* length glyph data */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCO1->dsc_ord_co_o13.achc_glyph  /* glyph data           */
         = (char *) m_aux_stor_realloc( &ADSL_RDPA_F->dsc_stor_sdh_1,
                                        D_ADSL_RCO1->dsc_ord_co_o13.achc_glyph,
                                        D_ADSL_RCO1->dsc_ord_co_o13.ucc_len_glyph );
       D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o13.achc_glyph;
       D_ADSL_RCL1->imc_prot_2
         = D_ADSL_RCL1->imc_pos_inp_frame - D_ADSL_RCO1->dsc_ord_co_o13.ucc_len_glyph;
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data         */
       D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_pdu_apply_order;  /* RDP 5 PDU apply order */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_o14_abs_start_x:      /* RDP 5 order 20/14H start X */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o14.isc_start_x
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O14_FIELDS()                       */
       /* PolygonSC (POLYGON_SC_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_delta_start_y;  /* RDP 5 order 20/14H delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_abs_start_y;  /* RDP 5 order 20/14H start Y */
         D_ADSL_RCO1->dsc_ord_co_o14.isc_start_y = 0;  /* clear Order 20/14H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_brop2;  /* RDP 5 order 20/14H bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_fillmode;  /* RDP 5 order 20/14H FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_brushcolor;  /* RDP 5 order 20/14H BrushColor */
         D_ADSL_RCO1->dsc_ord_co_o14.umc_brushcolor = 0;  /* clear Order 20/14H BrushColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o14_abs_start_y:      /* RDP 5 order 20/14H start Y */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o14.isc_start_y
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O14_FIELDS()                       */
       /* PolygonSC (POLYGON_SC_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_brop2;  /* RDP 5 order 20/14H bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_fillmode;  /* RDP 5 order 20/14H FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_brushcolor;  /* RDP 5 order 20/14H BrushColor */
         D_ADSL_RCO1->dsc_ord_co_o14.umc_brushcolor = 0;  /* clear Order 20/14H BrushColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o14_delta_start_x:    /* RDP 5 order 20/14H delta start X */
       D_ADSL_RCO1->dsc_ord_co_o14.isc_start_x
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O14_FIELDS()                       */
       /* PolygonSC (POLYGON_SC_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_delta_start_y;  /* RDP 5 order 20/14H delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_abs_start_y;  /* RDP 5 order 20/14H start Y */
         D_ADSL_RCO1->dsc_ord_co_o14.isc_start_y = 0;  /* clear Order 20/14H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_brop2;  /* RDP 5 order 20/14H bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_fillmode;  /* RDP 5 order 20/14H FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_brushcolor;  /* RDP 5 order 20/14H BrushColor */
         D_ADSL_RCO1->dsc_ord_co_o14.umc_brushcolor = 0;  /* clear Order 20/14H BrushColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o14_delta_start_y:    /* RDP 5 order 20/14H delta start Y */
       D_ADSL_RCO1->dsc_ord_co_o14.isc_start_y
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O14_FIELDS()                       */
       /* PolygonSC (POLYGON_SC_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_brop2;  /* RDP 5 order 20/14H bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_fillmode;  /* RDP 5 order 20/14H FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_brushcolor;  /* RDP 5 order 20/14H BrushColor */
         D_ADSL_RCO1->dsc_ord_co_o14.umc_brushcolor = 0;  /* clear Order 20/14H BrushColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o14_brop2:            /* RDP 5 order 20/14H bRop2 */
       D_ADSL_RCO1->dsc_ord_co_o14.ucc_brop2
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O14_FIELDS()                       */
       /* PolygonSC (POLYGON_SC_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_fillmode;  /* RDP 5 order 20/14H FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_brushcolor;  /* RDP 5 order 20/14H BrushColor */
         D_ADSL_RCO1->dsc_ord_co_o14.umc_brushcolor = 0;  /* clear Order 20/14H BrushColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o14_fillmode:         /* RDP 5 order 20/14H FillMode */
       D_ADSL_RCO1->dsc_ord_co_o14.ucc_fillmode
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O14_FIELDS()                       */
       /* PolygonSC (POLYGON_SC_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_brushcolor;  /* RDP 5 order 20/14H BrushColor */
         D_ADSL_RCO1->dsc_ord_co_o14.umc_brushcolor = 0;  /* clear Order 20/14H BrushColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o14_brushcolor:       /* RDP 5 order 20/14H BrushColor */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o14.umc_brushcolor
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O14_FIELDS()                       */
       /* PolygonSC (POLYGON_SC_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o14_no_delta_entries:  /* nDeltaEntries - number of delta entries */
       D_ADSL_RCO1->dsc_ord_co_o14.ucc_no_delta_entries
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o14.ucc_no_delta_entries == 0) {  /* number of points along the polygon path */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O14_FIELDS()                       */
       /* PolygonSC (POLYGON_SC_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o14_len_delta:        /* length CodedDeltaList   */
       D_ADSL_RCO1->dsc_ord_co_o14.ucc_len_delta_entries
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o14.ucc_len_delta_entries == 0) {  /* length of points along the polygon path */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCO1->dsc_ord_co_o14.achc_coded_delta_list  /* contains the points along the polygon path */
         = (char *) m_aux_stor_realloc( &ADSL_RDPA_F->dsc_stor_sdh_1,
                                        D_ADSL_RCO1->dsc_ord_co_o14.achc_coded_delta_list,
                                        D_ADSL_RCO1->dsc_ord_co_o14.ucc_len_delta_entries );
       D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o14.achc_coded_delta_list;
       D_ADSL_RCL1->imc_prot_2
         = D_ADSL_RCL1->imc_pos_inp_frame - D_ADSL_RCO1->dsc_ord_co_o14.ucc_len_delta_entries;
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data         */
       D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_pdu_apply_order;  /* RDP 5 PDU apply order */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_o15_abs_start_x:      /* RDP 5 order 21/15H start X */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o15.isc_start_x
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O15_FIELDS()                       */
       /* PolygonCB (POLYGON_CB_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_delta_start_y;  /* RDP 5 order 21/15H delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_abs_start_y;  /* RDP 5 order 21/15H start Y */
         D_ADSL_RCO1->dsc_ord_co_o15.isc_start_y = 0;  /* clear Order 21/15H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brop2;  /* RDP 5 order 21/15H bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_fillmode;  /* RDP 5 order 21/15H FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_col_backgr;  /* RDP 5 order 21/15H background colour */
         D_ADSL_RCO1->dsc_ord_co_o15.umc_backcolor = 0;  /* clear Order 21/15H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_col_foregr;  /* RDP 5 order 21/15H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o15.umc_forecolor = 0;  /* clear Order 21/15H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_x;  /* RDP 5 order 21/15H brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_y;  /* RDP 5 order 21/15H brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_style;  /* RDP 5 order 21/15H brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_hatch;  /* RDP 5 order 21/15H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 21/15H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o15_brush_data;  /* RDP 5 order 21/15H brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o15_abs_start_y:      /* RDP 5 order 21/15H start Y */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o15.isc_start_y
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O15_FIELDS()                       */
       /* PolygonCB (POLYGON_CB_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brop2;  /* RDP 5 order 21/15H bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_fillmode;  /* RDP 5 order 21/15H FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_col_backgr;  /* RDP 5 order 21/15H background colour */
         D_ADSL_RCO1->dsc_ord_co_o15.umc_backcolor = 0;  /* clear Order 21/15H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_col_foregr;  /* RDP 5 order 21/15H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o15.umc_forecolor = 0;  /* clear Order 21/15H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_x;  /* RDP 5 order 21/15H brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_y;  /* RDP 5 order 21/15H brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_style;  /* RDP 5 order 21/15H brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_hatch;  /* RDP 5 order 21/15H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 21/15H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o15_brush_data;  /* RDP 5 order 21/15H brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o15_delta_start_x:    /* RDP 5 order 21/15H delta start X */
       D_ADSL_RCO1->dsc_ord_co_o15.isc_start_x
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O15_FIELDS()                       */
       /* PolygonCB (POLYGON_CB_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_delta_start_y;  /* RDP 5 order 21/15H delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_abs_start_y;  /* RDP 5 order 21/15H start Y */
         D_ADSL_RCO1->dsc_ord_co_o15.isc_start_y = 0;  /* clear Order 21/15H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brop2;  /* RDP 5 order 21/15H bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_fillmode;  /* RDP 5 order 21/15H FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_col_backgr;  /* RDP 5 order 21/15H background colour */
         D_ADSL_RCO1->dsc_ord_co_o15.umc_backcolor = 0;  /* clear Order 21/15H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_col_foregr;  /* RDP 5 order 21/15H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o15.umc_forecolor = 0;  /* clear Order 21/15H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_x;  /* RDP 5 order 21/15H brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_y;  /* RDP 5 order 21/15H brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_style;  /* RDP 5 order 21/15H brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_hatch;  /* RDP 5 order 21/15H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 21/15H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o15_brush_data;  /* RDP 5 order 21/15H brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o15_delta_start_y:    /* RDP 5 order 21/15H delta start Y */
       D_ADSL_RCO1->dsc_ord_co_o15.isc_start_y
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O15_FIELDS()                       */
       /* PolygonCB (POLYGON_CB_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brop2;  /* RDP 5 order 21/15H bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_fillmode;  /* RDP 5 order 21/15H FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_col_backgr;  /* RDP 5 order 21/15H background colour */
         D_ADSL_RCO1->dsc_ord_co_o15.umc_backcolor = 0;  /* clear Order 21/15H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_col_foregr;  /* RDP 5 order 21/15H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o15.umc_forecolor = 0;  /* clear Order 21/15H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_x;  /* RDP 5 order 21/15H brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_y;  /* RDP 5 order 21/15H brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_style;  /* RDP 5 order 21/15H brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_hatch;  /* RDP 5 order 21/15H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 21/15H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o15_brush_data;  /* RDP 5 order 21/15H brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o15_brop2:            /* RDP 5 order 21/15H bRop2 */
       D_ADSL_RCO1->dsc_ord_co_o15.ucc_brop2
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O15_FIELDS()                       */
       /* PolygonCB (POLYGON_CB_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_fillmode;  /* RDP 5 order 21/15H FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_col_backgr;  /* RDP 5 order 21/15H background colour */
         D_ADSL_RCO1->dsc_ord_co_o15.umc_backcolor = 0;  /* clear Order 21/15H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_col_foregr;  /* RDP 5 order 21/15H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o15.umc_forecolor = 0;  /* clear Order 21/15H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_x;  /* RDP 5 order 21/15H brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_y;  /* RDP 5 order 21/15H brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_style;  /* RDP 5 order 21/15H brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_hatch;  /* RDP 5 order 21/15H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 21/15H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o15_brush_data;  /* RDP 5 order 21/15H brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o15_fillmode:         /* RDP 5 order 21/15H FillMode */
       D_ADSL_RCO1->dsc_ord_co_o15.ucc_fillmode
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O15_FIELDS()                       */
       /* PolygonCB (POLYGON_CB_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_col_backgr;  /* RDP 5 order 21/15H background colour */
         D_ADSL_RCO1->dsc_ord_co_o15.umc_backcolor = 0;  /* clear Order 21/15H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_col_foregr;  /* RDP 5 order 21/15H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o15.umc_forecolor = 0;  /* clear Order 21/15H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_x;  /* RDP 5 order 21/15H brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_y;  /* RDP 5 order 21/15H brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_style;  /* RDP 5 order 21/15H brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_hatch;  /* RDP 5 order 21/15H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 21/15H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o15_brush_data;  /* RDP 5 order 21/15H brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o15_col_backgr:       /* RDP 5 order 21/15H background colour */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o15.umc_backcolor
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O15_FIELDS()                       */
       /* PolygonCB (POLYGON_CB_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_col_foregr;  /* RDP 5 order 21/15H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o15.umc_forecolor = 0;  /* clear Order 21/15H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_x;  /* RDP 5 order 21/15H brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_y;  /* RDP 5 order 21/15H brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_style;  /* RDP 5 order 21/15H brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_hatch;  /* RDP 5 order 21/15H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 21/15H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o15_brush_data;  /* RDP 5 order 21/15H brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o15_col_foregr:       /* RDP 5 order 21/15H foreground colour */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o15.umc_forecolor
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O15_FIELDS()                       */
       /* PolygonCB (POLYGON_CB_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_x;  /* RDP 5 order 21/15H brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_y;  /* RDP 5 order 21/15H brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_style;  /* RDP 5 order 21/15H brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_hatch;  /* RDP 5 order 21/15H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 21/15H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o15_brush_data;  /* RDP 5 order 21/15H brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o15_brush_x:          /* RDP 5 order 21/15H brush X */
       D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.scc_brushorgx  /* top leftmost pixel of brushpattern, x-coordinate */
         = (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O15_FIELDS()                       */
       /* PolygonCB (POLYGON_CB_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_y;  /* RDP 5 order 21/15H brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_style;  /* RDP 5 order 21/15H brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_hatch;  /* RDP 5 order 21/15H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 21/15H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o15_brush_data;  /* RDP 5 order 21/15H brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o15_brush_y:          /* RDP 5 order 21/15H brush Y */
       D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.scc_brushorgy  /* top leftmost pixel of brushpattern, y-coordinate */
         = (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O15_FIELDS()                       */
       /* PolygonCB (POLYGON_CB_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_style;  /* RDP 5 order 21/15H brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_hatch;  /* RDP 5 order 21/15H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 21/15H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o15_brush_data;  /* RDP 5 order 21/15H brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o15_brush_style:      /* RDP 5 order 21/15H brush style */
       D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.ucc_brushstyle  /* style of brush */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O15_FIELDS()                       */
       /* PolygonCB (POLYGON_CB_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_hatch;  /* RDP 5 order 21/15H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 21/15H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o15_brush_data;  /* RDP 5 order 21/15H brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o15_brush_hatch:      /* RDP 5 order 21/15H brush hatch */
       D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.ucc_brushhatch  /* hatched_brush info or last row of brush-pattern */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O15_FIELDS()                       */
       /* PolygonCB (POLYGON_CB_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 21/15H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o15_brush_data;  /* RDP 5 order 21/15H brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o15_no_delta_entries:  /* nDeltaEntries - number of delta entries */
       D_ADSL_RCO1->dsc_ord_co_o15.ucc_no_delta_entries
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o15.ucc_no_delta_entries == 0) {  /* number of points along the polygon path */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O15_FIELDS()                       */
       /* PolygonCB (POLYGON_CB_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o15_len_delta:        /* length CodedDeltaList   */
       D_ADSL_RCO1->dsc_ord_co_o15.ucc_len_delta_entries
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o15.ucc_len_delta_entries == 0) {  /* length of points along the polygon path */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCO1->dsc_ord_co_o15.achc_coded_delta_list  /* contains the points along the polygon path */
         = (char *) m_aux_stor_realloc( &ADSL_RDPA_F->dsc_stor_sdh_1,
                                        D_ADSL_RCO1->dsc_ord_co_o15.achc_coded_delta_list,
                                        D_ADSL_RCO1->dsc_ord_co_o15.ucc_len_delta_entries );
       D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.achc_coded_delta_list;
       D_ADSL_RCL1->imc_prot_2
         = D_ADSL_RCL1->imc_pos_inp_frame - D_ADSL_RCO1->dsc_ord_co_o15.ucc_len_delta_entries;
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data         */
       D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_pdu_apply_order;  /* RDP 5 PDU apply order */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_o16_abs_start_x:      /* RDP 5 order 22/0X16 absolute start X */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o16.isc_start_x
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O16_FIELDS()                       */
       /* TS_ENC_POLYLINE_ORDER                                        */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_delta_start_y;  /* RDP 5 order 22/0X16 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_abs_start_y;  /* RDP 5 order 22/0X16 start Y */
         D_ADSL_RCO1->dsc_ord_co_o16.isc_start_y = 0;  /* clear Order 22/0X16 start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_brop2;  /* RDP 5 order 22/0X16 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_brushcacheentry;  /* RDP 5 order 22/0X16 BrushCacheEntry */
         D_ADSL_RCO1->dsc_ord_co_o16.usc_brush_cache_entry = 0;  /* clear Order 22/0X16 brush cache entry */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_pencolor;  /* RDP 5 order 22/0X16 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o16.umc_pencolor = 0;  /* clear Order 22/0X16 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_num_delta_entries;  /* RDP 5 order 22/0X16 number of points along the polyline path */
         goto pfrse20;                      /* needs more data         */
       }
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_len_delta_entries;  /* RDP 5 order 22/0X16 length of points along the polyline path */
       goto pfrse20;                      /* needs more data         */
     case ied_fsfp_r5_o16_abs_start_y:      /* RDP 5 order 22/0X16 absolute start Y */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o16.isc_start_y
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O16_FIELDS()                       */
       /* TS_ENC_POLYLINE_ORDER                                        */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_brop2;  /* RDP 5 order 22/0X16 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_brushcacheentry;  /* RDP 5 order 22/0X16 BrushCacheEntry */
         D_ADSL_RCO1->dsc_ord_co_o16.usc_brush_cache_entry = 0;  /* clear Order 22/0X16 brush cache entry */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_pencolor;  /* RDP 5 order 22/0X16 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o16.umc_pencolor = 0;  /* clear Order 22/0X16 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_num_delta_entries;  /* RDP 5 order 22/0X16 number of points along the polyline path */
         goto pfrse20;                      /* needs more data         */
       }
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_len_delta_entries;  /* RDP 5 order 22/0X16 length of points along the polyline path */
       goto pfrse20;                      /* needs more data         */
     case ied_fsfp_r5_o16_delta_start_x:    /* RDP 5 order 22/0X16 delta start X */
       D_ADSL_RCO1->dsc_ord_co_o16.isc_start_x
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O16_FIELDS()                       */
       /* TS_ENC_POLYLINE_ORDER                                        */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_delta_start_y;  /* RDP 5 order 22/0X16 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_abs_start_y;  /* RDP 5 order 22/0X16 start Y */
         D_ADSL_RCO1->dsc_ord_co_o16.isc_start_y = 0;  /* clear Order 22/0X16 start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_brop2;  /* RDP 5 order 22/0X16 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_brushcacheentry;  /* RDP 5 order 22/0X16 BrushCacheEntry */
         D_ADSL_RCO1->dsc_ord_co_o16.usc_brush_cache_entry = 0;  /* clear Order 22/0X16 brush cache entry */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_pencolor;  /* RDP 5 order 22/0X16 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o16.umc_pencolor = 0;  /* clear Order 22/0X16 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_num_delta_entries;  /* RDP 5 order 22/0X16 number of points along the polyline path */
         goto pfrse20;                      /* needs more data         */
       }
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_len_delta_entries;  /* RDP 5 order 22/0X16 length of points along the polyline path */
       goto pfrse20;                      /* needs more data         */
     case ied_fsfp_r5_o16_delta_start_y:    /* RDP 5 order 22/0X16 delta start Y */
       D_ADSL_RCO1->dsc_ord_co_o16.isc_start_y
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O16_FIELDS()                       */
       /* TS_ENC_POLYLINE_ORDER                                        */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_brop2;  /* RDP 5 order 22/0X16 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_brushcacheentry;  /* RDP 5 order 22/0X16 BrushCacheEntry */
         D_ADSL_RCO1->dsc_ord_co_o16.usc_brush_cache_entry = 0;  /* clear Order 22/0X16 brush cache entry */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_pencolor;  /* RDP 5 order 22/0X16 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o16.umc_pencolor = 0;  /* clear Order 22/0X16 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_num_delta_entries;  /* RDP 5 order 22/0X16 number of points along the polyline path */
         goto pfrse20;                      /* needs more data         */
       }
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_len_delta_entries;  /* RDP 5 order 22/0X16 length of points along the polyline path */
       goto pfrse20;                      /* needs more data         */
     case ied_fsfp_r5_o16_brop2:            /* RDP 5 order 22/0X16 bRop2 */
       D_ADSL_RCO1->dsc_ord_co_o16.ucc_brop2
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O16_FIELDS()                       */
       /* TS_ENC_POLYLINE_ORDER                                        */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_brushcacheentry;  /* RDP 5 order 22/0X16 BrushCacheEntry */
         D_ADSL_RCO1->dsc_ord_co_o16.usc_brush_cache_entry = 0;  /* clear Order 22/0X16 brush cache entry */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_pencolor;  /* RDP 5 order 22/0X16 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o16.umc_pencolor = 0;  /* clear Order 22/0X16 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_num_delta_entries;  /* RDP 5 order 22/0X16 number of points along the polyline path */
         goto pfrse20;                      /* needs more data         */
       }
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_len_delta_entries;  /* RDP 5 order 22/0X16 length of points along the polyline path */
       goto pfrse20;                      /* needs more data         */
     case ied_fsfp_r5_o16_brushcacheentry:  /* RDP 5 order 22/0X16 BrushCacheEntry */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o16.usc_brush_cache_entry
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O16_FIELDS()                       */
       /* TS_ENC_POLYLINE_ORDER                                        */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_pencolor;  /* RDP 5 order 22/0X16 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o16.umc_pencolor = 0;  /* clear Order 22/0X16 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_num_delta_entries;  /* RDP 5 order 22/0X16 number of points along the polyline path */
         goto pfrse20;                      /* needs more data         */
       }
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_len_delta_entries;  /* RDP 5 order 22/0X16 length of points along the polyline path */
       goto pfrse20;                      /* needs more data         */
     case ied_fsfp_r5_o16_pencolor:         /* RDP 5 order 22/0X16 PenColor */
       /* colour bit / little endian                                   */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o16.umc_pencolor
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O16_FIELDS()                       */
       /* TS_ENC_POLYLINE_ORDER                                        */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_num_delta_entries;  /* RDP 5 order 22/0X16 number of points along the polyline path */
         goto pfrse20;                      /* needs more data         */
       }
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_len_delta_entries;  /* RDP 5 order 22/0X16 length of points along the polyline path */
       goto pfrse20;                      /* needs more data         */
     case ied_fsfp_r5_o16_num_delta_entries:  /* RDP 5 order 22/0X16 number of points along the polyline path */
       D_ADSL_RCO1->dsc_ord_co_o16.ucc_no_delta_entries
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o16.ucc_no_delta_entries == 0) {  /* number points along the polyline path */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O16_FIELDS()                       */
       /* TS_ENC_POLYLINE_ORDER                                        */
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_len_delta_entries;  /* RDP 5 order 22/0X16 length of points along the polyline path */
       goto pfrse20;                      /* needs more data         */
     case ied_fsfp_r5_o16_len_delta_entries:  /* RDP 5 order 22/0X16 length of points along the polyline path */
       D_ADSL_RCO1->dsc_ord_co_o16.ucc_len_delta_entries
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o16.ucc_len_delta_entries == 0) {  /* length points along the polyline path */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCO1->dsc_ord_co_o16.achc_coded_delta_list  /* contains the points along the polyline path */
         = (char *) m_aux_stor_realloc( &ADSL_RDPA_F->dsc_stor_sdh_1,
                                        D_ADSL_RCO1->dsc_ord_co_o16.achc_coded_delta_list,
                                        D_ADSL_RCO1->dsc_ord_co_o16.ucc_len_delta_entries );
       D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o16.achc_coded_delta_list;
       D_ADSL_RCL1->imc_prot_2
         = D_ADSL_RCL1->imc_pos_inp_frame - D_ADSL_RCO1->dsc_ord_co_o16.ucc_len_delta_entries;
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data         */
       D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_pdu_apply_order;  /* RDP 5 PDU apply order */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_o18_cache_id:         /* RDP 5 order 24/18H cache Id */
       D_ADSL_RCO1->dsc_ord_co_o18.ucc_cache_id = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       if (D_ADSL_RCO1->dsc_ord_co_o18.ucc_cache_id >= 10) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_fdrawing;  /* RDP 5 order 24/18H fDrawing */
         D_ADSL_RCO1->dsc_ord_co_o18.usc_fdrawing = 0;  /* clear Order 24/18H fDrawing */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_col_backgr;  /* RDP 5 order 24 background colour */
         D_ADSL_RCO1->dsc_ord_co_o18.umc_backcolor = 0;  /* clear Order 24/18H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_col_foregr;  /* RDP 5 order 24/18H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o18.umc_forecolor = 0;  /* clear Order 24/18H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_left;  /* RDP 5 order 24 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_left = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_left;  /* RDP 5 order 24 absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_top;  /* RDP 5 order 24 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_top;  /* RDP 5 order 24 absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_right;  /* RDP 5 order 24 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_right;  /* RDP 5 order 24 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_bottom;  /* RDP 5 order 24 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_bottom;  /* RDP 5 order 24 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_left;  /* RDP 5 order 24 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_left;  /* RDP 5 order 24 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_top;  /* RDP 5 order 24 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_top;  /* RDP 5 order 24 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_right;  /* RDP 5 order 24 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_right;  /* RDP 5 order 24 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_fdrawing:         /* RDP 5 order 24/18H fDrawing */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o18.usc_fdrawing
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_col_backgr;  /* RDP 5 order 24 background colour */
         D_ADSL_RCO1->dsc_ord_co_o18.umc_backcolor = 0;  /* clear Order 24/18H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_col_foregr;  /* RDP 5 order 24/18H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o18.umc_forecolor = 0;  /* clear Order 24/18H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_left;  /* RDP 5 order 24 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_left = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_left;  /* RDP 5 order 24 absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_top;  /* RDP 5 order 24 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_top;  /* RDP 5 order 24 absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_right;  /* RDP 5 order 24 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_right;  /* RDP 5 order 24 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_bottom;  /* RDP 5 order 24 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_bottom;  /* RDP 5 order 24 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_left;  /* RDP 5 order 24 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_left;  /* RDP 5 order 24 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_top;  /* RDP 5 order 24 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_top;  /* RDP 5 order 24 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_right;  /* RDP 5 order 24 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_right;  /* RDP 5 order 24 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_col_backgr:       /* RDP 5 order 24/18H background colour */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o18.umc_backcolor
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_col_foregr;  /* RDP 5 order 24/18H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o18.umc_forecolor = 0;  /* clear Order 24/18H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_left;  /* RDP 5 order 24 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_left = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_left;  /* RDP 5 order 24 absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_top;  /* RDP 5 order 24 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_top;  /* RDP 5 order 24 absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_right;  /* RDP 5 order 24 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_right;  /* RDP 5 order 24 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_bottom;  /* RDP 5 order 24 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_bottom;  /* RDP 5 order 24 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_left;  /* RDP 5 order 24 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_left;  /* RDP 5 order 24 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_top;  /* RDP 5 order 24 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_top;  /* RDP 5 order 24 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_right;  /* RDP 5 order 24 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_right;  /* RDP 5 order 24 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_col_foregr:       /* RDP 5 order 24/18H foreground colour */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o18.umc_forecolor
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_left;  /* RDP 5 order 24 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_left = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_left;  /* RDP 5 order 24 absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_top;  /* RDP 5 order 24 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_top;  /* RDP 5 order 24 absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_right;  /* RDP 5 order 24 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_right;  /* RDP 5 order 24 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_bottom;  /* RDP 5 order 24 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_bottom;  /* RDP 5 order 24 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_left;  /* RDP 5 order 24 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_left;  /* RDP 5 order 24 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_top;  /* RDP 5 order 24 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_top;  /* RDP 5 order 24 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_right;  /* RDP 5 order 24 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_right;  /* RDP 5 order 24 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_abs_left:         /* RDP 5 order 24/18H absolute left */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_left >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_top;  /* RDP 5 order 24 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_top;  /* RDP 5 order 24 absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_right;  /* RDP 5 order 24 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_right;  /* RDP 5 order 24 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_bottom;  /* RDP 5 order 24 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_bottom;  /* RDP 5 order 24 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_left;  /* RDP 5 order 24 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_left;  /* RDP 5 order 24 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_top;  /* RDP 5 order 24 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_top;  /* RDP 5 order 24 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_right;  /* RDP 5 order 24 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_right;  /* RDP 5 order 24 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_abs_top:          /* RDP 5 order 24/18H absolute top */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_right;  /* RDP 5 order 24 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_right;  /* RDP 5 order 24 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_bottom;  /* RDP 5 order 24 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_bottom;  /* RDP 5 order 24 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_left;  /* RDP 5 order 24 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_left;  /* RDP 5 order 24 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_top;  /* RDP 5 order 24 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_top;  /* RDP 5 order 24 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_right;  /* RDP 5 order 24 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_right;  /* RDP 5 order 24 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_abs_right:        /* RDP 5 order 24/18H absolute right */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_right
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_right)
             > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_right)
             <= *((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_left)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_bottom;  /* RDP 5 order 24 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_bottom;  /* RDP 5 order 24 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_left;  /* RDP 5 order 24 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_left;  /* RDP 5 order 24 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_top;  /* RDP 5 order 24 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_top;  /* RDP 5 order 24 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_right;  /* RDP 5 order 24 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_right;  /* RDP 5 order 24 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_abs_bottom:       /* RDP 5 order 24/18H absolute bottom */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_bottom
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_bottom)
             > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_bottom)
             <= *((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_top)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_left;  /* RDP 5 order 24 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_left;  /* RDP 5 order 24 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_top;  /* RDP 5 order 24 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_top;  /* RDP 5 order 24 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_right;  /* RDP 5 order 24 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_right;  /* RDP 5 order 24 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_delta_left:       /* RDP 5 order 24/18H delta left */
       D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_left
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_top;  /* RDP 5 order 24 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_top;  /* RDP 5 order 24 absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_right;  /* RDP 5 order 24 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_right;  /* RDP 5 order 24 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_bottom;  /* RDP 5 order 24 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_bottom;  /* RDP 5 order 24 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_left;  /* RDP 5 order 24 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_left;  /* RDP 5 order 24 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_top;  /* RDP 5 order 24 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_top;  /* RDP 5 order 24 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_right;  /* RDP 5 order 24 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_right;  /* RDP 5 order 24 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_delta_top:        /* RDP 5 order 24/18H delta top */
       D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_right;  /* RDP 5 order 24 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_right;  /* RDP 5 order 24 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_bottom;  /* RDP 5 order 24 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_bottom;  /* RDP 5 order 24 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_left;  /* RDP 5 order 24 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_left;  /* RDP 5 order 24 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_top;  /* RDP 5 order 24 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_top;  /* RDP 5 order 24 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_right;  /* RDP 5 order 24 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_right;  /* RDP 5 order 24 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_delta_right:      /* RDP 5 order 24/18H delta right */
       D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_right
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_right)
             > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_right
             <= D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_left) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_bottom;  /* RDP 5 order 24 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_bottom;  /* RDP 5 order 24 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_left;  /* RDP 5 order 24 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_left;  /* RDP 5 order 24 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_top;  /* RDP 5 order 24 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_top;  /* RDP 5 order 24 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_right;  /* RDP 5 order 24 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_right;  /* RDP 5 order 24 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_delta_bottom:     /* RDP 5 order 24/18H delta bottom */
       D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_bottom
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_bottom)
             > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_bottom)
             <= *((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_top)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_left;  /* RDP 5 order 24 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_left;  /* RDP 5 order 24 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_top;  /* RDP 5 order 24 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_top;  /* RDP 5 order 24 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_right;  /* RDP 5 order 24 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_right;  /* RDP 5 order 24 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_r2_abs_left:      /* RDP 5 order 24/18H rect2 left */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_top;  /* RDP 5 order 24 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_top;  /* RDP 5 order 24 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_right;  /* RDP 5 order 24 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_right;  /* RDP 5 order 24 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_r2_abs_top:       /* RDP 5 order 24/18H rect2 top */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_right;  /* RDP 5 order 24 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_right;  /* RDP 5 order 24 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_r2_abs_right:     /* RDP 5 order 24/18H rect2 right */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_r2_abs_bottom:    /* RDP 5 order 24/18H rect2 bottom */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_r2_delta_left:    /* RDP 5 order 24/18H rect2 delta left */
       D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_left
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_top;  /* RDP 5 order 24 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_top;  /* RDP 5 order 24 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_right;  /* RDP 5 order 24 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_right;  /* RDP 5 order 24 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_r2_delta_top:     /* RDP 5 order 24/18H rect2 delta top */
       D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_right;  /* RDP 5 order 24 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_right;  /* RDP 5 order 24 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_r2_delta_right:   /* RDP 5 order 24/18H rect2 delta right */
       D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right)
             > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right
             <= D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_left) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_r2_delta_bottom:  /* RDP 5 order 24/18H rect2 delta bottom */
       D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom)
             > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (*((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom)
             <= *((unsigned short int *) &D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_abs_start_x:      /* RDP 5 order 24/18H start X */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_abs_start_y:      /* RDP 5 order 24/18H start Y */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_delta_start_x:    /* RDP 5 order 24/18H delta start X */
       D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_delta_start_y:    /* RDP 5 order 24/18H delta start Y */
       D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o18_len_glyph:        /* RDP 5 order 24/18H length glyph */
       D_ADSL_RCO1->dsc_ord_co_o18.ucc_len_glyph  /* length glyph data */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o18.ucc_len_glyph == 0) {  /* length glyph data */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCO1->dsc_ord_co_o18.achc_glyph  /* glyph data           */
         = (char *) m_aux_stor_realloc( &ADSL_RDPA_F->dsc_stor_sdh_1,
                                        D_ADSL_RCO1->dsc_ord_co_o18.achc_glyph,
                                        D_ADSL_RCO1->dsc_ord_co_o18.ucc_len_glyph );
       D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o18.achc_glyph;
       D_ADSL_RCL1->imc_prot_2
         = D_ADSL_RCL1->imc_pos_inp_frame - D_ADSL_RCO1->dsc_ord_co_o18.ucc_len_glyph;
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data         */
       D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_pdu_apply_order;  /* RDP 5 PDU apply order */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_o19_abs_left:         /* RDP 5 order 25/0X19 absolute left */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O19_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_top;  /* RDP 5 order 25/0X19 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_top;  /* RDP 5 order 25/0X19 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_right;  /* RDP 5 order 25/0X19 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_right;  /* RDP 5 order 25/0X19 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_bottom;  /* RDP 5 order 25/0X19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_bottom;  /* RDP 5 order 25/0X19 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_brop2;  /* RDP 5 order 25/0X19 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_fillmode;  /* RDP 5 order 25/0X19 FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_color;  /* RDP 5 order 25/0X19 foreground color */
         D_ADSL_RCO1->dsc_ord_co_o19.umc_color = 0;  /* clear Order 25/0X19 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o19_abs_top:          /* RDP 5 order 25/0X19 absolute top */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O19_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_right;  /* RDP 5 order 25/0X19 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_right;  /* RDP 5 order 25/0X19 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_bottom;  /* RDP 5 order 25/0X19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_bottom;  /* RDP 5 order 25/0X19 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_brop2;  /* RDP 5 order 25/0X19 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_fillmode;  /* RDP 5 order 25/0X19 FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_color;  /* RDP 5 order 25/0X19 foreground color */
         D_ADSL_RCO1->dsc_ord_co_o19.umc_color = 0;  /* clear Order 25/0X19 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o19_abs_right:        /* RDP 5 order 25/0X19 absolute right */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_right
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_right)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_left)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O19_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_bottom;  /* RDP 5 order 25/0X19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_bottom;  /* RDP 5 order 25/0X19 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_brop2;  /* RDP 5 order 25/0X19 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_fillmode;  /* RDP 5 order 25/0X19 FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_color;  /* RDP 5 order 25/0X19 foreground color */
         D_ADSL_RCO1->dsc_ord_co_o19.umc_color = 0;  /* clear Order 25/0X19 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o19_abs_bottom:       /* RDP 5 order 25/0X19 absolute bottom */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_bottom
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_bottom)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_top)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O19_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_brop2;  /* RDP 5 order 25/0X19 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_fillmode;  /* RDP 5 order 25/0X19 FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_color;  /* RDP 5 order 25/0X19 foreground color */
         D_ADSL_RCO1->dsc_ord_co_o19.umc_color = 0;  /* clear Order 25/0X19 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o19_delta_left:       /* RDP 5 order 25/0X19 delta left */
       D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O19_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_top;  /* RDP 5 order 25/0X19 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_top;  /* RDP 5 order 25/0X19 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_right;  /* RDP 5 order 25/0X19 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_right;  /* RDP 5 order 25/0X19 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_bottom;  /* RDP 5 order 25/0X19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_bottom;  /* RDP 5 order 25/0X19 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_brop2;  /* RDP 5 order 25/0X19 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_fillmode;  /* RDP 5 order 25/0X19 FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_color;  /* RDP 5 order 25/0X19 foreground color */
         D_ADSL_RCO1->dsc_ord_co_o19.umc_color = 0;  /* clear Order 25/0X19 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o19_delta_top:        /* RDP 5 order 25/0X19 delta top */
       D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O19_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_right;  /* RDP 5 order 25/0X19 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_right;  /* RDP 5 order 25/0X19 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_bottom;  /* RDP 5 order 25/0X19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_bottom;  /* RDP 5 order 25/0X19 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_brop2;  /* RDP 5 order 25/0X19 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_fillmode;  /* RDP 5 order 25/0X19 FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_color;  /* RDP 5 order 25/0X19 foreground color */
         D_ADSL_RCO1->dsc_ord_co_o19.umc_color = 0;  /* clear Order 25/0X19 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o19_delta_right:      /* RDP 5 order 25/0X19 delta right */
       D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_right
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_right
             > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_right)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_left)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O19_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_bottom;  /* RDP 5 order 25/0X19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_bottom;  /* RDP 5 order 25/0X19 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_brop2;  /* RDP 5 order 25/0X19 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_fillmode;  /* RDP 5 order 25/0X19 FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_color;  /* RDP 5 order 25/0X19 foreground color */
         D_ADSL_RCO1->dsc_ord_co_o19.umc_color = 0;  /* clear Order 25/0X19 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o19_delta_bottom:     /* RDP 5 order 25/0X19 delta bottom */
       D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_bottom
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_bottom
             > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_bottom)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_top)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O19_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_brop2;  /* RDP 5 order 25/0X19 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_fillmode;  /* RDP 5 order 25/0X19 FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_color;  /* RDP 5 order 25/0X19 foreground color */
         D_ADSL_RCO1->dsc_ord_co_o19.umc_color = 0;  /* clear Order 25/0X19 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o19_brop2:            /* RDP 5 order 25/0X19 bRop2 */
       D_ADSL_RCO1->dsc_ord_co_o19.ucc_brop2
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O19_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_fillmode;  /* RDP 5 order 25/0X19 FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_color;  /* RDP 5 order 25/0X19 foreground color */
         D_ADSL_RCO1->dsc_ord_co_o19.umc_color = 0;  /* clear Order 25/0X19 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o19_fillmode:         /* RDP 5 order 25/0X19 FillMode */
       D_ADSL_RCO1->dsc_ord_co_o19.ucc_fillmode
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O19_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_color;  /* RDP 5 order 25/0X19 foreground color */
         D_ADSL_RCO1->dsc_ord_co_o19.umc_color = 0;  /* clear Order 25/0X19 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o19_color:            /* RDP 5 order 25/0X19 foreground color */
       /* colour bit / little endian                                   */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o19.umc_color
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O19_FIELDS()                       */
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1a_abs_left:         /* RDP 5 order 26/0X1A absolute left */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O1A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_top;  /* RDP 5 order 26/0X1A delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_top;  /* RDP 5 order 26/0X1A absolute top */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_right;  /* RDP 5 order 26/0X1A delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_right;  /* RDP 5 order 26/0X1A absolute right */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_bottom;  /* RDP 5 order 26/0X1A delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_bottom;  /* RDP 5 order 26/0X1A absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brop2;  /* RDP 5 order 26/0X1A bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_fillmode;  /* RDP 5 order 26/0X1A FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_backgr;  /* RDP 5 order 26/0X1A background colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_backcolor = 0;  /* clear Order 26/0X1A background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_foregr;  /* RDP 5 order 26/0X1A foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_forecolor = 0;  /* clear Order 26/0X1A foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_y;  /* RDP 5 order 26/0X1A brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_style;  /* RDP 5 order 26/0X1A brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_hatch;  /* RDP 5 order 26/0X1A brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 26/0X1A brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1a_brush_data;  /* RDP 5 order 26/0X1A brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1a_abs_top:          /* RDP 5 order 26/0X1A absolute top */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O1A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_right;  /* RDP 5 order 26/0X1A delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_right;  /* RDP 5 order 26/0X1A absolute right */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_bottom;  /* RDP 5 order 26/0X1A delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_bottom;  /* RDP 5 order 26/0X1A absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brop2;  /* RDP 5 order 26/0X1A bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_fillmode;  /* RDP 5 order 26/0X1A FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_backgr;  /* RDP 5 order 26/0X1A background colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_backcolor = 0;  /* clear Order 26/0X1A background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_foregr;  /* RDP 5 order 26/0X1A foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_forecolor = 0;  /* clear Order 26/0X1A foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_y;  /* RDP 5 order 26/0X1A brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_style;  /* RDP 5 order 26/0X1A brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_hatch;  /* RDP 5 order 26/0X1A brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 26/0X1A brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1a_brush_data;  /* RDP 5 order 26/0X1A brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1a_abs_right:        /* RDP 5 order 26/0X1A absolute right */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_right
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_right)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_left)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O1A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_bottom;  /* RDP 5 order 26/0X1A delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_bottom;  /* RDP 5 order 26/0X1A absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brop2;  /* RDP 5 order 26/0X1A bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_fillmode;  /* RDP 5 order 26/0X1A FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_backgr;  /* RDP 5 order 26/0X1A background colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_backcolor = 0;  /* clear Order 26/0X1A background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_foregr;  /* RDP 5 order 26/0X1A foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_forecolor = 0;  /* clear Order 26/0X1A foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_y;  /* RDP 5 order 26/0X1A brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_style;  /* RDP 5 order 26/0X1A brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_hatch;  /* RDP 5 order 26/0X1A brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 26/0X1A brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1a_brush_data;  /* RDP 5 order 26/0X1A brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1a_abs_bottom:       /* RDP 5 order 26/0X1A absolute bottom */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_bottom
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_bottom)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_top)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O1A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brop2;  /* RDP 5 order 26/0X1A bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_fillmode;  /* RDP 5 order 26/0X1A FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_backgr;  /* RDP 5 order 26/0X1A background colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_backcolor = 0;  /* clear Order 26/0X1A background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_foregr;  /* RDP 5 order 26/0X1A foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_forecolor = 0;  /* clear Order 26/0X1A foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_y;  /* RDP 5 order 26/0X1A brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_style;  /* RDP 5 order 26/0X1A brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_hatch;  /* RDP 5 order 26/0X1A brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 26/0X1A brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1a_brush_data;  /* RDP 5 order 26/0X1A brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1a_delta_left:       /* RDP 5 order 26/0X1A delta left */
       D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O1A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_top;  /* RDP 5 order 26/0X1A delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_top;  /* RDP 5 order 26/0X1A absolute top */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_right;  /* RDP 5 order 26/0X1A delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_right;  /* RDP 5 order 26/0X1A absolute right */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_bottom;  /* RDP 5 order 26/0X1A delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_bottom;  /* RDP 5 order 26/0X1A absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brop2;  /* RDP 5 order 26/0X1A bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_fillmode;  /* RDP 5 order 26/0X1A FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_backgr;  /* RDP 5 order 26/0X1A background colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_backcolor = 0;  /* clear Order 26/0X1A background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_foregr;  /* RDP 5 order 26/0X1A foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_forecolor = 0;  /* clear Order 26/0X1A foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_y;  /* RDP 5 order 26/0X1A brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_style;  /* RDP 5 order 26/0X1A brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_hatch;  /* RDP 5 order 26/0X1A brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 26/0X1A brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1a_brush_data;  /* RDP 5 order 26/0X1A brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1a_delta_top:        /* RDP 5 order 26/0X1A delta top */
       D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O1A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_right;  /* RDP 5 order 26/0X1A delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_right;  /* RDP 5 order 26/0X1A absolute right */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_bottom;  /* RDP 5 order 26/0X1A delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_bottom;  /* RDP 5 order 26/0X1A absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brop2;  /* RDP 5 order 26/0X1A bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_fillmode;  /* RDP 5 order 26/0X1A FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_backgr;  /* RDP 5 order 26/0X1A background colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_backcolor = 0;  /* clear Order 26/0X1A background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_foregr;  /* RDP 5 order 26/0X1A foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_forecolor = 0;  /* clear Order 26/0X1A foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_y;  /* RDP 5 order 26/0X1A brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_style;  /* RDP 5 order 26/0X1A brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_hatch;  /* RDP 5 order 26/0X1A brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 26/0X1A brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1a_brush_data;  /* RDP 5 order 26/0X1A brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1a_delta_right:      /* RDP 5 order 26/0X1A delta right */
       D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_right
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_right
             > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_right)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_left)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O1A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_bottom;  /* RDP 5 order 26/0X1A delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_bottom;  /* RDP 5 order 26/0X1A absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brop2;  /* RDP 5 order 26/0X1A bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_fillmode;  /* RDP 5 order 26/0X1A FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_backgr;  /* RDP 5 order 26/0X1A background colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_backcolor = 0;  /* clear Order 26/0X1A background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_foregr;  /* RDP 5 order 26/0X1A foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_forecolor = 0;  /* clear Order 26/0X1A foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_y;  /* RDP 5 order 26/0X1A brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_style;  /* RDP 5 order 26/0X1A brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_hatch;  /* RDP 5 order 26/0X1A brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 26/0X1A brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1a_brush_data;  /* RDP 5 order 26/0X1A brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1a_delta_bottom:     /* RDP 5 order 26/0X1A delta bottom */
       D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_bottom
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_bottom
             > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_bottom)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_top)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O1A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brop2;  /* RDP 5 order 26/0X1A bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_fillmode;  /* RDP 5 order 26/0X1A FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_backgr;  /* RDP 5 order 26/0X1A background colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_backcolor = 0;  /* clear Order 26/0X1A background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_foregr;  /* RDP 5 order 26/0X1A foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_forecolor = 0;  /* clear Order 26/0X1A foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_y;  /* RDP 5 order 26/0X1A brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_style;  /* RDP 5 order 26/0X1A brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_hatch;  /* RDP 5 order 26/0X1A brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 26/0X1A brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1a_brush_data;  /* RDP 5 order 26/0X1A brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1a_brop2:            /* RDP 5 order 26/0X1A bRop2 */
       D_ADSL_RCO1->dsc_ord_co_o1a.ucc_brop2
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O1A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_fillmode;  /* RDP 5 order 26/0X1A FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_backgr;  /* RDP 5 order 26/0X1A background colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_backcolor = 0;  /* clear Order 26/0X1A background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_foregr;  /* RDP 5 order 26/0X1A foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_forecolor = 0;  /* clear Order 26/0X1A foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_y;  /* RDP 5 order 26/0X1A brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_style;  /* RDP 5 order 26/0X1A brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_hatch;  /* RDP 5 order 26/0X1A brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 26/0X1A brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1a_brush_data;  /* RDP 5 order 26/0X1A brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1a_fillmode:         /* RDP 5 order 26/0X1A FillMode */
       D_ADSL_RCO1->dsc_ord_co_o1a.ucc_fillmode
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O1A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_backgr;  /* RDP 5 order 26/0X1A background colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_backcolor = 0;  /* clear Order 26/0X1A background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_foregr;  /* RDP 5 order 26/0X1A foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_forecolor = 0;  /* clear Order 26/0X1A foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_y;  /* RDP 5 order 26/0X1A brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_style;  /* RDP 5 order 26/0X1A brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_hatch;  /* RDP 5 order 26/0X1A brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 26/0X1A brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1a_brush_data;  /* RDP 5 order 26/0X1A brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1a_col_backgr:       /* RDP 5 order 26/0X1A background colour */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_backcolor
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O1A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_foregr;  /* RDP 5 order 26/0X1A foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_forecolor = 0;  /* clear Order 26/0X1A foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_y;  /* RDP 5 order 26/0X1A brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_style;  /* RDP 5 order 26/0X1A brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_hatch;  /* RDP 5 order 26/0X1A brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 26/0X1A brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1a_brush_data;  /* RDP 5 order 26/0X1A brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1a_col_foregr:       /* RDP 5 order 26/0X1A foreground colour */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_forecolor
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O1A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_y;  /* RDP 5 order 26/0X1A brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_style;  /* RDP 5 order 26/0X1A brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_hatch;  /* RDP 5 order 26/0X1A brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 26/0X1A brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1a_brush_data;  /* RDP 5 order 26/0X1A brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1a_brush_x:          /* RDP 5 order 26/0X1A brush X */
       D_ADSL_RCO1->dsc_ord_co_o1a.dsc_brush.scc_brushorgx  /* top leftmost pixel of brushpattern, x-coordinate */
         = (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O1A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_y;  /* RDP 5 order 26/0X1A brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_style;  /* RDP 5 order 26/0X1A brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_hatch;  /* RDP 5 order 26/0X1A brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 26/0X1A brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1a_brush_data;  /* RDP 5 order 26/0X1A brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1a_brush_y:          /* RDP 5 order 26/0X1A brush Y */
       D_ADSL_RCO1->dsc_ord_co_o1a.dsc_brush.scc_brushorgy  /* top leftmost pixel of brushpattern, y-coordinate */
         = (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O1A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_style;  /* RDP 5 order 26/0X1A brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_hatch;  /* RDP 5 order 26/0X1A brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 26/0X1A brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1a_brush_data;  /* RDP 5 order 26/0X1A brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1a_brush_style:      /* RDP 5 order 26/0X1A brush style */
       D_ADSL_RCO1->dsc_ord_co_o1a.dsc_brush.ucc_brushstyle  /* style of brush */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O1A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_hatch;  /* RDP 5 order 26/0X1A brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 26/0X1A brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1a_brush_data;  /* RDP 5 order 26/0X1A brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1a_brush_hatch:      /* RDP 5 order 26/0X1A brush hatch */
       D_ADSL_RCO1->dsc_ord_co_o1a.dsc_brush.ucc_brushhatch  /* hatched_brush info or last row of brush-pattern */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O1A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 26/0X1A brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1a_brush_data;  /* RDP 5 order 26/0X1A brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_cache_id:         /* RDP 5 order 27/0X1B cache Id */
       D_ADSL_RCO1->dsc_ord_co_o1b.ucc_cache_id = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       if (D_ADSL_RCO1->dsc_ord_co_o1b.ucc_cache_id >= 10) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_flaccel;  /* RDP 5 order 27/0X1B flAccel */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_ulcharinc;  /* RDP 5 order 27/0X1B ulCharInc */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_fopredundant;  /* RDP 5 order 27/0X1B fOpRedundant */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_col_backgr;  /* RDP 5 order 27/0X1B background colour */
         D_ADSL_RCO1->dsc_ord_co_o1b.umc_backcolor = 0;  /* clear Order 27/0X1B background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_col_foregr;  /* RDP 5 order 27/0X1B foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1b.umc_forecolor = 0;  /* clear Order 27/0X1B foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_left;  /* RDP 5 order 27/0X1B delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_left = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_left;  /* RDP 5 order 27/0X1B absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_top;  /* RDP 5 order 27/0X1B delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_top;  /* RDP 5 order 27/0X1B absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_right;  /* RDP 5 order 27/0X1B delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_right;  /* RDP 5 order 27/0X1B absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_bottom;  /* RDP 5 order 27/0X1B delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_bottom;  /* RDP 5 order 27/0X1B absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_left;  /* RDP 5 order 27/0X1B rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_top;  /* RDP 5 order 27/0X1B rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_right;  /* RDP 5 order 27/0X1B rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_bottom;  /* RDP 5 order 27/0X1B rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_flaccel:          /* RDP 5 order 27/0X1B flAccel */
       D_ADSL_RCO1->dsc_ord_co_o1b.ucc_flaccel = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_ulcharinc;  /* RDP 5 order 27/0X1B ulCharInc */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_fopredundant;  /* RDP 5 order 27/0X1B fOpRedundant */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_col_backgr;  /* RDP 5 order 27/0X1B background colour */
         D_ADSL_RCO1->dsc_ord_co_o1b.umc_backcolor = 0;  /* clear Order 27/0X1B background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_col_foregr;  /* RDP 5 order 27/0X1B foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1b.umc_forecolor = 0;  /* clear Order 27/0X1B foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_left;  /* RDP 5 order 27/0X1B delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_left = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_left;  /* RDP 5 order 27/0X1B absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_top;  /* RDP 5 order 27/0X1B delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_top;  /* RDP 5 order 27/0X1B absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_right;  /* RDP 5 order 27/0X1B delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_right;  /* RDP 5 order 27/0X1B absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_bottom;  /* RDP 5 order 27/0X1B delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_bottom;  /* RDP 5 order 27/0X1B absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_left;  /* RDP 5 order 27/0X1B rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_top;  /* RDP 5 order 27/0X1B rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_right;  /* RDP 5 order 27/0X1B rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_bottom;  /* RDP 5 order 27/0X1B rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_ulcharinc:        /* RDP 5 order 27/0X1B ulCharInc */
       D_ADSL_RCO1->dsc_ord_co_o1b.ucc_ulcharinc = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_fopredundant;  /* RDP 5 order 27/0X1B fOpRedundant */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_col_backgr;  /* RDP 5 order 27/0X1B background colour */
         D_ADSL_RCO1->dsc_ord_co_o1b.umc_backcolor = 0;  /* clear Order 27/0X1B background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_col_foregr;  /* RDP 5 order 27/0X1B foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1b.umc_forecolor = 0;  /* clear Order 27/0X1B foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_left;  /* RDP 5 order 27/0X1B delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_left = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_left;  /* RDP 5 order 27/0X1B absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_top;  /* RDP 5 order 27/0X1B delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_top;  /* RDP 5 order 27/0X1B absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_right;  /* RDP 5 order 27/0X1B delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_right;  /* RDP 5 order 27/0X1B absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_bottom;  /* RDP 5 order 27/0X1B delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_bottom;  /* RDP 5 order 27/0X1B absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_left;  /* RDP 5 order 27/0X1B rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_top;  /* RDP 5 order 27/0X1B rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_right;  /* RDP 5 order 27/0X1B rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_bottom;  /* RDP 5 order 27/0X1B rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_fopredundant:     /* RDP 5 order 27/0X1B fOpRedundant */
       D_ADSL_RCO1->dsc_ord_co_o1b.ucc_fopredundant = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_col_backgr;  /* RDP 5 order 27/0X1B background colour */
         D_ADSL_RCO1->dsc_ord_co_o1b.umc_backcolor = 0;  /* clear Order 27/0X1B background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_col_foregr;  /* RDP 5 order 27/0X1B foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1b.umc_forecolor = 0;  /* clear Order 27/0X1B foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_left;  /* RDP 5 order 27/0X1B delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_left = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_left;  /* RDP 5 order 27/0X1B absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_top;  /* RDP 5 order 27/0X1B delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_top;  /* RDP 5 order 27/0X1B absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_right;  /* RDP 5 order 27/0X1B delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_right;  /* RDP 5 order 27/0X1B absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_bottom;  /* RDP 5 order 27/0X1B delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_bottom;  /* RDP 5 order 27/0X1B absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_left;  /* RDP 5 order 27/0X1B rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_top;  /* RDP 5 order 27/0X1B rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_right;  /* RDP 5 order 27/0X1B rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_bottom;  /* RDP 5 order 27/0X1B rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_col_backgr:       /* RDP 5 order 27/0X1B background colour */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o1b.umc_backcolor
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_col_foregr;  /* RDP 5 order 27/0X1B foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1b.umc_forecolor = 0;  /* clear Order 27/0X1B foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_left;  /* RDP 5 order 27/0X1B delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_left = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_left;  /* RDP 5 order 27/0X1B absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_top;  /* RDP 5 order 27/0X1B delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_top;  /* RDP 5 order 27/0X1B absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_right;  /* RDP 5 order 27/0X1B delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_right;  /* RDP 5 order 27/0X1B absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_bottom;  /* RDP 5 order 27/0X1B delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_bottom;  /* RDP 5 order 27/0X1B absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_left;  /* RDP 5 order 27/0X1B rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_top;  /* RDP 5 order 27/0X1B rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_right;  /* RDP 5 order 27/0X1B rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_bottom;  /* RDP 5 order 27/0X1B rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_col_foregr:       /* RDP 5 order 27/0X1B foreground colour */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o1b.umc_forecolor
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_left;  /* RDP 5 order 27/0X1B delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_left = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_left;  /* RDP 5 order 27/0X1B absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_top;  /* RDP 5 order 27/0X1B delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_top;  /* RDP 5 order 27/0X1B absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_right;  /* RDP 5 order 27/0X1B delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_right;  /* RDP 5 order 27/0X1B absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_bottom;  /* RDP 5 order 27/0X1B delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_bottom;  /* RDP 5 order 27/0X1B absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_left;  /* RDP 5 order 27/0X1B rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_top;  /* RDP 5 order 27/0X1B rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_right;  /* RDP 5 order 27/0X1B rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_bottom;  /* RDP 5 order 27/0X1B rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_abs_left:         /* RDP 5 order 27/0X1B absolute left */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_top;  /* RDP 5 order 27/0X1B delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_top;  /* RDP 5 order 27/0X1B absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_right;  /* RDP 5 order 27/0X1B delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_right;  /* RDP 5 order 27/0X1B absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_bottom;  /* RDP 5 order 27/0X1B delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_bottom;  /* RDP 5 order 27/0X1B absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_left;  /* RDP 5 order 27/0X1B rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_top;  /* RDP 5 order 27/0X1B rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_right;  /* RDP 5 order 27/0X1B rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_bottom;  /* RDP 5 order 27/0X1B rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_abs_top:          /* RDP 5 order 27/0X1B absolute top */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_right;  /* RDP 5 order 27/0X1B delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_right;  /* RDP 5 order 27/0X1B absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_bottom;  /* RDP 5 order 27/0X1B delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_bottom;  /* RDP 5 order 27/0X1B absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_left;  /* RDP 5 order 27/0X1B rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_top;  /* RDP 5 order 27/0X1B rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_right;  /* RDP 5 order 27/0X1B rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_bottom;  /* RDP 5 order 27/0X1B rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_abs_right:        /* RDP 5 order 27/0X1B absolute right */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_right
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_right)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_left)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_bottom;  /* RDP 5 order 27/0X1B delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_bottom;  /* RDP 5 order 27/0X1B absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_left;  /* RDP 5 order 27/0X1B rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_top;  /* RDP 5 order 27/0X1B rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_right;  /* RDP 5 order 27/0X1B rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_bottom;  /* RDP 5 order 27/0X1B rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_abs_bottom:       /* RDP 5 order 27/0X1B absolute bottom */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_bottom
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_bottom)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_top)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_left;  /* RDP 5 order 27/0X1B rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_top;  /* RDP 5 order 27/0X1B rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_right;  /* RDP 5 order 27/0X1B rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_bottom;  /* RDP 5 order 27/0X1B rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_delta_left:       /* RDP 5 order 27/0X1B delta left */
       D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_left
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_left)
             >= D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_top;  /* RDP 5 order 27/0X1B delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_top;  /* RDP 5 order 27/0X1B absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_right;  /* RDP 5 order 27/0X1B delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_right;  /* RDP 5 order 27/0X1B absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_bottom;  /* RDP 5 order 27/0X1B delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_bottom;  /* RDP 5 order 27/0X1B absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_left;  /* RDP 5 order 27/0X1B rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_top;  /* RDP 5 order 27/0X1B rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_right;  /* RDP 5 order 27/0X1B rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_bottom;  /* RDP 5 order 27/0X1B rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_delta_top:        /* RDP 5 order 27/0X1B delta top */
       D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_top
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_top)
             >= D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_right;  /* RDP 5 order 27/0X1B delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_right;  /* RDP 5 order 27/0X1B absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_bottom;  /* RDP 5 order 27/0X1B delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_bottom;  /* RDP 5 order 27/0X1B absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_left;  /* RDP 5 order 27/0X1B rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_top;  /* RDP 5 order 27/0X1B rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_right;  /* RDP 5 order 27/0X1B rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_bottom;  /* RDP 5 order 27/0X1B rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_delta_right:      /* RDP 5 order 27/0X1B delta right */
       D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_right
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_right
             > D_ADSL_RCL1->imc_cmp_dim_x) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_right)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_left)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_bottom;  /* RDP 5 order 27/0X1B delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_bottom;  /* RDP 5 order 27/0X1B absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_left;  /* RDP 5 order 27/0X1B rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_top;  /* RDP 5 order 27/0X1B rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_right;  /* RDP 5 order 27/0X1B rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_bottom;  /* RDP 5 order 27/0X1B rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_delta_bottom:     /* RDP 5 order 27/0X1B delta bottom */
       D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_bottom
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_bottom
             > D_ADSL_RCL1->imc_cmp_dim_y) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_bottom)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_top)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_left;  /* RDP 5 order 27/0X1B rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_top;  /* RDP 5 order 27/0X1B rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_right;  /* RDP 5 order 27/0X1B rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_bottom;  /* RDP 5 order 27/0X1B rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_r2_left:          /* RDP 5 order 27/0X1B rect2 left */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_left
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_top;  /* RDP 5 order 27/0X1B rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_right;  /* RDP 5 order 27/0X1B rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_bottom;  /* RDP 5 order 27/0X1B rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_r2_top:           /* RDP 5 order 27/0X1B rect2 top */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_top
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_right;  /* RDP 5 order 27/0X1B rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_bottom;  /* RDP 5 order 27/0X1B rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_r2_right:         /* RDP 5 order 27/0X1B rect2 right */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_left)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_bottom;  /* RDP 5 order 27/0X1B rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_r2_bottom:        /* RDP 5 order 27/0X1B rect2 bottom */
       /* generated from macro M_APPLY_ORD_ABS()                       */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom)
             <= ((unsigned short int) D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_top)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_brush_x:          /* RDP 5 order 26/0X1A brush X */
       D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.scc_brushorgx  /* top leftmost pixel of brushpattern, x-coordinate */
         = (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_brush_y:          /* RDP 5 order 27/0X1B brush Y */
       D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.scc_brushorgy  /* top leftmost pixel of brushpattern, y-coordinate */
         = (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_brush_style:      /* RDP 5 order 27/0X1B brush style */
       D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.ucc_brushstyle  /* style of brush */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_brush_hatch:      /* RDP 5 order 27/0X1B brush hatch */
       D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.ucc_brushhatch  /* hatched_brush info or last row of brush-pattern */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_abs_start_x:      /* RDP 5 order 27/0X1B start X */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_abs_start_y:      /* RDP 5 order 27/0X1B start Y */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_delta_start_x:    /* RDP 5 order 27/0X1B delta start X */
       D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_delta_start_y:    /* RDP 5 order 27/0X1B delta start Y */
       D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y
         += (signed char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case ied_fsfp_r5_o1b_len_glyph:        /* RDP 5 order 27/0X1B length glyph */
       D_ADSL_RCO1->dsc_ord_co_o1b.ucc_len_glyph  /* length glyph data */
         = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       D_ADSL_RCL1->imc_pos_inp_frame--;
       if (D_ADSL_RCO1->dsc_ord_co_o1b.ucc_len_glyph == 0) {  /* length glyph data */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCO1->dsc_ord_co_o1b.achc_glyph  /* glyph data           */
         = (char *) m_aux_stor_realloc( &ADSL_RDPA_F->dsc_stor_sdh_1,
                                        D_ADSL_RCO1->dsc_ord_co_o1b.achc_glyph,
                                        D_ADSL_RCO1->dsc_ord_co_o1b.ucc_len_glyph );
       D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.achc_glyph;
       D_ADSL_RCL1->imc_prot_2
         = D_ADSL_RCL1->imc_pos_inp_frame - D_ADSL_RCO1->dsc_ord_co_o1b.ucc_len_glyph;
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data         */
       D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_pdu_apply_order;  /* RDP 5 PDU apply order */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_pdu_ord_len:          /* RDP 5 PDU order length  */
       while (TRUE) {
         D_ADSL_RCL1->imc_prot_1
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_2 + 2 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d ied_fsfp_r5_pdu_ord_len found int=%d D_ADSL_RCL1->iec_frse_bl=%d.",
                     __LINE__, 22244,  /* line number for errors */
                     D_ADSL_RCL1->imc_prot_1,
                     D_ADSL_RCL1->iec_frse_bl );
       D_ADSL_RCL1->imc_pos_inp_frame
         -= D_ADSL_RCL1->imc_prot_akku - 1 - 2 + CONST_DEV_BITMAP;  /* remaining data in frame */
       if (D_ADSL_RCL1->imc_pos_inp_frame < 0) {  /* more requested than data in frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       /* with bounds flag                                             */
       if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X04) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_sec_data;  /* RDP 5 PDU Secondary Drawing Orders data */
     case ied_fsfp_r5_pdu_sec_data:         /* RDP 5 PDU Secondary Drawing Orders data */
       /* check if all data of this Secondary Drawing Order have been received */
       iml1 = D_ADSL_RCL1->imc_prot_akku - 1 - 2 + CONST_DEV_BITMAP;  /* remaining data in frame */
       adsl_gai1_inp_w2 = adsl_gai1_inp_1;  /* get gather              */
       while (TRUE) {                       /* loop over all gather structures input */
         iml1 -= adsl_gai1_inp_w2->achc_ginp_end - adsl_gai1_inp_w2->achc_ginp_cur;
         if (iml1 <= 0) break;              /* enough data found       */
         adsl_gai1_inp_w2 = adsl_gai1_inp_w2->adsc_next;  /* get next gather */
         if (adsl_gai1_inp_w2 == NULL) {    /* already end of chain    */
           m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d ied_fsfp_r5_pdu_sec_data received from server need more data %d.",
                         __LINE__, 22747,  /* line number for errors */
                         iml1 );
           /* wait for more data                                       */
           goto p_ret_00;                   /* check how to return     */
         }
       }
       /* get two bytes extraFlags                                     */
       iml1 = 0;                            /* clear akkumulator       */
       iml2 = 0;                            /* number of bytes         */
       do {
         while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
           adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
           if (adsl_gai1_inp_1 == NULL) {   /* logic error             */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
           }
         }
         iml1 |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << (iml2 << 3);
         iml2++;                            /* increment index         */
       } while (iml2 < 2);
       /* get orderType                                                */
       while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
         adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
         if (adsl_gai1_inp_1 == NULL) {     /* logic error             */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
         }
       }
       iml2 = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
       switch (iml2) {                      /* orderType               */
         case 0X00:                         /* TS_CACHE_BITMAP_UNCOMPRESSED */
         case 0X02:                         /* TS_CACHE_BITMAP_COMPRESSED */
           iml3 = sizeof(struct dsd_awcs_cache_bitmap_rev1);  /* command cache bitmap rev1 */
           iml4 = 1 + 1 + 1 + 1 + 1 + 2 + 2;  /* number of bytes       */
           break;
         case 0X03:                         /* TS_CACHE_GLYPH          */
           if ((iml1 & (0X02 << 4)) == 0) {  /* no GLYPH_ORDER_REV2    */
             iml3 = sizeof(struct dsd_awcs_cache_glyph_rev1);  /* command cache glyph rev1 */
             iml4 = 2;                      /* number of bytes         */
             break;
           }
           iml3 = sizeof(struct dsd_awcs_cache_glyph_rev2);  /* command cache glyph rev2 */
           iml4 = 0;                        /* number of bytes         */
           break;
         case 0X04:                         /* TS_CACHE_BITMAP_UNCOMPRESSED_REV2 */
         case 0X05:                         /* TS_CACHE_BITMAP_COMPRESSED_REV2 */
           iml3 = sizeof(struct dsd_awcs_cache_bitmap_rev2);  /* command cache bitmap rev2 */
           iml4 = 1 + 1 + 1;                /* number of bytes         */
           break;
         case 0X07:                         /* TS_CACHE_BRUSH          */
           iml3 = sizeof(struct dsd_awcs_cache_brush);  /* command cache brush */
           iml4 = 1 + 1 + 1 + 1 + 1 + 1;    /* number of bytes         */
           break;
         case 0X08:                         /* TS_CACHE_BITMAP_COMPRESSED_REV3 */
           iml3 = sizeof(struct dsd_awcs_cache_bitmap_rev3);  /* command cache bitmap rev3 */
           iml4 = 2 + 4 + 4;                /* number of bytes         */
           break;
         case 0X01:                         /* TS_CACHE_COLOR_TABLE    */
         default:                           /* other values            */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if ((D_ADSL_RCL1->imc_prot_akku - 1 - 2 - 2 - 1 + CONST_DEV_BITMAP) < iml4) {  /* remaining data in frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower)
             < (sizeof(struct dsd_se_co1) + iml3)) {
         memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
         bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                            DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                            &dsl_aux_get_workarea,
                                            sizeof(struct dsd_aux_get_workarea) );
         if (bol1 == FALSE) {               /* aux returned error      */
           adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
           goto p_cleanup_20;               /* do cleanup now          */
         }
         ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
         ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
       }
       ADSL_OA1->achc_upper -= sizeof(struct dsd_se_co1) + iml3;
       achl1 = ADSL_OA1->achc_upper;        /* set start of order      */
#define ADSL_SE_CO1_G ((struct dsd_se_co1 *) achl1)
#define ADSL_AWCS_CBM1_G ((struct dsd_awcs_cache_bitmap_rev1 *) (ADSL_SE_CO1_G + 1))
#define ADSL_AWCS_CG1_G ((struct dsd_awcs_cache_glyph_rev1 *) (ADSL_SE_CO1_G + 1))
#define ADSL_AWCS_CG2_G ((struct dsd_awcs_cache_glyph_rev2 *) (ADSL_SE_CO1_G + 1))
#define ADSL_AWCS_CBM2_G ((struct dsd_awcs_cache_bitmap_rev2 *) (ADSL_SE_CO1_G + 1))
#define ADSL_AWCS_CBR_G ((struct dsd_awcs_cache_brush *) (ADSL_SE_CO1_G + 1))
#define ADSL_AWCS_BMC3_G ((struct dsd_awcs_cache_bitmap_rev3 *) (ADSL_SE_CO1_G + 1))
       switch (iml2) {                      /* orderType               */
         case 0X00:                         /* TS_CACHE_BITMAP_UNCOMPRESSED */
         case 0X02:                         /* TS_CACHE_BITMAP_COMPRESSED */
           ADSL_SE_CO1_G->iec_se_command = ied_sec_cache_bitmap_rev1;  /* command cache bitmap rev1 */
           ADSL_AWCS_CBM1_G->boc_compressed = FALSE;  /* bitmap compressed */
           if (iml2 == 0X02) {              /* TS_CACHE_BITMAP_COMPRESSED_REV1 */
             ADSL_AWCS_CBM1_G->boc_compressed = TRUE;  /* bitmap compressed */
           }
           ADSL_AWCS_CBM1_G->usc_flags = iml1;  /* flags               */
           /* get cacheId                                              */
           while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
             adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
             if (adsl_gai1_inp_1 == NULL) {  /* logic error            */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
             }
           }
           ADSL_AWCS_CBM1_G->ucc_cache_id = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
           /* overread pad1Octet                                       */
           while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
             adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
             if (adsl_gai1_inp_1 == NULL) {  /* logic error            */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
             }
           }
           adsl_gai1_inp_1->achc_ginp_cur++;  /* overread byte input   */
           /* get bitmapWidth                                          */
           while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
             adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
             if (adsl_gai1_inp_1 == NULL) {  /* logic error            */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
             }
           }
           ADSL_AWCS_CBM1_G->ucc_width = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
           /* get bitmapHeight                                         */
           while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
             adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
             if (adsl_gai1_inp_1 == NULL) {  /* logic error            */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
             }
           }
           ADSL_AWCS_CBM1_G->ucc_height = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
           /* get bitmapBitsPerPel                                     */
           while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
             adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
             if (adsl_gai1_inp_1 == NULL) {  /* logic error            */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
             }
           }
           iml3 = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
           switch (iml3) {
// to-do 02.01.13 KB - 15-bit color depth also allowed ???
             case 0X10:                     /* 16-bit color depth      */
             case 0X18:                     /* 24-bit color depth      */
             case 0X20:                     /* 32-bit color depth      */
               ADSL_AWCS_CBM1_G->ucc_bpp = iml3;  /* decoded bitmapBitsPerPel */
               break;
             default:
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           /* get bitmapLength                                         */
           iml4 = 0;                        /* bitmapLength            */
           iml3 = 0;                        /* clear index             */
           do {
             while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
               adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
               if (adsl_gai1_inp_1 == NULL) {  /* logic error          */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
               }
             }
             iml4 |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                       << (iml3 << 3);
             iml3++;                        /* increment index         */
           } while (iml3 < 2);
           if (iml4 != (D_ADSL_RCL1->imc_prot_akku - 1 - 1 - 1 - 1 - 1 - 2 - 2 - 1 - 2 - 2 - 1 + CONST_DEV_BITMAP)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           /* get cacheIndex                                           */
           ADSL_AWCS_CBM1_G->usc_cache_index = 0;  /* cacheIndex       */
           iml3 = 0;                        /* clear index             */
           do {
             while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
               adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
               if (adsl_gai1_inp_1 == NULL) {  /* logic error          */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
               }
             }
             ADSL_AWCS_CBM1_G->usc_cache_index |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                                                    << (iml3 << 3);
             iml3++;                        /* increment index         */
           } while (iml3 < 2);
           D_ADSL_RCL1->imc_prot_akku -= 1 + 1 + 1 + 1 + 1 + 2 + 2;
           achl2 = (char *) &ADSL_AWCS_CBM1_G->adsc_gai1_data;  /* input output data */
           break;
         case 0X03:                         /* TS_CACHE_GLYPH          */
           if ((iml1 & (0X02 << 4)) == 0) {  /* no GLYPH_ORDER_REV2    */
             ADSL_SE_CO1_G->iec_se_command = ied_sec_cache_glyph_rev1;  /* command cache glyph rev1 */
             ADSL_AWCS_CG1_G->boc_unicode_present = FALSE;  /* unicodeCharacters field is present */
             if (iml1 & (0X01 << 4)) {      /* CG_GLYPH_UNICODE_PRESENT */
               ADSL_AWCS_CG1_G->boc_unicode_present = TRUE;  /* unicodeCharacters field is present */
             }
             /* get cacheId                                            */
             while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
               adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
               if (adsl_gai1_inp_1 == NULL) {  /* logic error          */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
               }
             }
             ADSL_AWCS_CG1_G->ucc_cache_id = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
             /* get cGlyphs                                            */
             while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
               adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
               if (adsl_gai1_inp_1 == NULL) {  /* logic error          */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
               }
             }
             ADSL_AWCS_CG1_G->ucc_count = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
             D_ADSL_RCL1->imc_prot_akku -= 1 + 1;
             achl2 = (char *) &ADSL_AWCS_CG1_G->adsc_gai1_data;  /* input output data */
             break;
           }
           ADSL_SE_CO1_G->iec_se_command = ied_sec_cache_glyph_rev2;  /* command cache glyph rev2 */
           ADSL_AWCS_CG2_G->boc_unicode_present = FALSE;  /* unicodeCharacters field is present */
           if (iml1 & (0X01 << 4)) {        /* CG_GLYPH_UNICODE_PRESENT */
             ADSL_AWCS_CG2_G->boc_unicode_present = TRUE;  /* unicodeCharacters field is present */
           }
           ADSL_AWCS_CG2_G->ucc_cache_id = iml1 & 0X0F;
           ADSL_AWCS_CG2_G->ucc_count = (unsigned char) (iml1 >> 8);
           achl2 = (char *) &ADSL_AWCS_CG2_G->adsc_gai1_data;  /* input output data */
           break;
         case 0X04:                         /* TS_CACHE_BITMAP_UNCOMPRESSED_REV2 */
         case 0X05:                         /* TS_CACHE_BITMAP_COMPRESSED_REV2 */
           ADSL_SE_CO1_G->iec_se_command = ied_sec_cache_bitmap_rev2;  /* command cache bitmap rev2 */
           ADSL_AWCS_CBM2_G->boc_compressed = FALSE;  /* bitmap compressed */
           if (iml2 == 0X05) {              /* TS_CACHE_BITMAP_COMPRESSED_REV2 */
             ADSL_AWCS_CBM2_G->boc_compressed = TRUE;  /* bitmap compressed */
           }
           ADSL_AWCS_CBM2_G->ucc_cache_id = iml1 & 0X07;
           ADSL_AWCS_CBM2_G->ucc_bpp_id = (iml1 >> 3) & 0X0F;  /* bitsPerPixelId */
           ADSL_AWCS_CBM2_G->usc_flags = iml1 >> 7;  /* flags          */
           D_ADSL_RCL1->imc_prot_akku -= 1 + 1 + 1;
           if (iml1 & (0X02 << (4 + 3))) {  /* CBR2_PERSISTENT_KEY_PRESENT */
             D_ADSL_RCL1->imc_prot_akku -= 4 + 4;
             if (D_ADSL_RCL1->imc_prot_akku <= 0) {  /* longer than structure */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             /* get key1                                               */
             ADSL_AWCS_CBM2_G->umc_key1 = 0;  /* key1                  */
             iml3 = 0;                      /* clear index             */
             do {
               while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
                 adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
                 if (adsl_gai1_inp_1 == NULL) {  /* logic error        */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
                 }
               }
               ADSL_AWCS_CBM2_G->umc_key1 |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                                               << (iml3 << 3);
               iml3++;                      /* increment index         */
             } while (iml3 < 4);
             /* get key2                                               */
             ADSL_AWCS_CBM2_G->umc_key2 = 0;  /* key2                  */
             iml3 = 0;                        /* clear index           */
             do {
               while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
                 adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
                 if (adsl_gai1_inp_1 == NULL) {  /* logic error        */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
                 }
               }
               ADSL_AWCS_CBM2_G->umc_key2 |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                                               << (iml3 << 3);
               iml3++;                      /* increment index         */
             } while (iml3 < 4);
           }
           /* get bitmapWidth                                          */
           while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
             adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
             if (adsl_gai1_inp_1 == NULL) {  /* logic error            */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
             }
           }
           ADSL_AWCS_CBM2_G->usc_width = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;  /* bitmapWidth */
           if (ADSL_AWCS_CBM2_G->usc_width & 0X80) {  /* bitmapWidth in two bytes */
             D_ADSL_RCL1->imc_prot_akku--;
             if (D_ADSL_RCL1->imc_prot_akku <= 0) {  /* longer than structure */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
               adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
               if (adsl_gai1_inp_1 == NULL) {  /* logic error          */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
               }
             }
             ADSL_AWCS_CBM2_G->usc_width &= 0X7F;
             ADSL_AWCS_CBM2_G->usc_width <<= 8;
             ADSL_AWCS_CBM2_G->usc_width |= (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;  /* bitmapWidth */
           }
           ADSL_AWCS_CBM2_G->usc_height = ADSL_AWCS_CBM2_G->usc_width;  /* bitmapHeight */
           if ((iml1 & (0X01 << (4 + 3))) == 0) {  /* CBR2_HEIGHT_SAME_AS_WIDTH */
             D_ADSL_RCL1->imc_prot_akku--;
             if (D_ADSL_RCL1->imc_prot_akku <= 0) {  /* longer than structure */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             /* get bitmapHeight                                       */
             while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
               adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
               if (adsl_gai1_inp_1 == NULL) {  /* logic error          */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
               }
             }
             ADSL_AWCS_CBM2_G->usc_height = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;  /* bitmapHeight */
             if (ADSL_AWCS_CBM2_G->usc_height & 0X80) {  /* bitmapHeight in two bytes */
               D_ADSL_RCL1->imc_prot_akku--;
               if (D_ADSL_RCL1->imc_prot_akku <= 0) {  /* longer than structure */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
               }
               while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
                 adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
                 if (adsl_gai1_inp_1 == NULL) {  /* logic error        */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
                 }
               }
               ADSL_AWCS_CBM2_G->usc_height &= 0X7F;
               ADSL_AWCS_CBM2_G->usc_height <<= 8;
               ADSL_AWCS_CBM2_G->usc_height |= (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;  /* bitmapHeight */
             }
           }
           /* get bitmapLength                                         */
           while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
             adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
             if (adsl_gai1_inp_1 == NULL) {  /* logic error            */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
             }
           }
           iml3 = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
           iml4 = iml3 >> 6;
           iml3 &= 0X3F;                    /* only three bits         */
           if (iml4 > 0) {                  /* more bytes              */
             D_ADSL_RCL1->imc_prot_akku -= iml4;
             if (D_ADSL_RCL1->imc_prot_akku <= 0) {  /* longer than structure */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             do {                           /* loop get more bytes of bitmapLength */
               while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
                 adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
                 if (adsl_gai1_inp_1 == NULL) {  /* logic error        */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
                 }
               }
               iml3 <<= 8;                  /* shift old value         */
               iml3 |= (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
               iml4--;                      /* this byte processed     */
             } while (iml4 > 0);
           }
           /* get cacheIndex                                           */
           while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
             adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
             if (adsl_gai1_inp_1 == NULL) {  /* logic error            */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
             }
           }
           ADSL_AWCS_CBM2_G->usc_cache_index = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;  /* cacheIndex */
           if (ADSL_AWCS_CBM2_G->usc_cache_index & 0X80) {  /* cacheIndex in two bytes */
             D_ADSL_RCL1->imc_prot_akku--;
             if (D_ADSL_RCL1->imc_prot_akku <= 0) {  /* longer than structure */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
             }
             while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
               adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
               if (adsl_gai1_inp_1 == NULL) {  /* logic error          */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
               }
             }
             ADSL_AWCS_CBM2_G->usc_cache_index &= 0X7F;
             ADSL_AWCS_CBM2_G->usc_cache_index <<= 8;
             ADSL_AWCS_CBM2_G->usc_cache_index |= (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;  /* bitmapWidth */
           }
           if ((D_ADSL_RCL1->imc_prot_akku - 1 - 2 - 2 - 1 + CONST_DEV_BITMAP) != iml3) {  /* check length */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           achl2 = (char *) &ADSL_AWCS_CBM2_G->adsc_gai1_data;  /* input output data */
           break;
         case 0X07:                         /* TS_CACHE_BRUSH          */
           ADSL_SE_CO1_G->iec_se_command = ied_sec_cache_brush;  /* command cache brush */
           /* get cacheEntry                                           */
           while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
             adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
             if (adsl_gai1_inp_1 == NULL) {  /* logic error            */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
             }
           }
           ADSL_AWCS_CBR_G->ucc_cache_entry = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;  /* cacheEntry */
           /* get iBitmapFormat                                        */
           while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
             adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
             if (adsl_gai1_inp_1 == NULL) {  /* logic error            */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
             }
           }
           ADSL_AWCS_CBR_G->ucc_bitmap_format = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;  /* iBitmapFormat */
           /* get cx                                                   */
           while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
             adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
             if (adsl_gai1_inp_1 == NULL) {  /* logic error            */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
             }
           }
           ADSL_AWCS_CBR_G->ucc_cx = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;  /* cx */
           /* get cy                                                   */
           while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
             adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
             if (adsl_gai1_inp_1 == NULL) {  /* logic error            */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
             }
           }
           ADSL_AWCS_CBR_G->ucc_cy = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;  /* cy */
           /* get Style                                                */
           while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
             adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
             if (adsl_gai1_inp_1 == NULL) {  /* logic error            */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
             }
           }
           ADSL_AWCS_CBR_G->ucc_style = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;  /* Style */
           /* get iBytes                                               */
           while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
             adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
             if (adsl_gai1_inp_1 == NULL) {  /* logic error            */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
             }
           }
           ADSL_AWCS_CBR_G->ucc_ibytes = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;  /* iBytes */
           D_ADSL_RCL1->imc_prot_akku -= 1 + 1 + 1 + 1 + 1 + 1;
           achl2 = (char *) &ADSL_AWCS_CBR_G->adsc_gai1_data;  /* input output data */
           break;
         case 0X08:                         /* TS_CACHE_BITMAP_COMPRESSED_REV3 */
           ADSL_SE_CO1_G->iec_se_command = ied_sec_cache_bitmap_rev3;  /* command cache bitmap rev3 */
           ADSL_AWCS_BMC3_G->ucc_cache_id = iml1 & 0X07;
           ADSL_AWCS_BMC3_G->ucc_bpp_id = (iml1 >> 3) & 0X0F;  /* bitsPerPixelId */
           ADSL_AWCS_BMC3_G->usc_flags = iml1 >> 7;  /* flags          */
           /* cacheIndex                                               */
           ADSL_AWCS_BMC3_G->usc_cache_index = 0;  /* cacheIndex       */
           iml1 = 0;                        /* clear index             */
           do {
             while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
               adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
               if (adsl_gai1_inp_1 == NULL) {  /* logic error          */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
               }
             }
             ADSL_AWCS_BMC3_G->usc_cache_index |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                                                    << (iml1 << 3);
             iml1++;                        /* increment index         */
           } while (iml1 < 2);
           /* get key1                                                 */
           ADSL_AWCS_BMC3_G->umc_key1 = 0;  /* key1                    */
           iml1 = 0;                        /* clear index             */
           do {
             while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
               adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
               if (adsl_gai1_inp_1 == NULL) {  /* logic error          */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
               }
             }
             ADSL_AWCS_BMC3_G->umc_key1 |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                                             << (iml1 << 3);
             iml1++;                        /* increment index         */
           } while (iml1 < 4);
           /* get key2                                                 */
           ADSL_AWCS_BMC3_G->umc_key2 = 0;  /* key2                    */
           iml1 = 0;                        /* clear index             */
           do {
             while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
               adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
               if (adsl_gai1_inp_1 == NULL) {  /* logic error          */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
               }
             }
             ADSL_AWCS_BMC3_G->umc_key2 |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                                             << (iml1 << 3);
             iml1++;                        /* increment index         */
           } while (iml1 < 4);
           D_ADSL_RCL1->imc_prot_akku -= 2 + 4 + 4;
           achl2 = (char *) &ADSL_AWCS_BMC3_G->adsc_gai1_data;  /* input output data */
           break;
         case 0X01:                         /* TS_CACHE_COLOR_TABLE    */
         default:                           /* other values            */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       iml1 = D_ADSL_RCL1->imc_prot_akku - 1 - 2 - 2 - 1 + CONST_DEV_BITMAP;  /* remaining data in Secondary Drawing Order */
       if (iml1 <= 0) {                     /* no data in input data   */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
         adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
         if (adsl_gai1_inp_1 == NULL) {     /* logic error             */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
         }
       }
       do {                                 /* loop output data        */
         if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower)
               < sizeof(struct dsd_gather_i_1)) {
           memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
           bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                              DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                              &dsl_aux_get_workarea,
                                              sizeof(struct dsd_aux_get_workarea) );
           if (bol1 == FALSE) {             /* aux returned error      */
             adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
             goto p_cleanup_20;             /* do cleanup now          */
           }
           ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
           ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
         }
         ADSL_OA1->achc_upper -= sizeof(struct dsd_gather_i_1);
#define ADSL_GAI1_L1 ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)
         *((void **) achl2) = (char *) ADSL_GAI1_L1;  /* set chain of gather */
         achl2 = (char *) &ADSL_GAI1_L1->adsc_next;  /* fill next pointer later */
         iml2 = adsl_gai1_inp_1->achc_ginp_end - adsl_gai1_inp_1->achc_ginp_cur;
         if (iml2 > iml1) iml2 = iml1;
         ADSL_GAI1_L1->achc_ginp_cur = adsl_gai1_inp_1->achc_ginp_cur;
         ADSL_GAI1_L1->achc_ginp_end = adsl_gai1_inp_1->achc_ginp_cur + iml2;
         adsl_gai1_inp_1->achc_ginp_cur += iml2;
#undef ADSL_GAI1_L1
         iml1 -= iml2;                      /* subtract bytes referenced */
         while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
           adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next input in chain */
           if (adsl_gai1_inp_1 == NULL) {   /* logic error             */
             if (iml1 == 0) break;          /* does not wait for more data */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
           }
         }
       } while (iml1 > 0);
       *((void **) achl2) = NULL;           /* set end of chain of gather */
       ADSL_SE_CO1_G->adsc_next = NULL;     /* clear chain field       */
       *ADSL_OA1->aadsc_se_co1_chain = ADSL_SE_CO1_G;  /* append to chain */
       ADSL_OA1->aadsc_se_co1_chain = &ADSL_SE_CO1_G->adsc_next;  /* set new end of chain */
#undef ADSL_SE_CO1_G
#undef ADSL_AWCS_CBM1_G
#undef ADSL_AWCS_CG1_G
#undef ADSL_AWCS_CG2_G
#undef ADSL_AWCS_CBM2_G
#undef ADSL_AWCS_CBR_G
#undef ADSL_AWCS_BMC3_G
       goto pfrse_end_order;                /* end of this order       */
     case ied_fsfp_r5_po_new_buf_ind:       /* RDP 5 PDU new order, buffer index */
       while (TRUE) {
         D_ADSL_RCL1->usc_prot_buf_ind
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_2 + 2 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d ied_fsfp_r5_po_new_buf_ind found buffer-index=%d/0X%04X.",
                     __LINE__, 23336,  /* line number for errors  */
                     D_ADSL_RCL1->usc_prot_buf_ind,
                     D_ADSL_RCL1->usc_prot_buf_ind );
       if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower)
             < ((sizeof(struct dsd_se_co1)
                   + sizeof(struct dsd_awcs_switch_surface)
                   + sizeof(void *) - 1)
                 & (0 - sizeof(void *)))) {  /* get new area           */
         memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
         bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                            DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                            &dsl_aux_get_workarea,
                                            sizeof(struct dsd_aux_get_workarea) );
         if (bol1 == FALSE) {               /* aux returned error      */
           adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
           goto p_cleanup_20;               /* do cleanup now          */
         }
         ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
         ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
       }
       ADSL_OA1->achc_upper
         = (char *) ((long long int) (ADSL_OA1->achc_upper
                                        - (sizeof(struct dsd_se_co1)
                                             + sizeof(struct dsd_awcs_switch_surface)))
                        & (0 - sizeof(void *)));  /* align storage     */
#define ADSL_SE_CO1_G ((struct dsd_se_co1 *) ADSL_OA1->achc_upper)
#define ADSL_AWCS_SSF_G ((struct dsd_awcs_switch_surface *) (ADSL_SE_CO1_G + 1))
       ADSL_AWCS_SSF_G->usc_bitmap_id = D_ADSL_RCL1->usc_prot_buf_ind;  /* offscreenBitmapId */
       ADSL_SE_CO1_G->iec_se_command = ied_sec_switch_surface;  /* SWITCH_SURFACE_ORDER */
       ADSL_SE_CO1_G->adsc_next = NULL;     /* clear chain field       */
       *ADSL_OA1->aadsc_se_co1_chain = ADSL_SE_CO1_G;  /* append to chain */
       ADSL_OA1->aadsc_se_co1_chain = &ADSL_SE_CO1_G->adsc_next;  /* set new end of chain */
       goto pfrse_end_order;                /* end of an order         */
#undef ADSL_SE_CO1_G
#undef ADSL_AWCS_SSF_G
     case ied_fsfp_r5_po_new_buf_param:     /* RDP 5 PDU new order, buffer param */
       while (TRUE) {
         D_ADSL_RCL1->isrc_buf_param[ D_ADSL_RCL1->imc_prot_6 ]
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_2 + 2 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       D_ADSL_RCL1->imc_prot_6++;           /* next index of parameters */
       if (D_ADSL_RCL1->imc_prot_6
             < (sizeof(D_ADSL_RCL1->isrc_buf_param) / sizeof(D_ADSL_RCL1->isrc_buf_param[0]))) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         goto pfrse20;                      /* process next data       */
       }
       m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d ied_fsfp_r5_po_new_buf_param found CREATE_OFFSCR_BITMAP_ORDER",
                     __LINE__, 23445 );  /* line number for errors */
       m_sdh_console_out( adsp_hl_clib_1, (char *) D_ADSL_RCL1->isrc_buf_param, sizeof(D_ADSL_RCL1->isrc_buf_param) );
#ifdef XYZ1
       iml1 = m_get_le2( (char *) &D_ADSL_RCL1->isrc_buf_param[0] );  /* get index */
       if (iml1 >= 0) {                     /* no buffer to free       */
         if (iml1 >= D_OFFSCR_B_NO) {       /* index too high          */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         if (D_ADSL_RCL1->dsrc_offscr_b_1[ iml1 ].ac_offscr_buffer) {
           bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                     DEF_AUX_MEMFREE,
                     &D_ADSL_RCL1->dsrc_offscr_b_1[ iml1 ].ac_offscr_buffer,
                     0 );
         }
         D_ADSL_RCL1->dsrc_offscr_b_1[ iml1 ].usc_dim_x
           = m_get_le2( (char *) &D_ADSL_RCL1->isrc_buf_param[1] );
         D_ADSL_RCL1->dsrc_offscr_b_1[ iml1 ].usc_dim_y
           = m_get_le2( (char *) &D_ADSL_RCL1->isrc_buf_param[2] );
         bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                   DEF_AUX_MEMGET,
                   &D_ADSL_RCL1->dsrc_offscr_b_1[ iml1 ].ac_offscr_buffer,
                   D_ADSL_RCL1->dsrc_offscr_b_1[ iml1 ].usc_dim_x
                     * D_ADSL_RCL1->dsrc_offscr_b_1[ iml1 ].usc_dim_y
                     * D_ADSL_RCO1->imc_bpp );
         goto pfrse_end_order;              /* end of this order       */
       }
#endif
#define ISL_BP0 D_ADSL_RCL1->isrc_buf_param[0]
       if (ISL_BP0 >= 0) {                  /* no buffer to free - deleteList not present */
         if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower)
               < ((sizeof(struct dsd_se_co1)
                     + sizeof(struct dsd_awcs_cr_offs_bitmap)
                     + sizeof(void *) - 1)
                   & (0 - sizeof(void *)))) {  /* get new area         */
           memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
           bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                              DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                              &dsl_aux_get_workarea,
                                              sizeof(struct dsd_aux_get_workarea) );
           if (bol1 == FALSE) {             /* aux returned error      */
             adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
             goto p_cleanup_20;             /* do cleanup now          */
           }
           ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
           ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
         }
         ADSL_OA1->achc_upper
           = (char *) ((long long int) (ADSL_OA1->achc_upper
                                          - (sizeof(struct dsd_se_co1)
                                               + sizeof(struct dsd_awcs_cr_offs_bitmap)))
                          & (0 - sizeof(void *)));  /* align storage   */
#define ADSL_SE_CO1_G ((struct dsd_se_co1 *) ADSL_OA1->achc_upper)
#define ADSL_AWCS_COB_G ((struct dsd_awcs_cr_offs_bitmap *) (ADSL_SE_CO1_G + 1))
         ADSL_AWCS_COB_G->imc_len_command = sizeof(struct dsd_awcs_cr_offs_bitmap);  /* length of command including deleteList */
         ADSL_AWCS_COB_G->usc_bitmap_id = D_ADSL_RCL1->isrc_buf_param[0];  /* offscreenBitmapId */
         ADSL_AWCS_COB_G->usc_cx = D_ADSL_RCL1->isrc_buf_param[1];  /* width in pixels of the offscreen bitmap */
         ADSL_AWCS_COB_G->usc_cy = D_ADSL_RCL1->isrc_buf_param[2];  /* height in pixels of the offscreen bitmap */
         ADSL_SE_CO1_G->iec_se_command = ied_sec_cr_offs_bitmap;  /* CREATE_OFFSCR_BITMAP_ORDER */
         ADSL_SE_CO1_G->adsc_next = NULL;   /* clear chain field       */
         *ADSL_OA1->aadsc_se_co1_chain = ADSL_SE_CO1_G;  /* append to chain */
         ADSL_OA1->aadsc_se_co1_chain = &ADSL_SE_CO1_G->adsc_next;  /* set new end of chain */
         goto pfrse_end_order;              /* end of an order         */
#undef ADSL_SE_CO1_G
#undef ADSL_AWCS_COB_G
       }
#undef ISL_BP0
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_po_new_buf_no_free;  /* RDP 5 PDU new order, number of buffers to free */
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_6 = 0;         /* clear result            */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_po_new_buf_no_free:   /* RDP 5 PDU new order, number of buffers to free */
       while (TRUE) {
         D_ADSL_RCL1->imc_prot_6
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_2 + 2 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCL1->imc_prot_6 == 0) {  /* check number of buffers */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_1 = 0;         /* clear result            */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_r5_po_new_buf_free_ind:  /* RDP 5 PDU new order, index of buffer to free */
       while (TRUE) {
         D_ADSL_RCL1->imc_prot_1
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_2 + 2 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
/* 06.06.05 KB - process order missing */
       D_ADSL_RCL1->imc_prot_6--;           /* count this buffer       */
       if (D_ADSL_RCL1->imc_prot_6 > 0) {   /* more buffers follow     */
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_1 = 0;       /* clear result            */
         goto pfrse20;                      /* process next data       */
       }
       goto pfrse_end_order;                /* end of this order       */
     case ied_fsfp_as_sbf_bm_flags:         /* RDP order ALTSEC Stream Bitmap First BitmapFlags */
           /* generated from macro M_CL_APPLY_SINGLE()                 */
           D_ADSL_RCL1->dsc_asbf.ucc_bitmap_flags = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
           D_ADSL_RCL1->imc_pos_inp_frame--;
           /* generated from macro M_CL_PREPARE_SINGLE()               */
           if (D_ADSL_RCL1->imc_pos_inp_frame <= 0) {  /* already end of frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_sbf_bm_bpp;  /* RDP order ALTSEC Stream Bitmap First BitmapBpp */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_as_sbf_bm_bpp:           /* RDP order ALTSEC Stream Bitmap First BitmapBpp */
           /* generated from macro M_CL_APPLY_SINGLE()                 */
           D_ADSL_RCL1->dsc_asbf.ucc_bitmap_bpp = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
           D_ADSL_RCL1->imc_pos_inp_frame--;
           /* generated from macro M_CL_PREPARE_MULTI()                */
           D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - sizeof(D_ADSL_RCL1->dsc_asbf.usc_bitmap_type);  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_count_in < 0) {  /* longer that frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->dsc_asbf.usc_bitmap_type = 0;              /* clear field             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_sbf_bm_type;  /* RDP order ALTSEC Stream Bitmap First BitmapType */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_as_sbf_bm_type:          /* RDP order ALTSEC Stream Bitmap First BitmapType */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->dsc_asbf.usc_bitmap_type
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
           /* generated from macro M_CL_PREPARE_MULTI()                */
           D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - sizeof(D_ADSL_RCL1->dsc_asbf.usc_bitmap_width);  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_count_in < 0) {  /* longer that frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->dsc_asbf.usc_bitmap_width = 0;              /* clear field             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_sbf_bm_width;  /* RDP order ALTSEC Stream Bitmap First BitmapWidth */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_as_sbf_bm_width:         /* RDP order ALTSEC Stream Bitmap First BitmapWidth */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->dsc_asbf.usc_bitmap_width
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
           /* generated from macro M_CL_PREPARE_MULTI()                */
           D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - sizeof(D_ADSL_RCL1->dsc_asbf.usc_bitmap_height);  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_count_in < 0) {  /* longer that frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->dsc_asbf.usc_bitmap_height = 0;              /* clear field             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_sbf_bm_height;  /* RDP order ALTSEC Stream Bitmap First BitmapHeight */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_as_sbf_bm_height:        /* RDP order ALTSEC Stream Bitmap First BitmapHeight */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->dsc_asbf.usc_bitmap_height
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
       if (D_ADSL_RCL1->dsc_asbf.ucc_bitmap_flags & STREAM_BITMAP_REV2) {  /* 0X04 */
         D_ADSL_RCL1->imc_prot_count_in -= 2;  /* number of bytes      */
       }
       if (D_ADSL_RCL1->imc_prot_count_in < 0) {  /* longer that frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
       D_ADSL_RCL1->dsc_asbf.umc_bitmap_size = 0;  /* clear field      */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_sbf_bm_size;  /* RDP order ALTSEC Stream Bitmap First BitmapSize */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_as_sbf_bm_size:          /* RDP order ALTSEC Stream Bitmap First BitmapSize */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->dsc_asbf.umc_bitmap_size
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_count_in < 0) {  /* longer that frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
       D_ADSL_RCL1->imc_prot_akku = 0;      /* BitmapBlockSize         */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_sbf_block_size;  /* RDP order ALTSEC Stream Bitmap First BitmapBlockSize */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_as_sbf_block_size:       /* RDP order ALTSEC Stream Bitmap First BitmapBlockSize */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->imc_prot_akku
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCL1->imc_prot_akku <= 0) {  /* no data in frame     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_pos_inp_frame -= D_ADSL_RCL1->imc_prot_akku;  /* data in frame */
       if (D_ADSL_RCL1->imc_pos_inp_frame < 0) {  /* more than in frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_sbf_data;  /* RDP order ALTSEC Stream Bitmap First data */
     case ied_fsfp_as_sbf_data:             /* RDP order ALTSEC Stream Bitmap First data */
       /* check if all data of this bitmap part have been received     */
       iml1 = D_ADSL_RCL1->imc_prot_akku;   /* length of data          */
       adsl_gai1_inp_w2 = adsl_gai1_inp_1;  /* get gather              */
       while (TRUE) {                       /* loop over all gather structures input */
         iml1 -= adsl_gai1_inp_w2->achc_ginp_end - adsl_gai1_inp_w2->achc_ginp_cur;
         if (iml1 <= 0) break;              /* enough data found       */
         adsl_gai1_inp_w2 = adsl_gai1_inp_w2->adsc_next;  /* get next gather */
         if (adsl_gai1_inp_w2 == NULL) {    /* already end of chain    */
           m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d received from server ied_fsfp_as_sbf_data need more data %d.",
                         __LINE__, 23660,  /* line number for errors */
                         iml1 );            /* length of data needed   */
           /* wait for more data                                       */
           goto p_ret_00;                   /* check how to return     */
         }
       }
       if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower)
             < ((sizeof(struct dsd_se_co1)
                    + sizeof(struct dsd_awcs_stream_bitmap_first)
                    + sizeof(void *) - 1)
                  & (0 - sizeof(void *)))) {  /* get new area          */
         memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
         bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                            DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                            &dsl_aux_get_workarea,
                                            sizeof(struct dsd_aux_get_workarea) );
         if (bol1 == FALSE) {               /* aux returned error      */
           adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
           goto p_cleanup_20;               /* do cleanup now          */
         }
         ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
         ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
       }
       ADSL_OA1->achc_upper
         = (char *) (((long long int) ADSL_OA1->achc_upper
                                        - (sizeof(struct dsd_se_co1)
                                             + sizeof(struct dsd_awcs_stream_bitmap_first)))
                      & (0 - sizeof(void *)));  /* align storage       */
#define ADSL_SE_CO1_G ((struct dsd_se_co1 *) ADSL_OA1->achc_upper)
#define ADSL_ASBF_G ((struct dsd_awcs_stream_bitmap_first *) (ADSL_SE_CO1_G + 1))
       memcpy( ADSL_ASBF_G, &D_ADSL_RCL1->dsc_asbf, sizeof(struct dsd_awcs_stream_bitmap_first) );
       ADSL_SE_CO1_G->iec_se_command = ied_sec_stream_bitmap_first;  /* command Stream Bitmap First */
       ADSL_SE_CO1_G->adsc_next = NULL;     /* clear chain field       */
       *ADSL_OA1->aadsc_se_co1_chain = ADSL_SE_CO1_G;  /* append to chain */
       ADSL_OA1->aadsc_se_co1_chain = &ADSL_SE_CO1_G->adsc_next;  /* set new end of chain */
       achl1 = (char *) &ADSL_ASBF_G->adsc_gai1_data;  /* input output data */
       /* pass data                                                    */
       iml1 = D_ADSL_RCL1->imc_prot_akku;   /* length of data          */
       while (TRUE) {
         if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower) < sizeof(struct dsd_gather_i_1)) {
           memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
           bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                              DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                              &dsl_aux_get_workarea,
                                              sizeof(struct dsd_aux_get_workarea) );
           if (bol1 == FALSE) {             /* aux returned error      */
             adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
             goto p_cleanup_20;             /* do cleanup now          */
           }
           ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
           ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
         }
         iml2 = adsl_gai1_inp_1->achc_ginp_end - adsl_gai1_inp_1->achc_ginp_cur;
         if (iml2 > 0) {                    /* data to pass            */
           ADSL_OA1->achc_upper -= sizeof(struct dsd_gather_i_1);
           if (iml2 > iml1) iml2 = iml1;
#define ADSL_GAI1_OUT_G ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)
           *((void **) achl1) = ADSL_GAI1_OUT_G;
           ADSL_GAI1_OUT_G->achc_ginp_cur = adsl_gai1_inp_1->achc_ginp_cur;
           ADSL_GAI1_OUT_G->achc_ginp_end = adsl_gai1_inp_1->achc_ginp_cur + iml2;
           adsl_gai1_inp_1->achc_ginp_cur += iml2;
           iml1 -= iml2;
           achl1 = (char *) &ADSL_GAI1_OUT_G->adsc_next;
           if (iml1 == 0) break;
#undef ADSL_GAI1_OUT_G ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)
         }
         adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next gather */
         if (adsl_gai1_inp_1 == NULL) {     /* end of input data       */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
         }
       }
       *((void **) achl1) = NULL;
       goto pfrse_end_order;                /* end of an order         */
#undef ADSL_SE_CO1_G
#undef ADSL_ASBF_G
     case ied_fsfp_as_sbn_bm_flags:         /* RDP order ALTSEC Stream Bitmap Next BitmapFlags */
           /* generated from macro M_CL_APPLY_SINGLE()                 */
           D_ADSL_RCL1->dsc_asbn.ucc_bitmap_flags = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
           D_ADSL_RCL1->imc_pos_inp_frame--;
           /* generated from macro M_CL_PREPARE_MULTI()                */
           D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - sizeof(D_ADSL_RCL1->dsc_asbn.usc_bitmap_type);  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_count_in < 0) {  /* longer that frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->dsc_asbn.usc_bitmap_type = 0;              /* clear field             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_sbn_bm_type;  /* RDP order ALTSEC Stream Bitmap Next BitmapType */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_as_sbn_bm_type:          /* RDP order ALTSEC Stream Bitmap Next BitmapType */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->dsc_asbn.usc_bitmap_type
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_count_in < 0) {  /* longer that frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
       D_ADSL_RCL1->imc_prot_akku = 0;      /* BitmapBlockSize         */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_sbn_block_size;  /* RDP order ALTSEC Stream Bitmap Next BitmapBlockSize */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_as_sbn_block_size:       /* RDP order ALTSEC Stream Bitmap Next BitmapBlockSize */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->imc_prot_akku
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if (D_ADSL_RCL1->imc_prot_akku <= 0) {  /* no data in frame     */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->imc_pos_inp_frame -= D_ADSL_RCL1->imc_prot_akku;  /* data in frame */
       if (D_ADSL_RCL1->imc_pos_inp_frame < 0) {  /* more than in frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_sbn_data;  /* RDP order ALTSEC Stream Bitmap Next data */
     case ied_fsfp_as_sbn_data:             /* RDP order ALTSEC Stream Bitmap Next data */
       /* check if all data of this bitmap part have been received     */
       iml1 = D_ADSL_RCL1->imc_prot_akku;   /* length of data          */
       adsl_gai1_inp_w2 = adsl_gai1_inp_1;  /* get gather              */
       while (TRUE) {                       /* loop over all gather structures input */
         iml1 -= adsl_gai1_inp_w2->achc_ginp_end - adsl_gai1_inp_w2->achc_ginp_cur;
         if (iml1 <= 0) break;              /* enough data found       */
         adsl_gai1_inp_w2 = adsl_gai1_inp_w2->adsc_next;  /* get next gather */
         if (adsl_gai1_inp_w2 == NULL) {    /* already end of chain    */
           m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d received from server ied_fsfp_as_sbn_data need more data %d.",
                         __LINE__, 23772,  /* line number for errors */
                         iml1 );            /* length of data needed   */
           /* wait for more data                                       */
           goto p_ret_00;                   /* check how to return     */
         }
       }
       if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower)
             < ((sizeof(struct dsd_se_co1)
                    + sizeof(struct dsd_awcs_stream_bitmap_next)
                    + sizeof(void *) - 1)
                  & (0 - sizeof(void *)))) {  /* get new area          */
         memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
         bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                            DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                            &dsl_aux_get_workarea,
                                            sizeof(struct dsd_aux_get_workarea) );
         if (bol1 == FALSE) {               /* aux returned error      */
           adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
           goto p_cleanup_20;               /* do cleanup now          */
         }
         ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
         ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
       }
       ADSL_OA1->achc_upper
         = (char *) (((long long int) ADSL_OA1->achc_upper
                                        - (sizeof(struct dsd_se_co1)
                                             + sizeof(struct dsd_awcs_stream_bitmap_next)))
                      & (0 - sizeof(void *)));  /* align storage       */
#define ADSL_SE_CO1_G ((struct dsd_se_co1 *) ADSL_OA1->achc_upper)
#define ADSL_ASBN_G ((struct dsd_awcs_stream_bitmap_next *) (ADSL_SE_CO1_G + 1))
       memcpy( ADSL_ASBN_G, &D_ADSL_RCL1->dsc_asbn, sizeof(struct dsd_awcs_stream_bitmap_next) );
       ADSL_SE_CO1_G->iec_se_command = ied_sec_stream_bitmap_next;  /* command Stream Bitmap Next */
       ADSL_SE_CO1_G->adsc_next = NULL;     /* clear chain field       */
       *ADSL_OA1->aadsc_se_co1_chain = ADSL_SE_CO1_G;  /* append to chain */
       ADSL_OA1->aadsc_se_co1_chain = &ADSL_SE_CO1_G->adsc_next;  /* set new end of chain */
       achl1 = (char *) &ADSL_ASBN_G->adsc_gai1_data;  /* input output data */
       /* pass data                                                    */
       iml1 = D_ADSL_RCL1->imc_prot_akku;   /* length of data          */
       while (TRUE) {
         if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower) < sizeof(struct dsd_gather_i_1)) {
           memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
           bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                              DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                              &dsl_aux_get_workarea,
                                              sizeof(struct dsd_aux_get_workarea) );
           if (bol1 == FALSE) {             /* aux returned error      */
             adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
             goto p_cleanup_20;             /* do cleanup now          */
           }
           ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
           ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
         }
         iml2 = adsl_gai1_inp_1->achc_ginp_end - adsl_gai1_inp_1->achc_ginp_cur;
         if (iml2 > 0) {                    /* data to pass            */
           ADSL_OA1->achc_upper -= sizeof(struct dsd_gather_i_1);
           if (iml2 > iml1) iml2 = iml1;
#define ADSL_GAI1_OUT_G ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)
           *((void **) achl1) = ADSL_GAI1_OUT_G;
           ADSL_GAI1_OUT_G->achc_ginp_cur = adsl_gai1_inp_1->achc_ginp_cur;
           ADSL_GAI1_OUT_G->achc_ginp_end = adsl_gai1_inp_1->achc_ginp_cur + iml2;
           adsl_gai1_inp_1->achc_ginp_cur += iml2;
           iml1 -= iml2;
           achl1 = (char *) &ADSL_GAI1_OUT_G->adsc_next;
           if (iml1 == 0) break;
#undef ADSL_GAI1_OUT_G ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)
         }
         adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next gather */
         if (adsl_gai1_inp_1 == NULL) {     /* end of input data       */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
         }
       }
       *((void **) achl1) = NULL;
       goto pfrse_end_order;                /* end of an order         */
#undef ADSL_SE_CO1_G
#undef ADSL_ASBN_G
     case ied_fsfp_as_cnb_bm_bpp:           /* RDP order ALTSEC Create NineGrid Bitmap BitmapBpp */
           /* generated from macro M_CL_APPLY_SINGLE()                 */
           D_ADSL_RCL1->dsc_acnb.ucc_bitmap_bpp = (unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++;
           D_ADSL_RCL1->imc_pos_inp_frame--;
           /* generated from macro M_CL_PREPARE_MULTI()                */
           D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - sizeof(D_ADSL_RCL1->dsc_acnb.usc_bitmap_id);  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_count_in < 0) {  /* longer that frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->dsc_acnb.usc_bitmap_id = 0;              /* clear field             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_cnb_bm_id;  /* RDP order ALTSEC Create NineGrid Bitmap BitmapId */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_as_cnb_bm_id:            /* RDP order ALTSEC Create NineGrid Bitmap BitmapId */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->dsc_acnb.usc_bitmap_id
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
           /* generated from macro M_CL_PREPARE_MULTI()                */
           D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - sizeof(D_ADSL_RCL1->dsc_acnb.usc_cx);  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_count_in < 0) {  /* longer that frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->dsc_acnb.usc_cx = 0;              /* clear field             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_cnb_cx;  /* RDP order ALTSEC Create NineGrid Bitmap cx */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_as_cnb_cx:               /* RDP order ALTSEC Create NineGrid Bitmap cx */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->dsc_acnb.usc_cx
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
           /* generated from macro M_CL_PREPARE_MULTI()                */
           D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - sizeof(D_ADSL_RCL1->dsc_acnb.usc_cy);  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_count_in < 0) {  /* longer that frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->dsc_acnb.usc_cy = 0;              /* clear field             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_cnb_cy;  /* RDP order ALTSEC Create NineGrid Bitmap cy */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_as_cnb_cy:               /* RDP order ALTSEC Create NineGrid Bitmap cy */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->dsc_acnb.usc_cy
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
           /* generated from macro M_CL_PREPARE_MULTI()                */
           D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - sizeof(D_ADSL_RCL1->dsc_acnb.umc_fl_flags);  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_count_in < 0) {  /* longer that frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->dsc_acnb.umc_fl_flags = 0;              /* clear field             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_cnb_fl_flags;  /* RDP order ALTSEC Create NineGrid Bitmap flFlags */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_as_cnb_fl_flags:         /* RDP order ALTSEC Create NineGrid Bitmap flFlags */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->dsc_acnb.umc_fl_flags
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
           /* generated from macro M_CL_PREPARE_MULTI()                */
           D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - sizeof(D_ADSL_RCL1->dsc_acnb.usc_left_width);  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_count_in < 0) {  /* longer that frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->dsc_acnb.usc_left_width = 0;              /* clear field             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_cnb_left_width;  /* RDP order ALTSEC Create NineGrid Bitmap ulLeftWidth */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_as_cnb_left_width:       /* RDP order ALTSEC Create NineGrid Bitmap ulLeftWidth */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->dsc_acnb.usc_left_width
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
           /* generated from macro M_CL_PREPARE_MULTI()                */
           D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - sizeof(D_ADSL_RCL1->dsc_acnb.usc_right_width);  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_count_in < 0) {  /* longer that frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->dsc_acnb.usc_right_width = 0;              /* clear field             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_cnb_right_width;  /* RDP order ALTSEC Create NineGrid Bitmap ulRightWidth */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_as_cnb_right_width:      /* RDP order ALTSEC Create NineGrid Bitmap ulRightWidth */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->dsc_acnb.usc_right_width
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
           /* generated from macro M_CL_PREPARE_MULTI()                */
           D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - sizeof(D_ADSL_RCL1->dsc_acnb.usc_top_height);  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_count_in < 0) {  /* longer that frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->dsc_acnb.usc_top_height = 0;              /* clear field             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_cnb_top_height;  /* RDP order ALTSEC Create NineGrid Bitmap ulTopHeight */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_as_cnb_top_height:       /* RDP order ALTSEC Create NineGrid Bitmap ulTopHeight */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->dsc_acnb.usc_top_height
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
           /* generated from macro M_CL_PREPARE_MULTI()                */
           D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - sizeof(D_ADSL_RCL1->dsc_acnb.usc_bottom_height);  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_count_in < 0) {  /* longer that frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->dsc_acnb.usc_bottom_height = 0;              /* clear field             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_cnb_bottom_height;  /* RDP order ALTSEC Create NineGrid Bitmap ulBottomHeight */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_as_cnb_bottom_height:    /* RDP order ALTSEC Create NineGrid Bitmap ulBottomHeight */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->dsc_acnb.usc_bottom_height
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
           /* generated from macro M_CL_PREPARE_MULTI()                */
           D_ADSL_RCL1->imc_prot_count_in = D_ADSL_RCL1->imc_pos_inp_frame - sizeof(D_ADSL_RCL1->dsc_acnb.umc_cr_transparent);  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_count_in < 0) {  /* longer that frame */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->imc_prot_aux1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
           D_ADSL_RCL1->dsc_acnb.umc_cr_transparent = 0;              /* clear field             */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_as_cnb_cr_transparent;  /* RDP order ALTSEC Create NineGrid Bitmap crTransparent */
       goto pfrse20;                        /* process next data       */
     case ied_fsfp_as_cnb_cr_transparent:   /* RDP order ALTSEC Create NineGrid Bitmap crTransparent */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->dsc_acnb.umc_cr_transparent
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower)
             < ((sizeof(struct dsd_se_co1)
                    + sizeof(struct dsd_awcs_create_ninegrid_bitmap)
                    + sizeof(void *) - 1)
                  & (0 - sizeof(void *)))) {  /* get new area          */
         memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
         bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                            DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                            &dsl_aux_get_workarea,
                                            sizeof(struct dsd_aux_get_workarea) );
         if (bol1 == FALSE) {               /* aux returned error      */
           adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
           goto p_cleanup_20;               /* do cleanup now          */
         }
         ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
         ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
       }
       ADSL_OA1->achc_upper
         = (char *) (((long long int) ADSL_OA1->achc_upper
                                        - (sizeof(struct dsd_se_co1)
                                             + sizeof(struct dsd_awcs_create_ninegrid_bitmap)))
                      & (0 - sizeof(void *)));  /* align storage           */
#define ADSL_SE_CO1_G ((struct dsd_se_co1 *) ADSL_OA1->achc_upper)
#define ADSL_ACNB_G ((struct dsd_awcs_create_ninegrid_bitmap *) (ADSL_SE_CO1_G + 1))
       memcpy( ADSL_ACNB_G, &D_ADSL_RCL1->dsc_acnb, sizeof(struct dsd_awcs_create_ninegrid_bitmap) );
       ADSL_SE_CO1_G->iec_se_command = ied_sec_create_ninegrid_bitmap;  /* command Create NineGrid Bitmap */
       ADSL_SE_CO1_G->adsc_next = NULL;     /* clear chain field       */
       *ADSL_OA1->aadsc_se_co1_chain = ADSL_SE_CO1_G;  /* append to chain */
       ADSL_OA1->aadsc_se_co1_chain = &ADSL_SE_CO1_G->adsc_next;  /* set new end of chain */
       goto pfrse_end_order;                /* end of an order         */
#undef ADSL_SE_CO1_G
#undef ADSL_ACNB_G
     case ied_fsfp_as_frm_action:           /* RDP order ALTSEC frame marker action */
       /* generated from macro M_APPLY_LE()                            */
       while (TRUE) {
         D_ADSL_RCL1->dsc_afrm.umc_action
           |= ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur++)
                << ((D_ADSL_RCL1->imc_prot_3 - D_ADSL_RCL1->imc_pos_inp_frame)
                      << 3);
         D_ADSL_RCL1->imc_pos_inp_frame--;
         if (D_ADSL_RCL1->imc_pos_inp_frame == D_ADSL_RCL1->imc_prot_2) break;
         if (adsl_gai1_inp_1->achc_ginp_cur
               >= adsl_gai1_inp_1->achc_ginp_end) {
           goto pfrse20;                    /* needs more data         */
         }
       }
       if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower)
             < ((sizeof(struct dsd_se_co1)
                    + sizeof(struct dsd_awcs_frame_marker)
                    + sizeof(void *) - 1)
                  & (0 - sizeof(void *)))) {  /* get new area          */
         memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
         bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                            DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                            &dsl_aux_get_workarea,
                                            sizeof(struct dsd_aux_get_workarea) );
         if (bol1 == FALSE) {               /* aux returned error      */
           adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
           goto p_cleanup_20;               /* do cleanup now          */
         }
         ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
         ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
       }
       ADSL_OA1->achc_upper
         = (char *) (((long long int) ADSL_OA1->achc_upper
                                        - (sizeof(struct dsd_se_co1)
                                             + sizeof(struct dsd_awcs_frame_marker)))
                      & (0 - sizeof(void *)));  /* align storage           */
#define ADSL_SE_CO1_G ((struct dsd_se_co1 *) ADSL_OA1->achc_upper)
#define ADSL_AFRM_G ((struct dsd_awcs_frame_marker *) (ADSL_SE_CO1_G + 1))
       memcpy( ADSL_AFRM_G, &D_ADSL_RCL1->dsc_afrm, sizeof(struct dsd_awcs_frame_marker) );
       ADSL_SE_CO1_G->iec_se_command = ied_sec_frame_marker;  /* command Frame Marker */
       ADSL_SE_CO1_G->adsc_next = NULL;     /* clear chain field       */
       *ADSL_OA1->aadsc_se_co1_chain = ADSL_SE_CO1_G;  /* append to chain */
       ADSL_OA1->aadsc_se_co1_chain = &ADSL_SE_CO1_G->adsc_next;  /* set new end of chain */
       goto pfrse_end_order;                /* end of an order         */
#undef ADSL_SE_CO1_G
#undef ADSL_AFRM_G
     case ied_fsfp_send_from_server:        /* send data to client     */
       goto pfrse40;                        /* send RDP4 to client     */
     case ied_fsfp_end_com:                 /* end of communication    */
       if ((unsigned char) *adsl_gai1_inp_1->achc_ginp_cur != (unsigned char) 0X80) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       adsl_gai1_inp_1->achc_ginp_cur++;    /* next byte input         */
       D_ADSL_RCL1->imc_pos_inp_frame--;    /* length constant         */
       if (D_ADSL_RCL1->imc_pos_inp_frame != 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       break;
     case ied_fsfp_no_session:              /* no more session         */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
   }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;


   pfrse_bitmap_s_20:                       /* bitmap has been processed */
// to-do 09.07.12 KB - not only for short, for 16, 24 and 32 bit
   m_sdh_printf( adsp_hl_clib_1, "pfrse_bitmap_s_20 l%05d s%05d isrc_bitmap_data:",
                 __LINE__, 24098 );
   m_sdh_console_out( adsp_hl_clib_1, (char *) D_ADSL_RCL1->isrc_bitmap_data, sizeof(D_ADSL_RCL1->isrc_bitmap_data) );
   D_ADSL_RCL1->isrc_bitmap_data[ 1 ]--;    /* number of bitmaps       */
   if (D_ADSL_RCL1->isrc_bitmap_data[ 1 ]) {  /* more bitmaps follow   */
     D_ADSL_RCL1->imc_prot_6 = 2;           /* read next second short  */
     D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
     if (D_ADSL_RCL1->imc_prot_2 < D_ADSL_RCL1->imc_prot_4) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
     }
     D_ADSL_RCL1->imc_prot_1 = 0;           /* clear akkumulator       */
     D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_bitmap_header;  /* bitmap header */
     goto pfrse20;                          /* process next data       */
   }
   if (D_ADSL_RCL1->imc_pos_inp_frame != D_ADSL_RCL1->imc_prot_4) {  /* not end of PDU data */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
   }
   D_ADSL_RCL1->iec_frse_bl = ied_frse_any_pdu_rec;  /* ????ive block active PDU */
   if (D_ADSL_RCL1->imc_pos_inp_frame == 0) {  /* at end of block      */
     D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_rec_type;  /* receive record type */
     goto pfrse20;                          /* process next data       */
   }
   D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
   if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
   }
   D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_typ;  /* RDP 5 PDU type  */
   goto pfrse20;                            /* process next data       */

   pfrse_po_bounds:                         /* after bounds parameters */
   m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d pfrse_po_bounds inp_cur=%p int=%d pdu_ord_prim=%d/0X%X.",
                 __LINE__, 24161,  /* line number for errors  */
           adsl_gai1_inp_1->achc_ginp_cur,
           D_ADSL_RCL1->imc_prot_1,
           D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim,
           D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim );
   switch (D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim) {
     case 0:                                /* 0 / 0X00                */
       /* generated from macro M_CO_O00_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_left;  /* RDP 5 order 0 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_left;  /* RDP 5 order 0 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_top;  /* RDP 5 order 0 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_top;  /* RDP 5 order 0 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_width;  /* RDP 5 order 0 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_width;  /* RDP 5 order 0 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_delta_height;  /* RDP 5 order 0 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_abs_height;  /* RDP 5 order 0 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o00.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o00_rop3;  /* RDP 5 order 0 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case 1:                                /* 1 / 0X01                */
       /* generated from macro M_CO_O01_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_left;  /* RDP 5 order 1 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_left;  /* RDP 5 order 1 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_top;  /* RDP 5 order 1 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_top;  /* RDP 5 order 1 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_width;  /* RDP 5 order 1 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_width;  /* RDP 5 order 1 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_delta_height;  /* RDP 5 order 1 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_abs_height;  /* RDP 5 order 1 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o01.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_rop3;  /* RDP 5 order 1 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_backgr;  /* RDP 5 order 1 background colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_backcolor = 0;  /* clear Order 1 background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_col_foregr;  /* RDP 5 order 1 foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o01.umc_forecolor = 0;  /* clear Order 1 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_x;  /* RDP 5 order 1 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_y;  /* RDP 5 order 1 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_style;  /* RDP 5 order 1 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o01_brush_hatch;  /* RDP 5 order 1 brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2
           = D_ADSL_RCL1->imc_pos_inp_frame
               - sizeof(D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra);  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o01.dsc_brush.chrc_brushextra;  /* Order 1 brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o01_brush_data;  /* RDP 5 order 1 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case 2:                                /* 2 / 0X02                */
       /* generated from macro M_CO_O02_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_left;  /* RDP 5 order 2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_left;  /* RDP 5 order 2 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_top;  /* RDP 5 order 2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_top;  /* RDP 5 order 2 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_width;  /* RDP 5 order 2 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_width;  /* RDP 5 order 2 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_height;  /* RDP 5 order 2 delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_height;  /* RDP 5 order 2 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o02.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_rop3;  /* RDP 5 order 2 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_x;  /* RDP 5 order 2 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_x;  /* RDP 5 order 2 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_delta_source_y;  /* RDP 5 order 2 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o02.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o02_abs_source_y;  /* RDP 5 order 2 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case 7:                                /* 7 / 0X07                */
       /* generated from macro M_CO_O07_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_left;  /* RDP 5 order 7/0X07 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_left;  /* RDP 5 order 7/0X07 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_top;  /* RDP 5 order 7/0X07 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_top;  /* RDP 5 order 7/0X07 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_right;  /* RDP 5 order 7/0X07 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_right;  /* RDP 5 order 7/0X07 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_delta_bottom;  /* RDP 5 order 7/0X07 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_abs_bottom;  /* RDP 5 order 7/0X07 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o07.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o07_bitmapid;  /* RDP 5 order 7/0X07 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o07.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case 8:                                /* 8 / 0X08                */
       /* generated from macro M_CO_O08_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_left;  /* RDP 5 order 8/0X08 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_left;  /* RDP 5 order 8/0X08 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_top;  /* RDP 5 order 8/0X08 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_top;  /* RDP 5 order 8/0X08 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_right;  /* RDP 5 order 8/0X08 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_right;  /* RDP 5 order 8/0X08 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_delta_bottom;  /* RDP 5 order 8/0X08 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_abs_bottom;  /* RDP 5 order 8/0X08 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o08.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_bitmapid;  /* RDP 5 order 8/0X08 bitmapId */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_bitmap_id = 0;  /* clear offscreen BitmapId */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o08.usc_len_delta_entries = 0;  /* length of points CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o08_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case 9:                                /* 9 / 0X09                */
       /* generated from macro M_CO_O09_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_backmode;  /* RDP 5 order 9 backmode */
         D_ADSL_RCO1->dsc_ord_co_o09.usc_backmode = 0;  /* clear RDP 5 order 9 backmode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nxstart;  /* RDP 5 order 9 delta nXStart */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nxstart;  /* RDP 5 order 9 absolute nXStart */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nxstart = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nystart;  /* RDP 5 order 9 delta nYStart */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nystart;  /* RDP 5 order 9 absolute nYStart */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nystart = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nxend;  /* RDP 5 order 9 delta nXEnd */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nxend;  /* RDP 5 order 9 absolute nXEnd */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nxend = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_delta_nyend;  /* RDP 5 order 9 delta nYEnd */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_abs_nyend;  /* RDP 5 order 9 absolute nYEnd */
         D_ADSL_RCO1->dsc_ord_co_o09.isc_nyend = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_backcolor;  /* RDP 5 order 9 BackColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_back_color = 0;  /* clear Order 9 BackColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_brop2;  /* RDP 5 order 9 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penstyle;  /* RDP 5 order 9 PenStyle */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_penwidth;  /* RDP 5 order 9 PenWidth */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o09_pencolor;  /* RDP 5 order 9 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o09.umc_pencolor = 0;  /* clear Order 9 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case 0X0A:                             /* 10 / 0X0A               */
       /* generated from macro M_CO_O0A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_left;  /* RDP 5 order 10/0AH delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_left;  /* RDP 5 order 10/0AH absolute left */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_top;  /* RDP 5 order 10/0AH delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_top;  /* RDP 5 order 10/0AH absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_width;  /* RDP 5 order 10/0AH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_width;  /* RDP 5 order 10/0AH absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_delta_height;  /* RDP 5 order 10/0AH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_abs_height;  /* RDP 5 order 10/0AH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0a.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       iml1 = imrs_colour_tab[ (D_ADSL_RCL1->imc_prot_prfl & 0X70) >> 4 ];
       if (iml1) {                          /* colour specified        */
         if (iml1 < 0) {                    /* value not valid         */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - iml1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         /* get colour big endian                                        */
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
//       D_ADSL_RCL1->imc_prot_6 = 0;
         D_ADSL_RCO1->dsc_ord_co_o0a.umc_color = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0a_colour;  /* RDP 5 order 10/0AH colour */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case 0X0B:                             /* 11 / 0X0B               */
       /* generated from macro M_CO_O0B_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 4;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0b.umc_savedbitmappos = 0;  /* clear Order 11/0BH SaveOffset */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_saveoffset;  /* RDP 5 order 11/0BH SaveOffset */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_left;  /* RDP 5 order 11 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_left;  /* RDP 5 order 11 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_top;  /* RDP 5 order 11 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_top;  /* RDP 5 order 11 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_right;  /* RDP 5 order 11 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_right;  /* RDP 5 order 11 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_delta_bottom;  /* RDP 5 order 11 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_abs_bottom;  /* RDP 5 order 11 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o0b.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0b_oper;  /* RDP 5 order 11/0BH operation */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case 0X0D:                             /* 13 / 0X0D               */
       /* generated from macro M_CO_O0D_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_cache_id;  /* RDP 5 order 13/0DH cacheId */
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cache_id = 0;  /* clear cacheId */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_left;  /* RDP 5 order 13 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_left;  /* RDP 5 order 13 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_top;  /* RDP 5 order 13 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_top;  /* RDP 5 order 13 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_width;  /* RDP 5 order 13/0DH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_width;  /* RDP 5 order 13/0DH absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_height;  /* RDP 5 order 13/0DH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_height;  /* RDP 5 order 13/0DH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0d.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_rop3;  /* RDP 5 order 13 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_x;  /* RDP 5 order 13 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_x;  /* RDP 5 order 13 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_delta_source_y;  /* RDP 5 order 13 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0d.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_abs_source_y;  /* RDP 5 order 13 abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0d_bitmapcind;  /* RDP 5 order 13 BitmapCacheIndex */
//       D_ADSL_RCL1->dsrc_ord_co_1[ D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim ].inc_cache_ind = 0;
         D_ADSL_RCO1->dsc_ord_co_o0d.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
//     D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_order_0d_00;           /* apply the order 13 / 0DH */
     case 0X0E:                             /* 14 / 0X0E               */
       /* generated from macro M_CO_O0E_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_cache_id;  /* RDP 5 order 14/0EH cacheId */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cache_id = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_left;  /* RDP 5 order 14 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_left;  /* RDP 5 order 14 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_top;  /* RDP 5 order 14 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_top;  /* RDP 5 order 14 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_width;  /* RDP 5 order 14/0EH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_width;  /* RDP 5 order 14 absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_height;  /* RDP 5 order 14/0EH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_height;  /* RDP 5 order 14 absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0e.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_rop3;  /* RDP 5 order 14 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_x;  /* RDP 5 order 14 delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_x;  /* RDP 5 order 14 abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_delta_source_y;  /* RDP 5 order 14 delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0e.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_abs_source_y;  /* RDP 5 order 14/0EH abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_backgr;  /* RDP 5 order 14/0EH background colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_backcolor = 0;  /* clear Order 14/0EH background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_col_foregr;  /* RDP 5 order 14/0EH foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o0e.umc_forecolor = 0;  /* clear Order 14/0EH foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_x;  /* RDP 5 order 14 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_y;  /* RDP 5 order 14 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_style;  /* RDP 5 order 14 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_brush_hatch;  /* RDP 5 order 14/0EH brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o0e.dsc_brush.chrc_brushextra;  /* Order 14/0EH brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o0e_brush_data;  /* RDP 5 order 14 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data     */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0e_bitmapcind;  /* RDP 5 order 14 BitmapCacheIndex */
         D_ADSL_RCO1->dsc_ord_co_o0e.usc_cacheindex = 0;
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case 0X0F:                             /* 15 / 0X0F               */
       /* generated from macro M_CO_O0F_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_left;  /* RDP 5 order 15/0FH delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_left;  /* RDP 5 order 15/0FH absolute left */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_top;  /* RDP 5 order 15/0FH delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_top;  /* RDP 5 order 15/0FH absolute top */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_width;  /* RDP 5 order 15/0FH delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_width;  /* RDP 5 order 15/0FH absolute width */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_delta_height;  /* RDP 5 order 15/0FH delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_abs_height;  /* RDP 5 order 15/0FH absolute height */
         D_ADSL_RCO1->dsc_ord_co_o0f.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_rop3;  /* RDP 5 order 15 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o0f.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o0f_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case 0X10:                             /* 16 / 0X10               */
       /* generated from macro M_CO_O10_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_left;  /* RDP 5 order 16/10H delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_left;  /* RDP 5 order 16/10H absolute left */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_top;  /* RDP 5 order 16/10H delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_top;  /* RDP 5 order 16/10H absolute top */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_width;  /* RDP 5 order 16/10H delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_width;  /* RDP 5 order 16/10H absolute width */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_delta_height;  /* RDP 5 order 16/10H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_abs_height;  /* RDP 5 order 16/10H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o10.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_rop3;  /* RDP 5 order 16 ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_backgr;  /* RDP 5 order 16/10H background colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_backcolor = 0;  /* clear Order 16/10H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_col_foregr;  /* RDP 5 order 16/10H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o10.umc_forecolor = 0;  /* clear Order 16/10H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_x;  /* RDP 5 order 16 brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_y;  /* RDP 5 order 16 brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_style;  /* RDP 5 order 16 brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_brush_hatch;  /* RDP 5 order 16/10H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o10.dsc_brush.chrc_brushextra;  /* Order 16/10H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o10_brush_data;  /* RDP 5 order 16 brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o10_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case 0X11:                             /* 17 / 0X11               */
       /* generated from macro M_CO_O11_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_left;  /* RDP 5 order 17/11H delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_left;  /* RDP 5 order 17/11H absolute left */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_top;  /* RDP 5 order 17/11H delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_top;  /* RDP 5 order 17/11H absolute top */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_width;  /* RDP 5 order 17/11H delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_width;  /* RDP 5 order 17/11H absolute width */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_height;  /* RDP 5 order 17/11H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_height;  /* RDP 5 order 17/11H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o11.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_rop3;  /* RDP 5 order 17/11H ROP3 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_x;  /* RDP 5 order 17/11H delta source X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_x_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_x;  /* RDP 5 order 17/11H abs source X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_delta_source_y;  /* RDP 5 order 17/11H delta source Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.isc_y_src = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_abs_source_y;  /* RDP 5 order 17/11H abs source Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta = 0;  /* length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o11_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case 0X12:                             /* 18 / 0X12               */
       /* generated from macro M_CO_O12_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_left;  /* RDP 5 order 18/12H delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_left;  /* RDP 5 order 18/12H absolute left */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_top;  /* RDP 5 order 18/12H delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_top;  /* RDP 5 order 18/12H absolute top */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_width;  /* RDP 5 order 0 delta width */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_width;  /* RDP 5 order 18/12H absolute width */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_width = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_delta_height;  /* RDP 5 order 18/12H delta height */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_abs_height;  /* RDP 5 order 18/12H absolute height */
         D_ADSL_RCO1->dsc_ord_co_o12.dsc_rect.isc_height = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_red;  /* RDP 5 order 18/12H RedOrPaletteIndex */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_green;  /* RDP 5 order 18/12H Green */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_color_blue;  /* RDP 5 order 18/12H Blue */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o12.usc_len_delta = 0;  /* clear length CodedDeltaList */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o12_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case 0X13:                             /* 19 / 0X13               */
       /* generated from macro M_CO_O13_FIELDS()                       */
       /* TS_ENC_FAST_INDEX_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_cache_id;  /* RDP 5 order 19 cache Id */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
//       D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
//       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_deltas;  /* RDP 5 order 19 deltas */
//       D_ADSL_RCL1->usc_o13_deltas = 0;   /* clear Order 19 deltas   */
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_fdrawing;  /* RDP 5 order 19/13H fDrawing */
         D_ADSL_RCO1->dsc_ord_co_o13.usc_fdrawing = 0;  /* clear Order 19/13H fDrawing */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_col_backgr;  /* RDP 5 order 19 background colour */
         D_ADSL_RCO1->dsc_ord_co_o13.umc_backcolor = 0;  /* clear Order 19/13H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_col_foregr;  /* RDP 5 order 19 foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o13.umc_forecolor = 0;  /* clear Order 19/13H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_left;  /* RDP 5 order 19 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_left = 0;  /* clear Order 19/13H background left */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_left;  /* RDP 5 order 19 absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_top;  /* RDP 5 order 19 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_top = 0;  /* clear Order 19/13H background top */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_top;  /* RDP 5 order 19 absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_right;  /* RDP 5 order 19 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_right = 0;  /* clear Order 19/13H background right */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_right;  /* RDP 5 order 19 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_bottom;  /* RDP 5 order 19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_backrect.isc_bottom = 0;  /* clear Order 19/13H background bottom */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_bottom;  /* RDP 5 order 19 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_left;  /* RDP 5 order 19 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_left;  /* RDP 5 order 19 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_left = 0;  /* clear Order 19/13H opaque left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_top;  /* RDP 5 order 19 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_top;  /* RDP 5 order 19 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_top = 0;  /* clear Order 19/13H opaque top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_right;  /* RDP 5 order 19 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_right;  /* RDP 5 order 19 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_right = 0;  /* clear Order 19/13H opaque right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           if (D_ADSL_RCL1->imc_pos_inp_frame <=0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_delta_bottom;  /* RDP 5 order 19 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_r2_abs_bottom;  /* RDP 5 order 19 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o13.dsc_opaqrect.isc_bottom = 0;  /* clear Order 19/13H opaque bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_x;  /* RDP 5 order 19 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_x;  /* RDP 5 order 19 start X */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_x = 0;  /* clear Order 19/13H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_delta_start_y;  /* RDP 5 order 19 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_abs_start_y;  /* RDP 5 order 19 start Y */
         D_ADSL_RCO1->dsc_ord_co_o13.isc_start_y = 0;  /* clear Order 19/13H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o13_len_glyph;  /* RDP 5 order 19 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
//     *M_ERROR_FRSE_PROT;                  /* protocol error          */
// to-do 25.11.12 KB - is instruction necessary ???
       D_ADSL_RCL1->imc_prot_1 = 0;
       goto pfrse_po_apply_order;           /* apply the order         */
     case 0X14:                             /* 20 / 0X14               */
       /* generated from macro M_CO_O14_FIELDS()                       */
       /* PolygonSC (POLYGON_SC_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_delta_start_x;  /* RDP 5 order 20/14H delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_abs_start_x;  /* RDP 5 order 20/14H start X */
         D_ADSL_RCO1->dsc_ord_co_o14.isc_start_x = 0;  /* clear Order 20/14H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_delta_start_y;  /* RDP 5 order 20/14H delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_abs_start_y;  /* RDP 5 order 20/14H start Y */
         D_ADSL_RCO1->dsc_ord_co_o14.isc_start_y = 0;  /* clear Order 20/14H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_brop2;  /* RDP 5 order 20/14H bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_fillmode;  /* RDP 5 order 20/14H FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_brushcolor;  /* RDP 5 order 20/14H BrushColor */
         D_ADSL_RCO1->dsc_ord_co_o14.umc_brushcolor = 0;  /* clear Order 20/14H BrushColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o14_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case 0X15:                             /* 21 / 0X15               */
       /* generated from macro M_CO_O15_FIELDS()                       */
       /* PolygonCB (POLYGON_CB_ORDER)                                 */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_delta_start_x;  /* RDP 5 order 21/15H delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_abs_start_x;  /* RDP 5 order 21/15H start X */
         D_ADSL_RCO1->dsc_ord_co_o15.isc_start_x = 0;  /* clear Order 20/14H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_delta_start_y;  /* RDP 5 order 21/15H delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_abs_start_y;  /* RDP 5 order 21/15H start Y */
         D_ADSL_RCO1->dsc_ord_co_o15.isc_start_y = 0;  /* clear Order 21/15H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brop2;  /* RDP 5 order 21/15H bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_fillmode;  /* RDP 5 order 21/15H FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_col_backgr;  /* RDP 5 order 21/15H background colour */
         D_ADSL_RCO1->dsc_ord_co_o15.umc_backcolor = 0;  /* clear Order 21/15H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_col_foregr;  /* RDP 5 order 21/15H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o15.umc_forecolor = 0;  /* clear Order 21/15H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_x;  /* RDP 5 order 21/15H brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_y;  /* RDP 5 order 21/15H brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_style;  /* RDP 5 order 21/15H brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_brush_hatch;  /* RDP 5 order 21/15H brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 21/15H brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o15_brush_data;  /* RDP 5 order 21/15H brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_no_delta_entries;  /* nDeltaEntries - number of delta entries */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o15_len_delta;  /* length CodedDeltaList */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case 0X16:                             /* 22 / 0X16               */
       /* generated from macro M_CO_O16_FIELDS()                       */
       /* TS_ENC_POLYLINE_ORDER                                        */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_delta_start_x;  /* RDP 5 order 22/0X16 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_abs_start_x;  /* RDP 5 order 22/0X16 start X */
         D_ADSL_RCO1->dsc_ord_co_o16.isc_start_x = 0;  /* clear Order 22/0X16 start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_delta_start_y;  /* RDP 5 order 22/0X16 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_abs_start_y;  /* RDP 5 order 22/0X16 start Y */
         D_ADSL_RCO1->dsc_ord_co_o16.isc_start_y = 0;  /* clear Order 22/0X16 start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_brop2;  /* RDP 5 order 22/0X16 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_brushcacheentry;  /* RDP 5 order 22/0X16 BrushCacheEntry */
         D_ADSL_RCO1->dsc_ord_co_o16.usc_brush_cache_entry = 0;  /* clear Order 22/0X16 brush cache entry */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_pencolor;  /* RDP 5 order 22/0X16 PenColor */
         D_ADSL_RCO1->dsc_ord_co_o16.umc_pencolor = 0;  /* clear Order 22/0X16 PenColor */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_num_delta_entries;  /* RDP 5 order 22/0X16 number of points along the polyline path */
         goto pfrse20;                      /* needs more data         */
       }
       D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
       if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
       }
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o16_len_delta_entries;  /* RDP 5 order 22/0X16 length of points along the polyline path */
       goto pfrse20;                      /* needs more data         */
     case 0X18:                             /* 24 / 0X18               */
       /* generated from macro M_CO_O18_FIELDS()                       */
       /* TS_ENC_FAST_GLYPH_ORDER                                      */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_cache_id;  /* RDP 5 order 24 cache Id */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_fdrawing;  /* RDP 5 order 24/18H fDrawing */
         D_ADSL_RCO1->dsc_ord_co_o18.usc_fdrawing = 0;  /* clear Order 24/18H fDrawing */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_col_backgr;  /* RDP 5 order 24 background colour */
         D_ADSL_RCO1->dsc_ord_co_o18.umc_backcolor = 0;  /* clear Order 24/18H background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_col_foregr;  /* RDP 5 order 24/18H foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o18.umc_forecolor = 0;  /* clear Order 24/18H foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_left;  /* RDP 5 order 24 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_left = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_left;  /* RDP 5 order 24 absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_top;  /* RDP 5 order 24 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_top;  /* RDP 5 order 24 absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_right;  /* RDP 5 order 24 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_right;  /* RDP 5 order 24 absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_bottom;  /* RDP 5 order 24 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_bottom;  /* RDP 5 order 24 absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_left;  /* RDP 5 order 24 rect2 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_left;  /* RDP 5 order 24 rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_top;  /* RDP 5 order 24 rect2 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_top;  /* RDP 5 order 24 rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_right;  /* RDP 5 order 24 rect2 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_right;  /* RDP 5 order 24 rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_delta_bottom;  /* RDP 5 order 24 rect2 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_r2_abs_bottom;  /* RDP 5 order 24 rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o18.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_x;  /* RDP 5 order 24 delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_x;  /* RDP 5 order 24 start X */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_delta_start_y;  /* RDP 5 order 24 delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o18.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o18_len_glyph;  /* RDP 5 order 24 length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case 0X19:                             /* 25 / 0X19               */
       /* generated from macro M_CO_O19_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_left;  /* RDP 5 order 25/0X19 delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_left;  /* RDP 5 order 25/0X19 absolute left */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_top;  /* RDP 5 order 25/0X19 delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_top;  /* RDP 5 order 25/0X19 absolute top */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_right;  /* RDP 5 order 25/0X19 delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_right;  /* RDP 5 order 25/0X19 absolute right */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_delta_bottom;  /* RDP 5 order 25/0X19 delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_abs_bottom;  /* RDP 5 order 25/0X19 absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o19.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_brop2;  /* RDP 5 order 25/0X19 bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_fillmode;  /* RDP 5 order 25/0X19 FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o19_color;  /* RDP 5 order 25/0X19 foreground color */
         D_ADSL_RCO1->dsc_ord_co_o19.umc_color = 0;  /* clear Order 25/0X19 foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case 0X1A:                             /* 26 / 0X1A               */
       /* generated from macro M_CO_O1A_FIELDS()                       */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_left;  /* RDP 5 order 26/0X1A delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_left;  /* RDP 5 order 26/0X1A absolute left */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_top;  /* RDP 5 order 26/0X1A delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_top;  /* RDP 5 order 26/0X1A absolute top */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_right;  /* RDP 5 order 26/0X1A delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_right;  /* RDP 5 order 26/0X1A absolute right */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_delta_bottom;  /* RDP 5 order 26/0X1A delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_abs_bottom;  /* RDP 5 order 26/0X1A absolute bottom */
         D_ADSL_RCO1->dsc_ord_co_o1a.dsc_rect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brop2;  /* RDP 5 order 26/0X1A bRop2 */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_fillmode;  /* RDP 5 order 26/0X1A FillMode */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_backgr;  /* RDP 5 order 26/0X1A background colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_backcolor = 0;  /* clear Order 26/0X1A background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_col_foregr;  /* RDP 5 order 26/0X1A foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1a.umc_forecolor = 0;  /* clear Order 26/0X1A foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_y;  /* RDP 5 order 26/0X1A brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_style;  /* RDP 5 order 26/0X1A brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1a_brush_hatch;  /* RDP 5 order 26/0X1A brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o15.dsc_brush.chrc_brushextra;  /* Order 26/0X1A brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1a_brush_data;  /* RDP 5 order 26/0X1A brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
     case 0X1B:                             /* 27 / 0X1B               */
       /* generated from macro M_CO_O1B_FIELDS()                       */
       /* GlyphIndex (GLYPHINDEX_ORDER)                                */
       if (D_ADSL_RCL1->imc_prot_prfl & 0X01) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_cache_id;  /* RDP 5 order 27/0X1B cache Id */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X02) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_flaccel;  /* RDP 5 order 27/0X1B flAccel */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X04) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_ulcharinc;  /* RDP 5 order 27/0X1B ulCharInc */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X08) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_fopredundant;  /* RDP 5 order 27/0X1B fOpRedundant */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X10) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_col_backgr;  /* RDP 5 order 27/0X1B background colour */
         D_ADSL_RCO1->dsc_ord_co_o1b.umc_backcolor = 0;  /* clear Order 27/0X1B background color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X20) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 3;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_col_foregr;  /* RDP 5 order 27/0X1B foreground colour */
         D_ADSL_RCO1->dsc_ord_co_o1b.umc_forecolor = 0;  /* clear Order 27/0X1B foreground color */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X40) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_left;  /* RDP 5 order 27/0X1B delta left */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_left = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_left;  /* RDP 5 order 27/0X1B absolute left */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X80) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_top;  /* RDP 5 order 27/0X1B delta top */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_top = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_top;  /* RDP 5 order 27/0X1B absolute top */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0100) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_right;  /* RDP 5 order 27/0X1B delta right */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_right = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_right;  /* RDP 5 order 27/0X1B absolute right */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0200) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_bottom;  /* RDP 5 order 27/0X1B delta bottom */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_backrect.isc_bottom = 0;
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_bottom;  /* RDP 5 order 27/0X1B absolute bottom */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0400) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_left;  /* RDP 5 order 27/0X1B rect2 left */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_left = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X0800) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_top;  /* RDP 5 order 27/0X1B rect2 top */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_top = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X1000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_right;  /* RDP 5 order 27/0X1B rect2 right */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_right = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X2000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
/* 10.06.05 KB */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_r2_bottom;  /* RDP 5 order 27/0X1B rect2 bottom */
         D_ADSL_RCO1->dsc_ord_co_o1b.dsc_opaqrect.isc_bottom = 0;
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X4000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_x;  /* RDP 5 order 26/0X1A brush X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X8000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_y;  /* RDP 5 order 27/0X1B brush Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X010000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_style;  /* RDP 5 order 27/0X1B brush style */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X020000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_brush_hatch;  /* RDP 5 order 27/0X1B brush hatch */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X040000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - DEF_CONST_O0E_BRUSH_LEN;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->achc_prot_1 = D_ADSL_RCO1->dsc_ord_co_o1b.dsc_brush.chrc_brushextra;  /* Order 27/0X1B brush data */
         D_ADSL_RCL1->iec_frse_bl = ied_frse_r5_o1b_brush_data;  /* RDP 5 order 27/0X1B brush data */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_copy;  /* copy data       */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X080000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_x;  /* RDP 5 order 27/0X1B delta start X */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_x;  /* RDP 5 order 27/0X1B start X */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_x = 0;  /* clear Order 24/18H start X */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X100000) {
         if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & 0X10) {  /* delta coordinates */
           D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
           if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
           }
           D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_delta_start_y;  /* RDP 5 order 27/0X1B delta start Y */
           goto pfrse20;                    /* needs more data         */
         }
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 2;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->imc_prot_3 = D_ADSL_RCL1->imc_pos_inp_frame;  /* here first byte */
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_abs_start_y;  /* RDP 5 order 24 start Y */
         D_ADSL_RCO1->dsc_ord_co_o1b.isc_start_y = 0;  /* clear Order 24/18H start Y */
         goto pfrse20;                      /* needs more data         */
       }
       if (D_ADSL_RCL1->imc_prot_prfl & 0X200000) {
         D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
         if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
         }
         D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_o1b_len_glyph;  /* RDP 5 order 27/0X1B length glyph */
         goto pfrse20;                      /* needs more data         */
       }
       goto pfrse_po_apply_order;           /* apply the order         */
   }
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
   pfrse_po_order_0d_00:                    /* apply the order 13 / 0DH */
   iml1 = 0;                                /* clear with bounds       */
   if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & (0X04 | 0X20)) {  /* Bounds / apply last bounds */
     iml1 = sizeof(struct dsd_awcs_bounds);  /* set with bounds        */
   }
   if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower)
         < ((sizeof(struct dsd_se_co1)
                + sizeof(struct dsd_awcs_order)
                + iml1
                + sizeof(struct dsd_ord_co_o0d)
                + sizeof(void *) - 1)
              & (0 - sizeof(void *)))) {    /* get new area            */
     memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
     bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                        DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                        &dsl_aux_get_workarea,
                                        sizeof(struct dsd_aux_get_workarea) );
     if (bol1 == FALSE) {                   /* aux returned error      */
       adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
       goto p_cleanup_20;                   /* do cleanup now          */
     }
     ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
     ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
   }
   ADSL_OA1->achc_upper
     = (char *) (((long long int) ADSL_OA1->achc_upper
                                    - (sizeof(struct dsd_se_co1)
                                         + sizeof(struct dsd_awcs_order)
                                         + iml1
                                         + sizeof(struct dsd_ord_co_o0d)))
                  & (0 - sizeof(void *)));  /* align storage           */
#define ADSL_SE_CO1_G ((struct dsd_se_co1 *) ADSL_OA1->achc_upper)
#define ADSL_AWCS_ORD_G ((struct dsd_awcs_order *) (ADSL_SE_CO1_G + 1))
   ADSL_AWCS_ORD_G->imc_order_no = 13;      /* order number            */
   ADSL_AWCS_ORD_G->imc_length = iml1 + sizeof(struct dsd_ord_co_o0d);  /* length of following data */
   ADSL_AWCS_ORD_G->boc_bounds = FALSE;     /* without bounds          */
   achl1 = (char *) (ADSL_AWCS_ORD_G + 1);
   if (iml1 > 0) {                          /* with bounds             */
     ADSL_AWCS_ORD_G->boc_bounds = TRUE;    /* flag with bounds        */
     memcpy( achl1, &D_ADSL_RCO1->dsc_bounds_cur, sizeof(struct dsd_awcs_bounds) );
     achl1 += sizeof(struct dsd_awcs_bounds);
   }
   memcpy( achl1, &D_ADSL_RCO1->dsc_ord_co_o0d, sizeof(struct dsd_ord_co_o0d) );
   ADSL_SE_CO1_G->iec_se_command = ied_sec_order;  /* command drawing order */
   ADSL_SE_CO1_G->adsc_next = NULL;         /* clear chain field       */
   *ADSL_OA1->aadsc_se_co1_chain = ADSL_SE_CO1_G;  /* append to chain  */
   ADSL_OA1->aadsc_se_co1_chain = &ADSL_SE_CO1_G->adsc_next;  /* set new end of chain */
   goto pfrse_end_order;                    /* end of an order         */
#undef ADSL_SE_CO1_G
#undef ADSL_AWCS_ORD_G

   pfrse_po_apply_order:                    /* apply the order         */
   switch (D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim) {
     case 0:                                /* 0 / DSTBLT_ORDER        */
       iml2 = sizeof(struct dsd_ord_co_o00);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o00;
       iml3 = 0;
       break;
     case 0X01:                             /* 1 / 0X01 / PATBLT_ORDER */
       iml2 = sizeof(struct dsd_ord_co_o01);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o01;
       iml3 = 0;
       break;
     case 0X02:                             /* order 2 / 0X02 / TS_ENC_SCRBLT_ORDER */
       iml2 = sizeof(struct dsd_ord_co_o02);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o02;
       iml3 = 0;
       break;
     case 0X07:                             /* order 7 / 0X07 / TS_ENC_DRAWNINEGRID_ORDER */
       iml2 = sizeof(struct dsd_ord_co_o07);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o07;
       iml3 = 0;
       break;
     case 0X08:                             /* order 8 / 0X08 / TS_ENC_MULTI_DRAWNINEGRID_ORDER */
       iml2 = sizeof(struct dsd_ord_co_o08);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o08;
       iml3 = D_ADSL_RCO1->dsc_ord_co_o08.usc_len_delta_entries;  /* length of points CodedDeltaList */
       achl3 = D_ADSL_RCO1->dsc_ord_co_o08.achc_coded_delta_list;  /* contains the points CodedDeltaList */
       break;
     case 0X09:                             /* 9 / 0X09 / LINETO_ORDER */
       iml2 = sizeof(struct dsd_ord_co_o09);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o09;
       iml3 = 0;
       break;
     case 0X0A:                             /* 10 / 0X0A / OPAQUERECT_ORDER */
       iml2 = sizeof(struct dsd_ord_co_o0a);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o0a;
       iml3 = 0;
       break;
     case 0X0B:                             /* order 11 / 0X0B / TS_ENC_SAVEBITMAP_ORDER */
       iml2 = sizeof(struct dsd_ord_co_o0b);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o0b;
       iml3 = 0;
       break;
     case 0X0D:                             /* order 13/0DH MemBlt     */
       iml2 = sizeof(struct dsd_ord_co_o0d);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o0d;
       iml3 = 0;
       break;
     case 0X0E:                             /* order 14/0X0E Mem3Blt (MEM3BLT_ORDER) */
       iml2 = sizeof(struct dsd_ord_co_o0e);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o0e;
       iml3 = 0;
       break;
     case 0X0F:                             /* order 15/0X0F MultiDstBlt (MULTI_DSTBLT_ORDER) */
       iml2 = sizeof(struct dsd_ord_co_o0f);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o0f;
       iml3 = D_ADSL_RCO1->dsc_ord_co_o0f.usc_len_delta;  /* length CodedDeltaList */
       achl3 = D_ADSL_RCO1->dsc_ord_co_o0f.achc_delta;  /* CodedDeltaList */
       break;
     case 0X10:                             /* order 16/0X10 MultiPatBlt (MULTI_PATBLT_ORDER) */
       iml2 = sizeof(struct dsd_ord_co_o10);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o10;
       iml3 = D_ADSL_RCO1->dsc_ord_co_o10.usc_len_delta;  /* length CodedDeltaList */
       achl3 = D_ADSL_RCO1->dsc_ord_co_o10.achc_delta;  /* CodedDeltaList */
       break;
     case 0X11:                             /* order 17/0X11 MultiScrBlt (MULTI_SCRBLT_ORDER) */
       iml2 = sizeof(struct dsd_ord_co_o11);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o11;
       iml3 = D_ADSL_RCO1->dsc_ord_co_o11.usc_len_delta;  /* length CodedDeltaList */
       achl3 = D_ADSL_RCO1->dsc_ord_co_o11.achc_delta;  /* CodedDeltaList */
       break;
     case 0X12:                             /* order 18/0X12 MultiOpaqueRect (MULTI_OPAQUERECT_ORDER) */
       iml2 = sizeof(struct dsd_ord_co_o12);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o12;
       iml3 = D_ADSL_RCO1->dsc_ord_co_o12.usc_len_delta;  /* length CodedDeltaList */
       achl3 = D_ADSL_RCO1->dsc_ord_co_o12.achc_delta;  /* CodedDeltaList */
       break;
     case 0X13:                             /* order 19/0X13 FastIndex (FASTINDEX_ORDER) */
       iml2 = sizeof(struct dsd_ord_co_o13);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o13;
       iml3 = D_ADSL_RCO1->dsc_ord_co_o13.ucc_len_glyph;  /* length glyph data */
       achl3 = D_ADSL_RCO1->dsc_ord_co_o13.achc_glyph;  /* glyph data */
       break;
     case 0X14:                             /* order 20/0X14 PolygonSC (POLYGON_SC_ORDER) */
       iml2 = sizeof(struct dsd_ord_co_o14);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o14;
       iml3 = D_ADSL_RCO1->dsc_ord_co_o14.ucc_len_delta_entries;  /* length of points along the polygon path */
       achl3 = D_ADSL_RCO1->dsc_ord_co_o14.achc_coded_delta_list;  /* contains the points along the polygon path */
       break;
     case 0X15:                             /* order 21/0X15 PolygonCB (POLYGON_CB_ORDER) */
       iml2 = sizeof(struct dsd_ord_co_o15);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o15;
       iml3 = D_ADSL_RCO1->dsc_ord_co_o15.ucc_len_delta_entries;   /* length of points along the polyline path */
       achl3 = D_ADSL_RCO1->dsc_ord_co_o15.achc_coded_delta_list;  /* contains the points along the polyline path */
       break;
     case 0X16:                             /* order 22/0X16 Polyline (POLYLINE_ORDER) */
       iml2 = sizeof(struct dsd_ord_co_o16);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o16;
       iml3 = D_ADSL_RCO1->dsc_ord_co_o16.ucc_len_delta_entries;   /* length of points along the polyline path */
       achl3 = D_ADSL_RCO1->dsc_ord_co_o16.achc_coded_delta_list;  /* contains the points along the polyline path */
       break;
     case 0X18:                             /* 24 / 0X18 / FASTGLYPH_ORDER */
       iml2 = sizeof(struct dsd_ord_co_o18);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o18;
       iml3 = D_ADSL_RCO1->dsc_ord_co_o18.ucc_len_glyph;
       achl3 = D_ADSL_RCO1->dsc_ord_co_o18.achc_glyph;  /* glyph data  */
       break;
     case 0X19:                             /* 25 / 0X19 / EllipseSC (ELLIPSE_SC_ORDER) */
       iml2 = sizeof(struct dsd_ord_co_o19);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o19;
       iml3 = 0;
       break;
     case 0X1A:                             /* 26 / 0X1A / EllipseCB (ELLIPSE_CB_ORDER) */
       iml2 = sizeof(struct dsd_ord_co_o1a);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o1a;
       iml3 = 0;
       break;
     case 0X1B:                             /* 27 / 0X1B / GlyphIndex (GLYPHINDEX_ORDER) */
       iml2 = sizeof(struct dsd_ord_co_o1b);
       achl2 = (char *) &D_ADSL_RCO1->dsc_ord_co_o1b;
       iml3 = D_ADSL_RCO1->dsc_ord_co_o1b.ucc_len_glyph;  /* length glyph fragment */
       achl3 = D_ADSL_RCO1->dsc_ord_co_o1b.achc_glyph;  /* glyph fragments */
       break;
     default:
// to-do 03.07.12 KB
       goto pfrse_end_order;                /* end of an order         */
   }
   iml1 = 0;                                /* clear with bounds       */
   if (D_ADSL_RCL1->chc_prot_r5_pdu_ord_fl & (0X04 | 0X20)) {  /* Bounds / apply last bounds */
     iml1 = sizeof(struct dsd_awcs_bounds);  /* set with bounds        */
   }
   if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower)
         < ((sizeof(struct dsd_se_co1)
                + sizeof(struct dsd_awcs_order)
                + iml1 + iml2 + iml3
                + sizeof(void *) - 1)
              & (0 - sizeof(void *)))) {  /* get new area          */
     memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
     bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                        DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                        &dsl_aux_get_workarea,
                                        sizeof(struct dsd_aux_get_workarea) );
     if (bol1 == FALSE) {               /* aux returned error      */
       adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
       goto p_cleanup_20;               /* do cleanup now          */
     }
     ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
     ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
   }
   ADSL_OA1->achc_upper
     = (char *) (((long long int) ADSL_OA1->achc_upper
                                    - (sizeof(struct dsd_se_co1)
                                         + sizeof(struct dsd_awcs_order)
                                         + iml1 + iml2 + iml3))
                  & (0 - sizeof(void *)));  /* align storage           */
#define ADSL_SE_CO1_G ((struct dsd_se_co1 *) ADSL_OA1->achc_upper)
#define ADSL_AWCS_ORD_G ((struct dsd_awcs_order *) (ADSL_SE_CO1_G + 1))
   ADSL_AWCS_ORD_G->imc_order_no = D_ADSL_RCL1->ucc_prot_r5_pdu_ord_prim;  /* order number */
   ADSL_AWCS_ORD_G->imc_length = iml1 + iml2 + iml3;  /* length of following data */
   ADSL_AWCS_ORD_G->boc_bounds = FALSE;     /* without bounds          */
   achl1 = (char *) (ADSL_AWCS_ORD_G + 1);
   if (iml1 > 0) {                          /* with bounds             */
     ADSL_AWCS_ORD_G->boc_bounds = TRUE;    /* flag with bounds        */
     memcpy( achl1, &D_ADSL_RCO1->dsc_bounds_cur, sizeof(struct dsd_awcs_bounds) );
     achl1 += sizeof(struct dsd_awcs_bounds);
   }
   memcpy( achl1, achl2, iml2 );            /* copy command order      */
   if (iml3 > 0) {                          /* additional data         */
     memcpy( achl1 + iml2, achl3, iml3 );
   }
   ADSL_SE_CO1_G->iec_se_command = ied_sec_order;  /* command drawing order */
   ADSL_SE_CO1_G->adsc_next = NULL;         /* clear chain field       */
   *ADSL_OA1->aadsc_se_co1_chain = ADSL_SE_CO1_G;  /* append to chain  */
   ADSL_OA1->aadsc_se_co1_chain = &ADSL_SE_CO1_G->adsc_next;  /* set new end of chain */
   goto pfrse_end_order;                    /* end of an order         */
#undef ADSL_SE_CO1_G
#undef ADSL_AWCS_ORD_G

   pfrse_end_order:                         /* end of an order         */
// D_ADSL_RCL1->imc_prot_5--;               /* decrement number of orders */
// if (D_ADSL_RCL1->imc_prot_5)             /* more orders follow      */
   D_ADSL_RCL1->imc_no_cmd_frame--;         /* decrement number of orders */
   if (D_ADSL_RCL1->imc_no_cmd_frame) {     /* more orders follow      */
     if (D_ADSL_RCL1->imc_pos_inp_frame <= 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
     }
     D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_ord_fl;  /* RDP 5 control order flags */
     goto pfrse20;                          /* needs more data         */
   }

   pfrse_end_pdu:                           /* end of pdu              */
   if (D_ADSL_RCL1->imc_pos_inp_frame != D_ADSL_RCL1->imc_prot_4) {  /* not end of PDU data */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
   }
// goto pfrse96;                            /* program illogic         */
#ifdef TRACEHL1
   if (D_ADSL_RCL1->imc_pos_inp_frame != 0) {  /* not end of block     */
     printf( "l%05d remainder of record len=%d/%04X buf=%p\n",
             __LINE__,
             D_ADSL_RCL1->imc_pos_inp_frame,
             D_ADSL_RCL1->imc_pos_inp_frame,
             adsl_gai1_inp_1->achc_ginp_cur );
   }
#endif
#ifdef D_FOR_TRACE1                         /* 31.05.05 KB - help in tracing */
   if (D_ADSL_RCL1->imc_pos_inp_frame != 0) {  /* not end of block     */
     iml1++;
     iml1--;
   }
#endif                                      /* 31.05.05 KB - help in tracing */
   if (D_ADSL_RCL1->imc_pos_inp_frame == 0) {  /* at end of block      */
     D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_rec_type;  /* receive record type */
     D_ADSL_RCL1->iec_frse_bl = ied_frse_any_pdu_rec;  /* ????ive block active PDU */
     goto pfrse20;                          /* process next data       */
   }
   D_ADSL_RCL1->imc_prot_2 = D_ADSL_RCL1->imc_pos_inp_frame - 1;  /* number of bytes */
   if (D_ADSL_RCL1->imc_prot_2 < 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
   }
   D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_r5_pdu_typ;  /* RDP 5 PDU type  */
   goto pfrse20;                            /* process next data       */

   pfrse40:                                 /* send RDP4 data to client */
   /* ignore remaining part of this frame                              */
   while (TRUE) {                         /* loop over all gather structures input */
     iml1 = adsl_gai1_inp_1->achc_ginp_end - adsl_gai1_inp_1->achc_ginp_cur;
     if (iml1 > D_ADSL_RCL1->imc_pos_inp_frame) {
       iml1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* only data in this frame */
     }
     adsl_gai1_inp_1->achc_ginp_cur += iml1;  /* add length data processed */
     D_ADSL_RCL1->imc_pos_inp_frame -= iml1;  /* subtract data processed */
     if (D_ADSL_RCL1->imc_pos_inp_frame <= 0) break;  /* all data processed */
     adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next gather */
     if (adsl_gai1_inp_1 == NULL) {         /* already end of chain    */
       goto pfrse96;                        /* program illogic         */
     }
   }
   switch (D_ADSL_RCL1->iec_frse_bl) {
     case ied_frse_lic_pr_req_cert:         /* server license request  */
       if (m_get_le2( D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 + 4 + 4 + m_get_le4( D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 + 4 ) + sizeof(ucrs_lic_bef_cert))) {
         /* got a special server key for licensing, save it            */
         if (bol1 = (D_ADSL_RCO1->adsc_lic_neg->imc_lic_cert_key_len < 0))  /* revert key before use */
           D_ADSL_RCO1->adsc_lic_neg->imc_lic_cert_key_len = - D_ADSL_RCO1->adsc_lic_neg->imc_lic_cert_key_len;
         if ( D_ADSL_RCO1->adsc_lic_neg->imc_lic_1_len <= D_ADSL_RCO1->adsc_lic_neg->imc_lic_cert_key_len + D_ADSL_RCO1->adsc_lic_neg->imc_lic_cert_exp_len ) {
           /* chrc_lic_1 not big enough. free (no realloc), because no need to copy old content */
           ADSL_RDPA_F->dsc_stor_sdh_1.amc_aux = adsp_hl_clib_1->amc_aux;
           ADSL_RDPA_F->dsc_stor_sdh_1.vpc_userfld = adsp_hl_clib_1->vpc_userfld;
           m_aux_stor_free( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 );
           D_ADSL_RCO1->adsc_lic_neg->imc_lic_1_len = D_ADSL_RCO1->adsc_lic_neg->imc_lic_cert_key_len + D_ADSL_RCO1->adsc_lic_neg->imc_lic_cert_exp_len;
   ADSL_RDPA_F->dsc_stor_sdh_1.amc_aux = adsp_hl_clib_1->amc_aux;
   ADSL_RDPA_F->dsc_stor_sdh_1.vpc_userfld = adsp_hl_clib_1->vpc_userfld;
   *((void **) &D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1) = m_aux_stor_alloc( &ADSL_RDPA_F->dsc_stor_sdh_1, D_ADSL_RCO1->adsc_lic_neg->imc_lic_1_len );
         }
         if (bol1) {                        /* copy invers             */
           achl1 = D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1;
           achl2 = D_ADSL_RCO1->adsc_lic_neg->chrc_lic_cert_key;
           achl3 = achl1 + D_ADSL_RCO1->adsc_lic_neg->imc_lic_cert_key_len;
           do {
             *(--achl3) = *(achl2++);
           } while (achl3 > achl1);
         } else {
           memcpy( D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1,
                   D_ADSL_RCO1->adsc_lic_neg->chrc_lic_cert_key,
                   D_ADSL_RCO1->adsc_lic_neg->imc_lic_cert_key_len );
         }
         memcpy( D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 + D_ADSL_RCO1->adsc_lic_neg->imc_lic_cert_key_len,
                 D_ADSL_RCO1->adsc_lic_neg->chrc_lic_cert_exp,
                 D_ADSL_RCO1->adsc_lic_neg->imc_lic_cert_exp_len );
         D_ADSL_RCO1->adsc_lic_neg->chrc_lic_cert_key =
                 D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1;
         D_ADSL_RCO1->adsc_lic_neg->chrc_lic_cert_exp =
                 D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 + D_ADSL_RCO1->adsc_lic_neg->imc_lic_cert_key_len;
       }
       /* put command in queue */

       D_ADSL_RCL1->iec_frse_bl = ied_frse_any_pdu_rec;  /* ????ive block active PDU */
       D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_rec_type;  /* receive record type */
       goto pfrse20;                    /* process next data       */

     case ied_frse_lic_pr_chll:             /* platform challenge      */
       // +-----------------------------------------+
       // | Send Client Platform Challenge Response |
       // +-----------------------------------------+

       iml5 = m_get_le2(D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1); /* hwid length */
       iml1 = 4                             /* Licencing Preamble      */
              + 4 + 8 + iml5   /* EncryptedPlatformChallengeResponse */
              + 4 + 4 + 0X10   /* Blob EncryptedHWID */
              + 0X10;          /* Hash */
// to-do 20.04.12 KB work-area big enough ???
       ADSL_OA1->achc_upper -= sizeof(struct dsd_gather_i_1);
#define ADSL_GAI1_OUT_G ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)
       achl3 = achl1 = ADSL_OA1->achc_lower; // save position of start

       *achl1++ = DEF_CONST_RDP_03;
       *achl1++ = 0;                        /* second byte zero        */
       achl1 += 2;    // save space for length
       memcpy(achl1, ucrs_x224_p01, sizeof(ucrs_x224_p01));
       achl1 += sizeof(ucrs_x224_p01);
       *achl1++ = 0X64;  /* send data request */
       m_put_be2(achl1, D_ADSL_RCL1->dsc_rdp_co_1.usc_userid_cl2se);
       achl1 += 2;
       m_put_be2(achl1, D_ADSL_RCL1->imc_prot_chno);
       achl1 += 2;
       *achl1++ = 0X70;                     /* priority / segmentation */
       if (iml1 <= (127 - 4)) {             /* length in one byte      */
         *achl1++ = (unsigned char) (iml1 + 4);
       } else {
         m_put_be2( achl1, iml1 + 4 );
         *achl1 |= 0X80;                    /* length in two bytes     */
         achl1 += 2;
       }
       m_put_le2(achl1, 0X80);              /* encyption flags: licensing encryption */
       achl1 += 2;
//     m_put_le2(achl1, 0X00); /* padding */
//     achl1 += 2;
       *achl1++ = 0;                        /* padding                 */
       *achl1++ = 0;                        /* padding                 */

       *achl1++ = 0x15;                     /* type: Client Platform Challenge Response */
       *achl1++ = D_ADSL_RCO1->adsc_lic_neg->chc_lic_vers;      /* version 2 or 3, and maybe flag 0x80 */
       m_put_le2( achl1, iml1 );            /* len */
       achl1 += 2;
       // EncryptedPlatformChallengeResponse
       m_put_le2( achl1, 0x0009 ); /* BB_ENCRYPTED_DATA_BLOB */
       achl1 += 2;
       m_put_le2( achl1, iml5 + 8 ); /* len of Platform challenge response data */
       achl1 += 2;

#define ACHL_WORK_SHA1 ((int *) chrl_work_2)
#define ACHL_WORK_MD5 ((int *) ((char *) ACHL_WORK_SHA1 + SHA_ARRAY_SIZE * sizeof(int)))
#define ACHL_WORK_UTIL_01 ((char *) ACHL_WORK_MD5 + MD5_ARRAY_SIZE * sizeof(int))
#define ACHL_WORK_CHLL ((char *) ACHL_WORK_UTIL_01 + 20)
#define ACHL_WORK_RC4 ACHL_WORK_CHLL + iml5 + 8 + 20

       achl2 = ACHL_WORK_CHLL; /* Start to write Data on workarea. */
       m_put_le2( achl2, 0x0100 ); /* wVersion */
       achl2 += 2;
       m_put_le2( achl2, 0x0100 ); /* wClientType. JWT sends first two bytes of hardware-id? */
       achl2 += 2;
       m_put_le2( achl2, 0x0003 ); /* wLicenseDetailLevel */
       achl2 += 2;
       m_put_le2( achl2, iml5 ); /* bytes in pbChallenge field (test-data) */
       achl2 += 2;
       memcpy( achl2, D_ADSL_RCO1->adsc_lic_neg->chrc_lic_1 + 2, iml5 ); /* pbChallenge field (test-data) */
       achl2 += iml5;
       /* encrypt data -> In Licensing JWT initializes the state before every call of RC4. */
       memcpy( ACHL_WORK_RC4, D_ADSL_RCO1->adsc_lic_neg->chrc_rc4_state_cl2se, RC4_STATE_SIZE);
       RC4( ACHL_WORK_CHLL, 0, iml5 + 8,
            achl1, 0, ACHL_WORK_RC4);
       achl1 += iml5 + 8;
       // EncryptedHWID
       m_put_le2( achl1, 0x0009 );
       achl1 += 2;
       m_put_le2( achl1, 0x14);
       achl1 += 0x2;

       m_put_le4( achl2, D_ADSL_RCO1->imc_platform_id);
       achl2 += 4;
       memcpy( achl2, D_ADSL_RCO1->chrc_client_hardware_data, 0x10); /* Data-fields of client hardware identification */
       achl2 += 0x10;
       /* encrypt data -> JWT initializes the state before every call of RC4. */
       memcpy( ACHL_WORK_RC4, D_ADSL_RCO1->adsc_lic_neg->chrc_rc4_state_cl2se, RC4_STATE_SIZE );
       RC4( ACHL_WORK_CHLL + iml5 + 8, 0, 4 + 0x10,
            achl1, 0, ACHL_WORK_RC4);
       achl1 += 4 + 0X10;
       /* calculate the hash                            */
       /* JWT initializes the state of SHA1 and MD5 before every call! */
       iml1 = iml5 + 8 + 4 + 0X10;
       memcpy( ACHL_WORK_SHA1,
               D_ADSL_RCO1->adsc_lic_neg->imrc_sha1_state,
               sizeof(D_ADSL_RCO1->adsc_lic_neg->imrc_sha1_state) );
       memcpy( ACHL_WORK_MD5,
               D_ADSL_RCO1->adsc_lic_neg->imrc_md5_state,
               sizeof(D_ADSL_RCO1->adsc_lic_neg->imrc_md5_state) );
       m_put_le4( ACHL_WORK_UTIL_01, iml1 );
       SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0, 4 );
       SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_CHLL, 0, iml1 );
       SHA1_Final( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0 );

       MD5_Update( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0, 20 );
       MD5_Final( ACHL_WORK_MD5, achl1, 0 );
       achl1 += 0X10;

#undef ACHL_WORK_SHA1
#undef ACHL_WORK_MD5
#undef ACHL_WORK_UTIL_01
#undef ACHL_WORK_CHLL
#undef ACHL_WORK_RC4

       iml1 = achl1 - achl3;
       m_put_be2(achl3 + 2, iml1);
       ADSL_GAI1_OUT_G->adsc_next = NULL;
       ADSL_GAI1_OUT_G->achc_ginp_cur = achl3;
       ADSL_GAI1_OUT_G->achc_ginp_end = achl1;
       *ADSL_OA1->aadsc_gai1_out_to_server = ADSL_GAI1_OUT_G;
       ADSL_OA1->aadsc_gai1_out_to_server = &ADSL_GAI1_OUT_G->adsc_next;
       ADSL_OA1->achc_lower = achl1;           /* set end of storage used */
#undef ADSL_GAI1_OUT_G
//#undef ACHL_OUT1
       D_ADSL_RCL1->iec_frse_bl = ied_frse_any_pdu_rec;  /* receive block active PDU XXX maybe introduce extra states for awaiting licensing packets? */
       break;
     case ied_frse_lic_pr_1_rec:            /* receive block licence protocol */
     case ied_frse_lic_pr_type:             /* licencing block to check */
     case ied_frse_deactivate_all:          /* Connect to existing session */
       D_ADSL_RCL1->iec_frse_bl = ied_frse_act_pdu_rec;  /* receive block active PDU */
       break;
     case ied_frse_error_bl_02:             /* receive error block 02  */
       D_ADSL_RCL1->iec_frse_bl = ied_frse_any_pdu_rec;  /* ????ive block active PDU */
       break;
   }
   D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_rec_type;  /* receive record type */
   goto pfrse20;                            /* process next data       */


   pfrse_send_secbl:                        /* send second block to server */
#define D_ADSL_VCH (D_ADSL_RCO1->adsrc_vc_1 + (D_ADSL_RCO1->imc_no_virt_ch - iml1))
   if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower)
         < (376 + D_ADSL_RCO1->imc_no_virt_ch * (sizeof(D_ADSL_VCH->byrc_name) + 4) + sizeof(struct dsd_gather_i_1))) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
   }
   ADSL_OA1->achc_upper -= sizeof(struct dsd_gather_i_1);
#define ADSL_GAI1_OUT_G ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)
#define ACHL_OUT1 ADSL_OA1->achc_lower
   achl1 = ACHL_OUT1;                       /* start output here       */
   *achl1 = DEF_CONST_RDP_03;
   memcpy( achl1 + 4,
           ucrs_x224_mcs,
           sizeof(ucrs_x224_mcs) );
   /* length in three bytes                                            */
   memcpy( achl1 + 12,
           ucrs_x224_p02,
           sizeof(ucrs_x224_p02) );
   *(achl1 + 105) = DEF_CONST_ASN1_OS_04;
   memcpy( achl1 + 109,
           ucrs_x224_p03,
           sizeof(ucrs_x224_p03) );
   /* length in two bytes                                              */
   memcpy( achl1 + 118,
           ucrs_x224_p04,
           sizeof(ucrs_x224_p04) );
   /* length in two bytes                                              */
   memcpy( achl1 + 132,
           ucrs_x224_p05,
           sizeof(ucrs_x224_p05) );
   m_put_le2( achl1 + 140,
              D_ADSL_RCO1->imc_dim_x );
   m_put_le2( achl1 + 142,
              D_ADSL_RCO1->imc_dim_y );
   memcpy( achl1 + 144,
           ucrs_x224_p06,
           sizeof(ucrs_x224_p06) );
   m_put_le4( achl1 + 148,
              D_ADSL_RCO1->imc_keyboard_layout );
   memcpy( achl1 + 152,
           ucrs_x224_buildno,
           sizeof(ucrs_x224_buildno) );
   memcpy( achl1 + 156,
           D_ADSL_RCO1->wcrc_computer_name,
           sizeof(D_ADSL_RCO1->wcrc_computer_name) );
   /* Type of Keyboard / 102                                           */
   m_put_le4( achl1 + 188,
              D_ADSL_RCO1->imc_keyboard_type );
   /* Subtype of Keyboard                                              */
   m_put_le4( achl1 + 192,
              D_ADSL_RCO1->imc_keyboard_subtype );
   /* Number of Function Keys                                          */
   m_put_le4( achl1 + 196,
              D_ADSL_RCO1->imc_no_func_keys );
   /* IME Mapping Table                                                */
   memset( achl1 + 200, 0, 64 );
   memcpy( achl1 + 264,
           ucrs_x224_encry,
           sizeof(ucrs_x224_encry) );
   m_put_le2( achl1 + 264 + 8, D_ADSL_RCO1->imc_s_coldep );
#define D_POS_VCH (264 + sizeof(ucrs_x224_encry))
   *(achl1 + D_POS_VCH + 0) = 0X03;
   *(achl1 + D_POS_VCH + 1) = (unsigned char) 0XC0;
   iml1 = D_ADSL_RCO1->imc_no_virt_ch;
   m_put_le2( achl1 + D_POS_VCH + 2,
              8 + iml1 * DEF_LEN_VIRTCH_STA );
   m_put_le4( achl1 + D_POS_VCH + 4,
              iml1 );
   achl1 += D_POS_VCH + 8;
#undef D_POS_VCH
   while (iml1) {                           /* loop over all channels  */
     memcpy( achl1,
             D_ADSL_VCH->byrc_name,
             sizeof(D_ADSL_VCH->byrc_name) );
     achl1 += sizeof(D_ADSL_VCH->byrc_name);
     m_put_le4( achl1, D_ADSL_VCH->imc_flags );
     achl1 += 4;                            /* after flags             */
     iml1--;                                /* decrement index         */
   }
   m_put_be2( ACHL_OUT1 + 10,
              achl1 - (ACHL_OUT1 + 10 + 2) );
   *(ACHL_OUT1 + 9) = (unsigned char) 0X82;
   m_put_be2( ACHL_OUT1 + 107,
              achl1 - (ACHL_OUT1 + 107 + 2) );
   *(ACHL_OUT1 + 106) = (unsigned char) 0X82;
   /* output length of block                                           */
   /* set length fields                                                */
   m_put_be2( ACHL_OUT1 + 116,
              achl1 - (ACHL_OUT1 + 116 + 2) );
   *(ACHL_OUT1 + 116) |= 0X80;
   m_put_be2( ACHL_OUT1 + 130,
              achl1 - (ACHL_OUT1 + 130 + 2) );
   *(ACHL_OUT1 + 130) |= 0X80;
   *(ACHL_OUT1 + 1) = 0;
   m_put_be2( ACHL_OUT1 + 2,
              achl1 - ACHL_OUT1 );
//         D_ADSL_RSE1->iec_fcfp_bl = ied_fcfp_rec_type;  /* receive record type */
//         D_ADSL_RSE1->iec_frcl_bl = ied_frcl_rec_02;
   ADSL_GAI1_OUT_G->adsc_next = NULL;
   ADSL_GAI1_OUT_G->achc_ginp_cur = ACHL_OUT1;
   ADSL_GAI1_OUT_G->achc_ginp_end = achl1;
   *ADSL_OA1->aadsc_gai1_out_to_server = ADSL_GAI1_OUT_G;
   ADSL_OA1->aadsc_gai1_out_to_server = &ADSL_GAI1_OUT_G->adsc_next;
   ACHL_OUT1 = achl1;
   ADSL_RDPA_F->dsc_rdp_cl_1.iec_fsfp_bl = ied_fsfp_rec_type;  /* first record type */
   D_ADSL_RCL1->iec_frse_bl = ied_frse_rec_04;
   goto pfrse20;                            /* process next data       */
#undef D_ADSL_VCH
#undef ADSL_GAI1_OUT_G
#undef ACHL_OUT1

   pfrse_send_erect_domain_request_pdu:
   ADSL_OA1->achc_upper -= sizeof(struct dsd_gather_i_1);
   if (ADSL_OA1->achc_upper < ADSL_OA1->achc_lower) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse96;
   }
#define ADSL_GAI1_OUT_G ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)
   ADSL_GAI1_OUT_G->adsc_next = NULL;
   ADSL_GAI1_OUT_G->achc_ginp_cur = (char *) ucrs_x224_errect_domain_pdu;
   ADSL_GAI1_OUT_G->achc_ginp_end = (char *) ucrs_x224_errect_domain_pdu + sizeof(ucrs_x224_errect_domain_pdu);
   *ADSL_OA1->aadsc_gai1_out_to_server = ADSL_GAI1_OUT_G;  /* output data to server */
   ADSL_OA1->aadsc_gai1_out_to_server = &ADSL_GAI1_OUT_G->adsc_next;  /* new chain output data to server */
#undef ADSL_GAI1_OUT_G
   goto pfrse20;                            /* process next data       */

   pfrse_vch_00:                            /* virtual channel data received */
   while (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
     adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next in chain */
     if (adsl_gai1_inp_1 == NULL) return;   /* wait for more data      */
   }
   /* check if all data of this frame have been received               */
   iml1 = D_ADSL_RCL1->imc_pos_inp_frame;   /* remaining data in frame */
   adsl_gai1_inp_w2 = adsl_gai1_inp_1;      /* get gather              */
   while (TRUE) {                           /* loop over all gather structures input */
     iml1 -= adsl_gai1_inp_w2->achc_ginp_end - adsl_gai1_inp_w2->achc_ginp_cur;
     if (iml1 <= 0) break;                  /* enough data found       */
     adsl_gai1_inp_w2 = adsl_gai1_inp_w2->adsc_next;  /* get next gather */
     if (adsl_gai1_inp_w2 == NULL) {        /* already end of chain    */
     printf( "s%05d l%05d received from server need more data %d\n",
             11,                /* source line no for errors */
             __LINE__,                      /* line number for errors  */
             iml1 );                        /* length of data needed   */
       /* wait for more data                                           */
       goto p_ret_00;                       /* check how to return     */
     }
   }
   if (D_ADSL_RCL1->imc_pos_inp_frame < (2 + 1)) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
   }
   if (*adsl_gai1_inp_1->achc_ginp_cur & 0X20) {  /* data compressed   */
     goto pfrse_vch_20;                     /* virtual channel data compressed */
   }
   bol_compressed = FALSE;                  /* save not compressed     */
   /* remove two bytes of compression flags                            */
   iml1 = 2;                                /* bytes to remove         */
   D_ADSL_RCL1->imc_pos_inp_frame -= iml1;
   while (TRUE) {
     iml_rec = adsl_gai1_inp_1->achc_ginp_end
                 - adsl_gai1_inp_1->achc_ginp_cur;
     if (iml_rec > iml1) iml_rec = iml1;
     adsl_gai1_inp_1->achc_ginp_cur += iml_rec;
     iml1 -= iml_rec;
     if (adsl_gai1_inp_1->achc_ginp_cur < adsl_gai1_inp_1->achc_ginp_end) break;
     adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;
     if (iml1 == 0) break;
   }
   adsl_gai1_inp_w2 = adsl_gai1_inp_1;      /* save input data         */
   iml1 = D_ADSL_RCL1->imc_pos_inp_frame ;  /* length of data          */
   goto pfrse_vch_40;                       /* send virtual channel to client */

   pfrse_vch_20:                            /* virtual channel data compressed */
   if ((D_ADSL_RCO1->umc_loinf_options & D_LOINFO_COMPR_ENA) == 0) {  /* compression not enabled */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
   }
   bol_compressed = TRUE;                   /* save compressed         */
// to-do 21.02.12 KB decompression
   /* decompress data                                                  */
   D_ADSL_RCO1->dsc_cdrf_dec.vpc_userfld = adsp_hl_clib_1->vpc_userfld;
   D_ADSL_RCO1->dsc_cdrf_dec.amc_aux = adsp_hl_clib_1->amc_aux;
   D_ADSL_RCO1->dsc_cdrf_dec.chrc_header[ 0 ]  /* copy compression header */
     = *(adsl_gai1_inp_1->achc_ginp_cur);   /* address act input-data  */
   /* remove two bytes of compression flags                            */
   iml1 = 2;                                /* bytes to remove         */
   D_ADSL_RCL1->imc_pos_inp_frame -= iml1;
   while (TRUE) {
     iml_rec = adsl_gai1_inp_1->achc_ginp_end
                 - adsl_gai1_inp_1->achc_ginp_cur;
     if (iml_rec > iml1) iml_rec = iml1;
     adsl_gai1_inp_1->achc_ginp_cur += iml_rec;
     iml1 -= iml_rec;
     if (adsl_gai1_inp_1->achc_ginp_cur < adsl_gai1_inp_1->achc_ginp_end) break;
     adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;
     if (adsl_gai1_inp_1 == NULL) {         /* already end of chain    */
       M_ERROR_FRSE_ILLOGIC
     }
     if (iml1 == 0) break;
   }
   /* prepare gather of all input data                                 */
#define ADSL_GAI1_S ((struct dsd_gather_i_1 *) chrl_work_2)
   adsl_gai1_w1 = ADSL_GAI1_S;              /* first gather here       */
   while (TRUE) {                           /* loop over input bytes   */
     if (adsl_gai1_inp_1 == NULL) {         /* already end of chain    */
       M_ERROR_FRSE_ILLOGIC
     }
     iml1 = adsl_gai1_inp_1->achc_ginp_end - adsl_gai1_inp_1->achc_ginp_cur;
     if (iml1 > D_ADSL_RCL1->imc_pos_inp_frame) iml1 = D_ADSL_RCL1->imc_pos_inp_frame;  /* remaining data in frame */
     D_ADSL_RCL1->imc_pos_inp_frame -= iml1;  /* compute remaining length compressed data */
     adsl_gai1_w1->achc_ginp_cur = adsl_gai1_inp_1->achc_ginp_cur;
     adsl_gai1_w1->achc_ginp_end = adsl_gai1_inp_1->achc_ginp_cur + iml1;
     adsl_gai1_inp_1->achc_ginp_cur += iml1;
     if (adsl_gai1_inp_1->achc_ginp_cur >= adsl_gai1_inp_1->achc_ginp_end) {
       adsl_gai1_inp_1 = adsl_gai1_inp_1->adsc_next;  /* get next in chain */
     }
     if (D_ADSL_RCL1->imc_pos_inp_frame <= 0) break;  /* now last part */
     adsl_gai1_w1->adsc_next = adsl_gai1_w1 + 1;  /* set chain gather  */
     adsl_gai1_w1++;                        /* use next gather         */
   }
   adsl_gai1_w1->adsc_next = NULL;          /* end of data             */
   D_ADSL_RCO1->dsc_cdrf_dec.adsc_gai1_in = ADSL_GAI1_S;  /* input data */
#undef ADSL_GAI1_S
   D_ADSL_RCO1->dsc_cdrf_dec.boc_mp_flush = TRUE;  /* end-of-record input */
   dsl_gai1_comp_data.achc_ginp_cur = (char *) (adsl_gai1_w1 + 1);
   D_ADSL_RCO1->dsc_cdrf_dec.achc_out_cur = dsl_gai1_comp_data.achc_ginp_cur;  /* current end of output data */
   D_ADSL_RCO1->dsc_cdrf_dec.achc_out_end = chrl_work_2 + sizeof(chrl_work_2);  /* end of buffer for output data */
   /* decompress data                                              */
   D_ADSL_RCO1->amc_cdr_dec( &D_ADSL_RCO1->dsc_cdrf_dec );
   m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d pfrse_vch_20 decompr part &dsc_cdrf_dec=%p imc_return=%d len=%d/0X%X.",
                 __LINE__, 26343,  /* line number for errors */
                 &D_ADSL_RCO1->dsc_cdrf_dec,
                 D_ADSL_RCO1->dsc_cdrf_dec.imc_return,
                 D_ADSL_RCO1->dsc_cdrf_dec.achc_out_cur - dsl_gai1_comp_data.achc_ginp_cur,
                 D_ADSL_RCO1->dsc_cdrf_dec.achc_out_cur - dsl_gai1_comp_data.achc_ginp_cur );
   if (D_ADSL_RCO1->dsc_cdrf_dec.imc_return != DEF_IRET_NORMAL) {
     m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d de-compression error %d.",
                   __LINE__, 26351,  /* line number for errors */
                   D_ADSL_RCO1->dsc_cdrf_dec.imc_return );
     goto p_cleanup_00;                 /* do cleanup now          */
   }
   dsl_gai1_comp_data.achc_ginp_end = D_ADSL_RCO1->dsc_cdrf_dec.achc_out_cur;
   iml1 = dsl_gai1_comp_data.achc_ginp_end - dsl_gai1_comp_data.achc_ginp_cur;  /* length of data */
   adsl_gai1_inp_w2 = &dsl_gai1_comp_data;  /* process decompressed data */

   pfrse_vch_40:                            /* send virtual channel to client */
   if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower)
         < (sizeof(struct dsd_se_co1) + sizeof(struct dsd_rdp_vch_io) + sizeof(struct dsd_gather_i_1))) {  /* get new area */
     memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
     bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                        DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                        &dsl_aux_get_workarea,
                                        sizeof(struct dsd_aux_get_workarea) );
     if (bol1 == FALSE) {                   /* aux returned error      */
       adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
       goto p_cleanup_20;                   /* do cleanup now          */
     }
     ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
     ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
   }
   ADSL_OA1->achc_upper -= sizeof(struct dsd_se_co1) + sizeof(struct dsd_rdp_vch_io) + sizeof(struct dsd_gather_i_1);
#define ADSL_SE_CO1_G ((struct dsd_se_co1 *) ADSL_OA1->achc_upper)
   ADSL_SE_CO1_G->iec_se_command = ied_sec_vch_in;  /* input from virtual channel */
   ADSL_SE_CO1_G->adsc_next = NULL;         /* clear chain field       */
   *ADSL_OA1->aadsc_se_co1_chain = ADSL_SE_CO1_G;  /* append to chain  */
   ADSL_OA1->aadsc_se_co1_chain = &ADSL_SE_CO1_G->adsc_next;  /* set new end of chain */
#define ADSL_SC_VCH_OUT_G ((struct dsd_rdp_vch_io *) (ADSL_SE_CO1_G + 1))
   iml2 = D_ADSL_RCO1->imc_no_virt_ch;      /* number of virtual channels */
   while (TRUE) {                           /* loop over all virtual channels */
     if (iml2 <= 0) {                       /* virtual channel not found */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
     }
     iml2--;                                /* decrement index         */
     if (D_ADSL_RCO1->adsrc_vc_1[ iml2 ].usc_vch_no == D_ADSL_RCL1->imc_prot_chno) {  /* virtual channel no com */
       ADSL_SC_VCH_OUT_G->adsc_rdp_vc_1 = &D_ADSL_RCO1->adsrc_vc_1[ iml2 ];  /* RDP virtual channel */
       break;
     }
   }
#define ADSL_GAI1_OUT1 ((struct dsd_gather_i_1 *) (ADSL_SC_VCH_OUT_G + 1))
   ADSL_SC_VCH_OUT_G->adsc_gai1_data = ADSL_GAI1_OUT1;  /* output data */
   ADSL_SC_VCH_OUT_G->umc_vch_ulen = iml1;  /* virtual channel length uncompressed */
// ADSL_RDPA_F->dsc_rdptr1.imc_disp_field = D_ADSL_RCO1->imc_len_part - (D_ADSL_RCL1->imc_pos_inp_frame - 2);
   /* virtual channel segmentation flags                               */
   memcpy( ADSL_SC_VCH_OUT_G->chrc_vch_segfl, D_ADSL_RCL1->chrc_vch_segfl, sizeof(ADSL_SC_VCH_OUT_G->chrc_vch_segfl) );
// ADSL_RDPA_F->dsc_rdptr1.usc_vch_no = D_ADSL_RCL1->imc_prot_chno;  /* virtual channel no com */
// ADSL_RDPA_F->dsc_rdptr1.imc_prot1 = D_ADSL_RCL1->umc_vch_ulen;  /* variable field */
   adsl_gai1_w1 = ADSL_GAI1_OUT1;           /* first gather here       */
#undef ADSL_SE_CO1_G
#undef ADSL_SC_VCH_OUT_G
#undef ADSL_GAI1_OUT1
   /* create gather structures with the data received over this virtual channel */
   while (TRUE) {                           /* loop over input bytes   */
     iml2 = adsl_gai1_inp_w2->achc_ginp_end - adsl_gai1_inp_w2->achc_ginp_cur;
     if (iml2 > iml1) iml2 = iml1;
     adsl_gai1_w1->achc_ginp_cur = adsl_gai1_inp_w2->achc_ginp_cur;
     adsl_gai1_w1->achc_ginp_end = adsl_gai1_inp_w2->achc_ginp_cur + iml2;
     adsl_gai1_inp_w2->achc_ginp_cur += iml2;
     if (adsl_gai1_inp_w2->achc_ginp_cur >= adsl_gai1_inp_w2->achc_ginp_end) {
       adsl_gai1_inp_w2 = adsl_gai1_inp_w2->adsc_next;
     }
     iml1 -= iml2;                          /* remaining data to pass  */
     if (iml1 <= 0) break;                  /* end of data to pass     */
     if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower) < sizeof(struct dsd_gather_i_1)) {  /* get new area */
       memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
       bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                          DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                          &dsl_aux_get_workarea,
                                          sizeof(struct dsd_aux_get_workarea) );
       if (bol1 == FALSE) {                 /* aux returned error      */
         adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
         goto p_cleanup_20;                 /* do cleanup now          */
       }
       ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
       ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
     }
     ADSL_OA1->achc_upper -= sizeof(struct dsd_gather_i_1);
     adsl_gai1_w1->adsc_next = (struct dsd_gather_i_1 *) ADSL_OA1->achc_upper;  /* set chain gather */
     adsl_gai1_w1 = (struct dsd_gather_i_1 *) ADSL_OA1->achc_upper;  /* use next gather */
   }
   adsl_gai1_w1->adsc_next = NULL;          /* set end chain gather    */
   dsl_gai1_comp_data.achc_ginp_cur = NULL;  /* no decompressed data   */
   D_ADSL_RCL1->imc_pos_inp_frame = 0;      /* the frame has been processed */
   D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_rec_type;  /* receive record type */
   D_ADSL_RCL1->iec_frse_bl = ied_frse_any_pdu_rec;  /* ????ive block active PDU */
   goto pfrse20;                            /* process next data       */

   p_cjr_frse_00:                           /* send channel join request */
   if (D_ADSL_RCL1->imc_prot_5 > D_ADSL_RCO1->imc_no_virt_ch + 1) {
     goto p_cjr_frse_20;                    /* send client private key */
   }
   if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower)
         < (sizeof(ucrs_x224_cjreq_1)
              + 2 + 2
              + sizeof(struct dsd_gather_i_1))) {
     memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
     bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                        DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                        &dsl_aux_get_workarea,
                                        sizeof(struct dsd_aux_get_workarea) );
     if (bol1 == FALSE) {                   /* aux returned error      */
       adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
       goto p_cleanup_20;                   /* do cleanup now          */
     }
     ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
     ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
   }
   achl1 = ADSL_OA1->achc_lower;            /* start of output area    */
   memcpy( achl1, ucrs_x224_cjreq_1, sizeof(ucrs_x224_cjreq_1) );
   achl1 += sizeof(ucrs_x224_cjreq_1);
   m_put_be2( achl1, D_ADSL_RCO1->usc_userid_cl2se );
   achl1 += 2;
   switch (D_ADSL_RCL1->imc_prot_5) {       /* depend on channel index */
     case 0:
       iml1 = D_EXTRA_CHANNEL + D_ADSL_RCO1->usc_userid_cl2se;  /* set number virtual channel */
       D_ADSL_RCO1->dtc_rdpfl_1.ibc_contchno = 1;
       break;
     case 1:
       iml1 = D_ADSL_RCO1->usc_chno_disp;
       break;
     default:
       iml1 = (D_ADSL_RCO1->adsrc_vc_1 + D_ADSL_RCL1->imc_prot_5 - 2)->usc_vch_no;   /* channel number virtual channel  */
       break;
   }
   m_put_be2( achl1, iml1 );
   achl1 += 2;
   D_ADSL_RCL1->imc_prot_5++;               /* increment channel index */
   D_ADSL_RCL1->iec_frse_bl = ied_frse_cjresp_rec;  /* receive block channel join response */
   goto p_cjr_frse_80;                      /* fields have been set    */

   p_cjr_frse_20:                           /* send client private key */
   if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower)
         < (sizeof(ucrs_logon_info_c1)
              + sizeof(D_ADSL_RCO1->umc_loinf_options)  /* Logon Info Options */
              + 5 * sizeof(unsigned short int)
              + D_ADSL_RCO1->usc_loinf_domna_len  /* Domain Name Length */
              + sizeof(unsigned short int)
              + D_ADSL_RCO1->usc_loinf_userna_len  /* User Name Length */
              + sizeof(unsigned short int)
              + D_ADSL_RCO1->usc_loinf_pwd_len  /* Password Length     */
              + sizeof(unsigned short int)
              + D_ADSL_RCO1->usc_loinf_altsh_len  /* Alt Shell Length  */
              + sizeof(unsigned short int)
              + D_ADSL_RCO1->usc_loinf_wodir_len  /* Working Directory Length */
              + sizeof(unsigned short int)
              + sizeof(unsigned short int)
              + sizeof(unsigned short int)
              + D_ADSL_RCO1->usc_loinf_ineta_len  /* INETA Length      */
              + sizeof(unsigned short int)
              + D_ADSL_RCO1->usc_loinf_path_len  /* Client Path Length */
              + D_ADSL_RCO1->usc_loinf_extra_len  /* Extra Parameters Length */
              + sizeof(struct dsd_gather_i_1))) {
     memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
     bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                        DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                        &dsl_aux_get_workarea,
                                        sizeof(struct dsd_aux_get_workarea) );
     if (bol1 == FALSE) {                   /* aux returned error      */
       adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
       goto p_cleanup_20;                   /* do cleanup now          */
     }
     ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
     ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
   }
   achl1 = ADSL_OA1->achc_lower;               /* start of output area    */
#define ACHL_CLIENT_RANDOM_CL (chrl_work_2)
#define ACHL_CLIENT_RANDOM_RE (ACHL_CLIENT_RANDOM_CL + 32)
#define ACHL_CL_RAND_ENCRY (ACHL_CLIENT_RANDOM_RE + 32)
#define ACHL_WORK_SHA1 (ACHL_CL_RAND_ENCRY + 72)
#define ACHL_WORK_MD5 (ACHL_WORK_SHA1 + 40)
#define ACHL_WORK_AREA (ACHL_WORK_MD5 + 48)
   /* 32 bytes of client random as server                              */
   bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                      DEF_AUX_RANDOM_RAW,  /* calcalute random */
                                      ACHL_CLIENT_RANDOM_CL,
                                      D_LEN_CLIENT_RAND );
   if (bol1 == FALSE) {                     /* aux returned error      */
     adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
     goto p_cleanup_20;                     /* do cleanup now          */
   }
   m_gen_keys( adsp_hl_clib_1, ACHL_CLIENT_RANDOM_CL, D_ADSL_RCO1, ACHL_WORK_AREA );
   /* reverse input bytes for RSA encryption                           */
   achl2 = ACHL_CLIENT_RANDOM_RE;
   achl3 = ACHL_CLIENT_RANDOM_CL;
   achl4 = ACHL_CLIENT_RANDOM_CL + D_LEN_CLIENT_RAND;
   do {
     *achl2++ = *(--achl4);
   } while (achl4 > achl3);
   iml3 = D_RSA_KEY_SIZE;                   /* compare size RSA key    */
#ifdef __INSURE__
   // rsa_crypt_raw uses lnum, which causes an Insure-error.
   _Insure_checking_enable(0);
#endif
   iml2 = m_rsa_crypt_raw_big( (unsigned char *) ACHL_CLIENT_RANDOM_RE,
                               D_LEN_CLIENT_RAND,
                               (unsigned char *) ADSL_RDPA_F->dsc_rdp_cl_1.chrc_cert_exp,
                               sizeof(ADSL_RDPA_F->dsc_rdp_cl_1.chrc_cert_exp),
                               (unsigned char *) ADSL_RDPA_F->dsc_rdp_cl_1.achc_cert_key,
                               ADSL_RDPA_F->dsc_rdp_cl_1.imc_len_cert_key,
                               (unsigned char *) ACHL_WORK_AREA,
                               &iml3 );
#ifdef __INSURE__
   _Insure_checking_enable(1);
#endif
   m_sdh_printf( adsp_hl_clib_1, "p_cjr_frse_20 l%05d s%05d rsa_crypt_raw() client returned %d length %d.",
                 __LINE__, 27755,
                 iml2, iml3 );
   if (iml2) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
   }
   if (iml3 == 0) {
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
   }
   /* shorten the keys                                                 */
   bol1 = m_prepare_keys( adsp_hl_clib_1, &ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1 );
   if (bol1 == FALSE) {                     /* subroutine reported error */
         iml_line_no = __LINE__;
         iml_source_no = 5;    /* source line no for errors */
         goto pfrse92;
   }
   m_sdh_printf( adsp_hl_clib_1, "p_cjr_frse_20 l%05d s%05d after m_prepare_keys dsc_rdp_se_1.dsc_rdp_co_1.imc_used_keylen=%d.",
                 __LINE__, 27788,
                 ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imc_used_keylen );
   RC4_SetKey( ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_se2cl.chrc_rc4_state,
               ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_se2cl.chrc_cl_pkd,
               0, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imc_used_keylen );
   RC4_SetKey( ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.chrc_rc4_state,
               ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.chrc_cl_pkd,
               0, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imc_used_keylen );
   memset( ACHL_WORK_SHA1, 0X36, 40 );
   memset( ACHL_WORK_MD5, 0X5C, 48 );
   SHA1_Init( D_ADSL_RCO1->imrc_sha1_state );
   SHA1_Update( D_ADSL_RCO1->imrc_sha1_state, D_ADSL_RCO1->chrc_sig,
                0, D_ADSL_RCO1->imc_used_keylen );
   SHA1_Update( D_ADSL_RCO1->imrc_sha1_state, ACHL_WORK_SHA1, 0, 40 );
   MD5_Init( D_ADSL_RCO1->imrc_md5_state );
   MD5_Update( D_ADSL_RCO1->imrc_md5_state, D_ADSL_RCO1->chrc_sig,
               0, D_ADSL_RCO1->imc_used_keylen );
   MD5_Update( D_ADSL_RCO1->imrc_md5_state, ACHL_WORK_MD5, 0, 48 );
   /* send the block to the server                                     */
   iml1 = 8 + iml3 + D_RSA_KEY_PADDING;     /* length second part      */
   achl1 += 4 + sizeof(ucrs_x224_p01) + 6 + 2 + iml1;
   if (iml1 <= 127) achl1--;                /* length in one byte      */
   achl2 = achl1;                           /* end of this block       */
   achl2 -= D_RSA_KEY_PADDING;
   memset( achl2, 0, D_RSA_KEY_PADDING );
   /* send reverse encrypted client random from this client to server  */
   achl3 = ACHL_WORK_AREA;
   achl4 = ACHL_WORK_AREA + iml3;
   do {
     *(--achl2) = *achl3++;
   } while (achl3 < achl4);
   iml2 = achl1 - achl2;                    /* length this part        */
   *(--achl2) = 0;
   *(--achl2) = 0;
   achl2 -= 2;
   m_put_le2( achl2, iml2 );                /* output length           */
   *(--achl2) = 0;
   *(--achl2) = 0;
   *(--achl2) = (unsigned char) 0X02;
   *(--achl2) = (unsigned char) 0X01;
   if (iml1 <= 127) {                       /* length in one byte      */
     *(--achl2) = (unsigned char) iml1;
   } else {
     achl2 -= 2;
     m_put_be2( achl2, iml1 );
     *achl2 |= 0X80;                        /* length in two bytes     */
   }
   achl2 -= 13;                             /* here is start of block  */
   *achl2 = DEF_CONST_RDP_03;
   *(achl2 + 1) = 0;                        /* second byte zero        */
   m_put_be2( achl2 + 2, achl1 - achl2 );
   memcpy( achl2 + 4,
           ucrs_x224_p01,
           sizeof(ucrs_x224_p01) );
   *(achl2 + 4 + sizeof(ucrs_x224_p01)) = 0X64;  /* send data request  */
   m_put_be2( achl2 + 8,
              ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_userid_cl2se );
   m_put_be2( achl2 + 10, D_DISPLAY_CHANNEL );
   *(achl2 + 12) = 0X70;                    /* priority / segmentation */
#undef ACHL_CLIENT_RANDOM_CL
#undef ACHL_CLIENT_RANDOM_RE
#undef ACHL_CL_RAND_ENCRY
#undef ACHL_WORK_AREA
#undef ACHL_WORK_SHA1
#undef ACHL_WORK_MD5
   /* send log on information                                          */
   iml1 = sizeof(ucrs_logon_info_c1)
          + sizeof(D_ADSL_RCO1->umc_loinf_options)  /* Logon Info Options */
          + 5 * sizeof(unsigned short int)
          + D_ADSL_RCO1->usc_loinf_domna_len  /* Domain Name Length    */
          + sizeof(unsigned short int)
          + D_ADSL_RCO1->usc_loinf_userna_len  /* User Name Length     */
          + sizeof(unsigned short int)
          + D_ADSL_RCO1->usc_loinf_pwd_len  /* Password Length         */
          + sizeof(unsigned short int)
          + D_ADSL_RCO1->usc_loinf_altsh_len  /* Alt Shell Length      */
          + sizeof(unsigned short int)
          + D_ADSL_RCO1->usc_loinf_wodir_len  /* Working Directory Length */
          + sizeof(unsigned short int)
          + sizeof(unsigned short int)
          + sizeof(unsigned short int)
          + D_ADSL_RCO1->usc_loinf_ineta_len  /* INETA Length          */
          + sizeof(unsigned short int)
          + D_ADSL_RCO1->usc_loinf_path_len  /* Client Path Length     */
          + D_ADSL_RCO1->usc_loinf_extra_len;  /* Extra Parameters Length */
   achl3 = achl1;                           /* save start of output    */
   *achl1 = DEF_CONST_RDP_03;
   *(achl1 + 1) = 0;                        /* second byte zero        */
   memcpy( achl1 + 4,
           ucrs_x224_p01,
           sizeof(ucrs_x224_p01) );
   *(achl1 + 4 + sizeof(ucrs_x224_p01)) = 0X64;  /* send data request  */
   achl1 += 4 + sizeof(ucrs_x224_p01) + 1;
   m_put_be2( achl1, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_userid_cl2se );
   achl1 += 2;
   m_put_be2( achl1, D_ADSL_RCL1->imc_prot_chno );
   achl1 += 2;
   *achl1++ = 0X70;                         /* priority / segmentation */
   if (iml1 <= (127 - 4 - D_SIZE_HASH)) {   /* length in one byte      */
     *achl1++ = (unsigned char) (iml1 + 4 + D_SIZE_HASH);
   } else {
     m_put_be2( achl1, iml1 + 4 + D_SIZE_HASH );
     *achl1 |= 0X80;                        /* length in two bytes     */
     achl1 += 2;
   }
   *achl1++ = (unsigned char) 0X48;         /* rt02 - logon information + data is encrypted */
   *achl1++ = 0;                            /* rt03                    */
   /* two bytes padding zero                                           */
   *achl1++ = 0;
   *achl1++ = 0;
   /* leave eight bytes for hash                                       */
   achl2 = achl1 + D_SIZE_HASH;             /* start output here      */
   memcpy( achl2,
           ucrs_logon_info_c1,
           sizeof(ucrs_logon_info_c1) );
   achl2 += sizeof(ucrs_logon_info_c1);
   m_put_le4( achl2, D_ADSL_RCO1->umc_loinf_options );
   achl2 += sizeof(D_ADSL_RCO1->umc_loinf_options);
   m_put_le2( achl2, D_ADSL_RCO1->usc_loinf_domna_len );  /* Domain Name Length */
   achl2 += sizeof(unsigned short int);
   m_put_le2( achl2, D_ADSL_RCO1->usc_loinf_userna_len );  /* User Name Length   */
   achl2 += sizeof(unsigned short int);
   m_put_le2( achl2, D_ADSL_RCO1->usc_loinf_pwd_len );  /* Password Length       */
   achl2 += sizeof(unsigned short int);
   m_put_le2( achl2, D_ADSL_RCO1->usc_loinf_altsh_len );  /* Alt Shell Length    */
   achl2 += sizeof(unsigned short int);
   m_put_le2( achl2, D_ADSL_RCO1->usc_loinf_wodir_len );  /* Working Directory Length */
   achl2 += sizeof(unsigned short int);
   iml2 = 0;                                /* bytes to clear          */
   if (D_ADSL_RCO1->usc_loinf_domna_len) {  /* Domain Name Length   */
     memcpy( achl2,
             D_ADSL_RCO1->awcc_loinf_domna_a,
             D_ADSL_RCO1->usc_loinf_domna_len );
     achl2 += D_ADSL_RCO1->usc_loinf_domna_len;
   }
   iml2 = 2;                                /* bytes to clear          */
   if (D_ADSL_RCO1->usc_loinf_userna_len) {  /* User Name Length       */
     memset( achl2, 0, iml2 );              /* clear content           */
     achl2 += iml2;                         /* increment output pointer */
     memcpy( achl2,
             D_ADSL_RCO1->awcc_loinf_userna_a,
             D_ADSL_RCO1->usc_loinf_userna_len );
     achl2 += D_ADSL_RCO1->usc_loinf_userna_len;
     iml2 = 0;                              /* bytes to clear          */
   }
   iml2 += 2;                               /* bytes to clear          */
   if (D_ADSL_RCO1->usc_loinf_pwd_len) {    /* Password Length         */
     memset( achl2, 0, iml2 );              /* clear content           */
     achl2 += iml2;                         /* increment output pointer */
     memcpy( achl2,
             D_ADSL_RCO1->awcc_loinf_pwd_a,
             D_ADSL_RCO1->usc_loinf_pwd_len );
     achl2 += D_ADSL_RCO1->usc_loinf_pwd_len;
     iml2 = 0;                              /* bytes to clear          */
   }
   iml2 += 2;                               /* bytes to clear          */
   if (D_ADSL_RCO1->usc_loinf_altsh_len) {  /* Alt Shell Length        */
     memset( achl2, 0, iml2 );              /* clear content           */
     achl2 += iml2;                         /* increment output pointer */
     memcpy( achl2,
             D_ADSL_RCO1->awcc_loinf_altsh_a,
             D_ADSL_RCO1->usc_loinf_altsh_len );
     achl2 += D_ADSL_RCO1->usc_loinf_altsh_len;
     iml2 = 0;                              /* bytes to clear          */
   }
   iml2 += 2;                               /* bytes to clear          */
   if (D_ADSL_RCO1->usc_loinf_wodir_len) {  /* Working Directory Length */
     memset( achl2, 0, iml2 );              /* clear content           */
     achl2 += iml2;                         /* increment output pointer */
     memcpy( achl2,
             D_ADSL_RCO1->awcc_loinf_wodir_a,
             D_ADSL_RCO1->usc_loinf_wodir_len );
     achl2 += D_ADSL_RCO1->usc_loinf_wodir_len;
     iml2 = 0;                              /* bytes to clear          */
   }
   iml2 += 2;                               /* bytes to clear          */
   memset( achl2, 0, iml2 );                /* clear content           */
   achl2 += iml2;                           /* increment output pointer */
   m_put_le2( achl2, D_ADSL_RCO1->usc_loinf_no_a_par );  /* number of additional parameters */
   achl2 += sizeof(unsigned short int);
   m_put_le2( achl2, D_ADSL_RCO1->usc_loinf_ineta_len );  /* INETA Length */
   achl2 += sizeof(unsigned short int);
   memcpy( achl2,
           D_ADSL_RCO1->awcc_loinf_ineta_a,
           D_ADSL_RCO1->usc_loinf_ineta_len );
   achl2 += D_ADSL_RCO1->usc_loinf_ineta_len;
   m_put_le2( achl2, D_ADSL_RCO1->usc_loinf_path_len );  /* Client Path Length */
   achl2 += sizeof(unsigned short int);
   memcpy( achl2,
           D_ADSL_RCO1->awcc_loinf_path_a,
           D_ADSL_RCO1->usc_loinf_path_len );
   achl2 += D_ADSL_RCO1->usc_loinf_path_len;
   memcpy( achl2,
           D_ADSL_RCO1->awcc_loinf_extra_a,
           D_ADSL_RCO1->usc_loinf_extra_len );
// achl1 += D_ADSL_RCO1->usc_loinf_extra_len;
   if ((ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.imc_count_sent & (4096 - 1)) == 0){
     if (ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.imc_count_sent) {
       m_update_keys( &ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1, &ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se, NULL );
     }
   }
   m_sdh_printf( adsp_hl_clib_1, "p_cjr_frse_20 l%05d s%05d encrypt len=%d.",
                 __LINE__, 28017, iml1 );
   m_sdh_console_out( adsp_hl_clib_1, achl1 + D_SIZE_HASH, iml1 );
   /* generate random                                                  */
#define ACHL_WORK_SHA1 ((int *) chrl_work_2)
#define ACHL_WORK_MD5 ((int *) ((char *) ((char *) ACHL_WORK_SHA1 + SHA_ARRAY_SIZE * sizeof(int))))
#define ACHL_WORK_UTIL_01 ((char *) ACHL_WORK_MD5 + MD5_ARRAY_SIZE * sizeof(int))
   memcpy( ACHL_WORK_SHA1,
           ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_sha1_state,
           sizeof(ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_sha1_state) );
   memcpy( ACHL_WORK_MD5,
           ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_md5_state,
           sizeof(ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_md5_state) );
   m_put_le4( ACHL_WORK_UTIL_01, iml1 );
   SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0, 4 );
   SHA1_Update( ACHL_WORK_SHA1,
                achl1 + D_SIZE_HASH, 0, iml1 );
   RC4( achl1 + D_SIZE_HASH, 0, iml1, achl1 + D_SIZE_HASH, 0,
        ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.chrc_rc4_state );
   SHA1_Final( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0 );
   MD5_Update( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0, 20 );
   MD5_Final( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0 );
   memcpy( achl1, ACHL_WORK_UTIL_01, D_SIZE_HASH );
#undef ACHL_WORK_SHA1
#undef ACHL_WORK_MD5
#undef ACHL_WORK_UTIL_01
   achl1 += D_SIZE_HASH + iml1;
   m_put_be2( achl3 + 2, achl1 - achl3 );
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.imc_count_sent++;  /* count block sent */
   D_ADSL_RCL1->iec_frse_bl = ied_frse_lic_pr_1_rec;  /* receive block licence protocol */

   p_cjr_frse_80:                           /* fields have been set    */
   ADSL_OA1->achc_upper -= sizeof(struct dsd_gather_i_1);
#define ADSL_GAI1_OUT_G ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)
   ADSL_GAI1_OUT_G->adsc_next = NULL;
   ADSL_GAI1_OUT_G->achc_ginp_cur = ADSL_OA1->achc_lower;
   ADSL_GAI1_OUT_G->achc_ginp_end = achl1;
   ADSL_OA1->achc_lower = achl1;            /* this area occupied      */
   *ADSL_OA1->aadsc_gai1_out_to_server = ADSL_GAI1_OUT_G;  /* output data to server */
   ADSL_OA1->aadsc_gai1_out_to_server = &ADSL_GAI1_OUT_G->adsc_next;  /* new chain output data to server */
#undef ADSL_GAI1_OUT_G
   D_ADSL_RCL1->iec_fsfp_bl = ied_fsfp_rec_type;  /* first record type */
   goto pfrse20;                            /* process next data       */

   pfrse80:                                 /* send to client          */
   m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d pfrse80 return iec_frse_bl=%d %s + iec_fsfp_bl=%d %s.",
                 __LINE__, 28192,  /* line number for errors  */
                 ADSL_RDPA_F->dsc_rdp_cl_1.iec_frse_bl,
                 m_ret_t_ied_frse_bl( ADSL_RDPA_F->dsc_rdp_cl_1.iec_frse_bl ),
                 ADSL_RDPA_F->dsc_rdp_cl_1.iec_fsfp_bl,
                 m_ret_t_ied_fsfp_bl( ADSL_RDPA_F->dsc_rdp_cl_1.iec_fsfp_bl ) );
// to-do 13.03.12 KB
   goto p_rcsub1_tose_00;                   /* process commands to server */

   pfrse92:                                 /* protocol error          */
   m_sdh_printf( adsp_hl_clib_1, "pfrse92 - protocoll error received from server iec_frse_bl=%d iec_fsfp_bl=%d l%05d s%05d inp_cur=%p pos=%d/0X%08X",
                 ADSL_RDPA_F->dsc_rdp_cl_1.iec_frse_bl,
                 ADSL_RDPA_F->dsc_rdp_cl_1.iec_fsfp_bl,
                 iml_line_no,               /* line number for errors  */
                 iml_source_no,             /* source line no for errors */
                 adsl_gai1_inp_1->achc_ginp_cur,
                 iml_rec, iml_rec );
   if (adsl_gai1_inp_1) {
     m_sdh_printf( adsp_hl_clib_1, "pfrse92 l%05d achl_inp_start=%p achc_ginp_cur=%p achc_ginp_end=%p pos=%04X.",
                   __LINE__,
                   achl_inp_start,
                   adsl_gai1_inp_1->achc_ginp_cur,
                   adsl_gai1_inp_1->achc_ginp_end,
                   adsl_gai1_inp_1->achc_ginp_cur - achl_inp_start );
     iml1 = adsl_gai1_inp_1->achc_ginp_end - achl_inp_start;
     if ((iml1 > 0) && (iml1 <= 0X4000)) {
       m_sdh_console_out( adsp_hl_clib_1, achl_inp_start, iml1 );
     }
   }
   iml1 = 0;
   do {
     m_sdh_printf( adsp_hl_clib_1, "l%05d pfrse92 %d. ord_f1_1=%p / %p - order %d/0X%02X.",
                   __LINE__, iml1 + 1,
                   achrl_trace_ord_fl[ iml1 ], achrl_trace_ord_fl[ iml1 ] - achl_inp_start,
                   (unsigned char) chrl_trace_ord_fl_order[ iml1 ],
                   (unsigned char) chrl_trace_ord_fl_order[ iml1 ] );
     iml1++;
   } while (iml1 < D_NO_TRACE_ORD_FL);
   m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d pfrse92 iec_frse_bl=%d %s + iec_fsfp_bl=%d %s.",
                 __LINE__, 28326,  /* line number for errors  */
                 ADSL_RDPA_F->dsc_rdp_cl_1.iec_frse_bl,
                 m_ret_t_ied_frse_bl( ADSL_RDPA_F->dsc_rdp_cl_1.iec_frse_bl ),
                 ADSL_RDPA_F->dsc_rdp_cl_1.iec_fsfp_bl,
                 m_ret_t_ied_fsfp_bl( ADSL_RDPA_F->dsc_rdp_cl_1.iec_fsfp_bl ) );
   m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d pfrse92 D_ADSL_RCL1->imc_prot_1=%d/0X%08X imc_prot_2=%d/0X%08X imc_prot_3=%d/0X%08X.",
                 __LINE__, 28332,  /* line number for errors  */
                 D_ADSL_RCL1->imc_prot_1, D_ADSL_RCL1->imc_prot_1,
                 D_ADSL_RCL1->imc_prot_2, D_ADSL_RCL1->imc_prot_2,
                 D_ADSL_RCL1->imc_prot_3, D_ADSL_RCL1->imc_prot_3 );
   m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d pfrse92 D_ADSL_RCL1->imc_prot_4=%d/0X%08X imc_prot_5=%d/0X%08X imc_prot_6=%d/0X%08X.",
                 __LINE__, 28337,  /* line number for errors  */
                 D_ADSL_RCL1->imc_prot_1, D_ADSL_RCL1->imc_prot_4,
                 D_ADSL_RCL1->imc_prot_2, D_ADSL_RCL1->imc_prot_5,
                 D_ADSL_RCL1->imc_prot_3, D_ADSL_RCL1->imc_prot_6 );
#ifdef D_FFLUSH                             /* 30.05.05 KB - flush stdout */
   fflush( stdout );
#endif                                      /* 30.05.05 KB - flush stdout */
#ifdef D_FOR_TRACE1                         /* 31.05.05 KB - help in tracing */
   iml1++;
   iml1--;
#endif                                      /* 31.05.05 KB - help in tracing */
#ifdef TRACE_LOOP_1
   while (ADSL_RDPA_F) {
     Sleep( 2000 );
   }
#endif
   adsl_gai1_inp_1->achc_ginp_cur
     = adsl_gai1_inp_1->achc_ginp_end;
   goto p_cleanup_00;                       /* do cleanup now          */

   pfrse96:                                 /* program illogic         */
   m_sdh_printf( adsp_hl_clib_1, "pfrse96 - program illogic received from server iec_frse_bl=%d iec_fsfp_bl=%d l%05d s%05d inp_cur=%p pos=%d/0X%08X",
                 ADSL_RDPA_F->dsc_rdp_cl_1.iec_frse_bl,
                 ADSL_RDPA_F->dsc_rdp_cl_1.iec_fsfp_bl,
                 iml_line_no,               /* line number for errors  */
                 iml_source_no,             /* source line no for errors */
                 adsl_gai1_inp_1->achc_ginp_cur,
                 iml_rec, iml_rec );
   if (adsl_gai1_inp_1) {
     m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d pfrse96 achl_inp_start=%p achc_ginp_cur=%p achc_ginp_end=%p pos=%04X.",
                   __LINE__, 28389,  /* line number for errors */
                   achl_inp_start,
                   adsl_gai1_inp_1->achc_ginp_cur,
                   adsl_gai1_inp_1->achc_ginp_end,
                   adsl_gai1_inp_1->achc_ginp_cur - achl_inp_start );
     iml1 = adsl_gai1_inp_1->achc_ginp_end - achl_inp_start;
     if ((iml1 > 0) && (iml1 <= 0X4000)) {
       m_sdh_console_out( adsp_hl_clib_1, achl_inp_start, iml1 );
     }
   }
   iml1 = 0;
   do {
     m_sdh_printf( adsp_hl_clib_1, "l%05d pfrse96 %d. ord_f1_1=%p / %p - order %d/0X%02X.",
                   __LINE__, iml1 + 1,
                   achrl_trace_ord_fl[ iml1 ], achrl_trace_ord_fl[ iml1 ] - achl_inp_start,
                   (unsigned char) chrl_trace_ord_fl_order[ iml1 ],
                   (unsigned char) chrl_trace_ord_fl_order[ iml1 ] );
     iml1++;
   } while (iml1 < D_NO_TRACE_ORD_FL);
#ifdef D_FFLUSH                             /* 30.05.05 KB - flush stdout */
   fflush( stdout );
#endif                                      /* 30.05.05 KB - flush stdout */
#ifdef TRACE_LOOP_1
   while (ADSL_RDPA_F) {
     Sleep( 2000 );
   }
#endif
   adsl_gai1_inp_1->achc_ginp_cur
     = adsl_gai1_inp_1->achc_ginp_end;
   goto p_cleanup_00;                       /* do cleanup now          */
#ifndef HELP_DEBUG
#undef D_ADSL_RCL1
#undef D_ADSL_RCO1
#endif

   p_rcsub1_tose_00:                        /* process commands to server */

   p_rcsub1_tose_04:                        /* work-area prepared      */
   bol1 = FALSE;                            /* no command processed    */

   p_rcsub1_tose_20:                        /* process next command to server */
   adsl_cc_co1_w1 = adsp_hl_clib_1->adsc_cc_co1_ch;  /* get first command in chain */
   if (adsl_cc_co1_w1 == NULL) {            /* end of command chain    */
     if (bol1 == FALSE) {                   /* no command processed    */
       goto p_ret_00;                       /* check how to return     */
     }
     goto p_rcsub1_tose_04;                 /* process commands to server */
   }
   switch (adsl_cc_co1_w1->iec_cc_command) {  /* client component command */
     case ied_ccc_start_rdp_client:         /* start the RDP client    */
       goto p_rcsub1_start_rdp_client;      /* start the RDP client    */
     case ied_ccc_events_mouse_keyb:        /* events from mouse or keyboard */
//     goto p_rcsub1_events_mouse_keyb;     /* events from mouse or keyboard */
#define ADSL_CC_EMK_G ((struct dsd_cc_events_mouse_keyb *) (adsl_cc_co1_w1 + 1))
       m_send_cl2se_rdp5( adsp_hl_clib_1, &dsl_output_area_1,
                          ADSL_CC_EMK_G->achc_event_buf,  /* buffer with events */
                          ADSL_CC_EMK_G->imc_events_len,  /* length of events */
                          ADSL_CC_EMK_G->imc_no_order | 0X10 );  /* number of orders, with block-count */
#undef ADSL_CC_EMK_G
       adsp_hl_clib_1->adsc_cc_co1_ch = adsl_cc_co1_w1->adsc_next;  /* remove command from chain */
       goto p_rcsub1_tose_04;               /* work-area prepared      */
     case ied_ccc_vch_out:                  /* output to virtual channel */
#define ADSL_RDP_VCH_IO_G ((struct dsd_rdp_vch_io *) (adsl_cc_co1_w1 + 1))
       bol1 = m_send_vch_tose( adsp_hl_clib_1,
                               ADSL_OA1,
                               ADSL_RDP_VCH_IO_G,
                               chrl_work_2 );
       if (bol1 == FALSE) goto p_cleanup_00;  /* do cleanup now        */
#undef ADSL_RDP_VCH_IO_G
       adsp_hl_clib_1->adsc_cc_co1_ch = adsl_cc_co1_w1->adsc_next;  /* remove command from chain */
       goto p_rcsub1_tose_04;               /* work-area prepared      */
     case ied_ccc_send_confirm_active_pdu:  /* send Confirm Active PDU */
       ADSL_RDPA_F->ac_screen_buffer = ADSL_RDPA_F->dsc_rdp_cl_1.ac_paint_buffer
         = adsp_hl_clib_1->ac_screen_buffer;  /* buffer to paint to    */
       m_send_cl2se_conf_act_pdu( adsp_hl_clib_1, &dsl_output_area_1 );
       break;                               /* all done                */
     case ied_ccc_pass_license:             /* Send a Client license info or Client New License Request */
       bol1 = m_send_cl2se_license( adsp_hl_clib_1, &dsl_output_area_1,
                                    (struct dsd_cc_pass_license *) (adsl_cc_co1_w1 + 1),
                                    chrl_work_1, sizeof(chrl_work_1),
                                    chrl_work_2, sizeof(chrl_work_2) );
       if (bol1 == FALSE) goto p_cleanup_00;  /* do cleanup now        */
       break;
   }

   p_rcsub1_tose_40:                        /* command to server processed */
   adsp_hl_clib_1->adsc_cc_co1_ch = adsl_cc_co1_w1->adsc_next;  /* remove from chain */
   bol1 = TRUE;                             /* command processed       */
   goto p_rcsub1_tose_20;                   /* process next command to server */


   p_rcsub1_start_rdp_client:               /* start the RDP client    */
#define ADSL_CC_SRC_G ((struct dsd_cc_start_rdp_client *) (adsl_cc_co1_w1 + 1))
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imc_dim_x = ADSL_CC_SRC_G->imc_dim_x;  /* dimension x pixels */
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imc_dim_y = ADSL_CC_SRC_G->imc_dim_y;  /* dimension y pixels */
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imc_s_coldep = ADSL_CC_SRC_G->imc_coldep;  /* colour depth */
// ADSL_CC_SRC_G->imc_coldep = 16;          /* colour depth            */
// to-do 10.04.12 KB - should RDP-client generate umc_loinf_options from other values - like compression ???
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.umc_loinf_options = ADSL_CC_SRC_G->umc_loinf_options;  /* Logon Info Options */
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.awcc_loinf_domna_a = ADSL_CC_SRC_G->awcc_loinf_domna_a;  /* Domain Name */
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_loinf_domna_len = ADSL_CC_SRC_G->usc_loinf_domna_len;  /* Domain Name Length */
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.awcc_loinf_userna_a = ADSL_CC_SRC_G->awcc_loinf_userna_a;  /* User Name */
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_loinf_userna_len = ADSL_CC_SRC_G->usc_loinf_userna_len;  /* User Name Length */
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.awcc_loinf_pwd_a = ADSL_CC_SRC_G->awcc_loinf_pwd_a;  /* Password */
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_loinf_pwd_len = ADSL_CC_SRC_G->usc_loinf_pwd_len;  /* Password Length */
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.awcc_loinf_altsh_a = ADSL_CC_SRC_G->awcc_loinf_altsh_a;  /* Alt Shell */
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_loinf_altsh_len = ADSL_CC_SRC_G->usc_loinf_altsh_len;  /* Alt Shell Length */
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.awcc_loinf_wodir_a = ADSL_CC_SRC_G->awcc_loinf_wodir_a;  /* Working Directory */
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_loinf_wodir_len = ADSL_CC_SRC_G->usc_loinf_wodir_len;  /* Working Directory Length */
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_loinf_no_a_par = ADSL_CC_SRC_G->usc_loinf_no_a_par;  /* number of additional parameters */
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.awcc_loinf_ineta_a = ADSL_CC_SRC_G->awcc_loinf_ineta_a;  /* INETA */
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_loinf_ineta_len = ADSL_CC_SRC_G->usc_loinf_ineta_len;  /* INETA Length */
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.awcc_loinf_path_a = ADSL_CC_SRC_G->awcc_loinf_path_a;  /* Client Path */
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_loinf_path_len = ADSL_CC_SRC_G->usc_loinf_path_len;  /* Client Path Length */
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.awcc_loinf_extra_a = ADSL_CC_SRC_G->awcc_loinf_extra_a;  /* Extra Parameters */
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_loinf_extra_len = ADSL_CC_SRC_G->usc_loinf_extra_len;  /* Extra Parameters Length */
   if (ADSL_CC_SRC_G->imc_no_virt_ch > 0) {  /* number of virtual channels */
     ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.adsrc_vc_1  /* array of virtual channels */
       = (struct dsd_rdp_vc_1 *) m_aux_stor_alloc( &ADSL_RDPA_F->dsc_stor_sdh_1,
                                                     ADSL_CC_SRC_G->imc_no_virt_ch * sizeof(struct dsd_rdp_vc_1) );  /* number of virtual channels */
     memcpy( ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.adsrc_vc_1,  /* array of virtual channels */
             ADSL_CC_SRC_G->adsrc_vc_1,     /* array of virtual channels */
             ADSL_CC_SRC_G->imc_no_virt_ch * sizeof(struct dsd_rdp_vc_1) );  /* number of virtual channels */
     ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imc_no_virt_ch  /* number of virtual channels */
       = ADSL_CC_SRC_G->imc_no_virt_ch;     /* number of virtual channels */
   }
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.achc_machine_name = ADSL_CC_SRC_G->achc_machine_name;  /* Name of machine */
#undef ADSL_CC_SRC_G
#define ADSL_GAI1_OUT_G ((struct dsd_gather_i_1 *) adsp_hl_clib_1->achc_work_area)
   memset( ADSL_GAI1_OUT_G, 0, sizeof(struct dsd_gather_i_1) );
   ADSL_GAI1_OUT_G->achc_ginp_cur = (char *) ucrs_sese_01;
   ADSL_GAI1_OUT_G->achc_ginp_end = (char *) ucrs_sese_01 + sizeof(ucrs_sese_01);
#ifndef NEW_WSP_1102
   adsp_hl_clib_1->adsc_gather_i_1_out = ADSL_GAI1_OUT_G;
#else
   adsp_hl_clib_1->adsc_gai1_out_to_server = ADSL_GAI1_OUT_G;  /* output data to server */
#endif
#undef ADSL_GAI1_OUT_G
   ADSL_RDPA_F->dsc_rdp_cl_1.iec_fsfp_bl = ied_fsfp_rec_type;  /* first record type */
   /* check start compression                                          */
#define D_ADSL_CL_RCO1 (&ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1)
   if ((D_ADSL_CL_RCO1->umc_loinf_options & D_LOINFO_COMPR_ENA) == 0) {  /* compression not enabled */
     goto p_ret_00;                         /* check how to return     */
   }
   D_ADSL_CL_RCO1->dsc_cdrf_dec.vpc_userfld = adsp_hl_clib_1->vpc_userfld;
   D_ADSL_CL_RCO1->dsc_cdrf_dec.amc_aux = adsp_hl_clib_1->amc_aux;
   D_ADSL_CL_RCO1->amc_cdr_dec = &m_cdr_mppc_4_dec;  /* decoding routine */
   D_ADSL_CL_RCO1->dsc_cdrf_dec.imc_param_1 = 40;  /* RDP4             */
   if (D_ADSL_CL_RCO1->umc_loinf_options & D_LOINFO_COMPR_LDIC) {  /* use large dictionary */
     D_ADSL_CL_RCO1->dsc_cdrf_dec.imc_param_1 = 50;  /* RDP5           */
   }
   D_ADSL_CL_RCO1->amc_cdr_dec( &D_ADSL_CL_RCO1->dsc_cdrf_dec );
   m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d m_cdr_dec() &dsc_cdrf_dec=%p DEF_IFUNC_START imc_return=%d.",
                 __LINE__, 36655,
                 &D_ADSL_CL_RCO1->dsc_cdrf_dec,
                 D_ADSL_CL_RCO1->dsc_cdrf_dec.imc_return );
   if (D_ADSL_CL_RCO1->dsc_cdrf_dec.imc_return != DEF_IRET_NORMAL) {  /* continue processing */
     m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d de-compression error %d.",
                   __LINE__, 36661,  /* line number for errors */
                   D_ADSL_CL_RCO1->dsc_cdrf_dec.imc_return );
     goto p_cleanup_00;                     /* do cleanup now          */
   }
// D_ADSL_CL_RCO1->dsc_cdrf_enc.imc_func = DEF_IFUNC_START;
   D_ADSL_CL_RCO1->dsc_cdrf_enc.vpc_userfld = adsp_hl_clib_1->vpc_userfld;
   D_ADSL_CL_RCO1->dsc_cdrf_enc.amc_aux = adsp_hl_clib_1->amc_aux;
   D_ADSL_CL_RCO1->amc_cdr_enc = &m_cdr_mppc_4_enc;  /* encryption routine */
   D_ADSL_CL_RCO1->dsc_cdrf_enc.imc_param_1 = 40;  /* RDP4             */
   D_ADSL_CL_RCO1->amc_cdr_enc( &D_ADSL_CL_RCO1->dsc_cdrf_enc );
   m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d m_cdr_enc() &dsc_cdrf_enc=%p DEF_IFUNC_START imc_return=%d.",
                 __LINE__, 36673,
                 &D_ADSL_CL_RCO1->dsc_cdrf_enc,
                 D_ADSL_CL_RCO1->dsc_cdrf_enc.imc_return );
   if (D_ADSL_CL_RCO1->dsc_cdrf_enc.imc_return != DEF_IRET_NORMAL) {
     m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d compression error %d.",
                   __LINE__, 36679,  /* line number for errors */
                   D_ADSL_CL_RCO1->dsc_cdrf_enc.imc_return );
     goto p_cleanup_00;                     /* do cleanup now          */
   }
   goto p_ret_00;                           /* check how to return     */
#undef D_ADSL_CL_RCO1


   p_ret_00:                                /* check how to return     */
   if (adsp_hl_clib_1->boc_eof_server == FALSE) {  /* check End-of-File Server */
     return;
   }

   p_cleanup_00:                            /* do cleanup now          */
   adsp_hl_clib_1->inc_return = DEF_IRET_END;  /* set normal end       */

   p_cleanup_20:                            /* do cleanup now - part two */
   ADSL_RDPA_F->dsc_stor_sdh_1.amc_aux = adsp_hl_clib_1->amc_aux;
   ADSL_RDPA_F->dsc_stor_sdh_1.vpc_userfld = adsp_hl_clib_1->vpc_userfld;
   m_aux_stor_end( &ADSL_RDPA_F->dsc_stor_sdh_1 );
   bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                      DEF_AUX_MEMFREE,
                                      &adsp_hl_clib_1->ac_ext,
                                      sizeof(struct dsd_rdpa_f) );
   if (bol1 == FALSE) {                     /* aux returned error      */
     adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
   }
   adsp_hl_clib_1->ac_ext = NULL;           /* no more memory          */
   return;
#ifndef HELP_DEBUG
#undef ADSL_RDPA_F
#undef ADSL_OA1
#endif
} /* end m_hlclib01()                                                  */


/* generate keys for RDP encryption                                    */
static void m_gen_keys( struct dsd_call_rdpclient_1 *adsp_hl_clib_1,
     char *achp_client_random,
     struct dsd_rdp_co_client *adsp_rdp_co,  /* output in RDP communication */
     char *achp_work_area ) {               /* work area               */
   char       *achl1, *achl2, *achl3;       /* working variables       */
#ifdef HELP_DEBUG
   struct dsd_rdpa_f *ADSL_RDPA_F;
#endif

#ifndef HELP_DEBUG
#define ADSL_RDPA_F ((struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext)
#else
   ADSL_RDPA_F = (struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext;
#endif
#define ACHL_SHA_ARRAY ((int *) (achp_work_area + 0))
#define ACHL_SHA_DIG ((char *) ACHL_SHA_ARRAY + 24 * sizeof(int))
#define ACHL_MD5_ARRAY ((int *) (ACHL_SHA_DIG + 20))
#define ACHL_PRE_HASH ((char *) ACHL_MD5_ARRAY + 24 * sizeof(int))
#define ACHL_MASTER_H_1 (ACHL_PRE_HASH + 16 * 3)
#define ACHL_MASTER_H_2 (ACHL_MASTER_H_1 + 16)
#define ACHL_MASTER_H_3 (ACHL_MASTER_H_2 + 16)
   /* make first pre master hash                                       */
   SHA1_Init( ACHL_SHA_ARRAY );
   SHA1_Update( ACHL_SHA_ARRAY, (char *) ucrs_crypt_ini_01, 0, sizeof(ucrs_crypt_ini_01) );
   SHA1_Update( ACHL_SHA_ARRAY, achp_client_random, 0, 24 );
   SHA1_Update( ACHL_SHA_ARRAY, ADSL_RDPA_F->chrl_server_random, 0, 24 );
   SHA1_Update( ACHL_SHA_ARRAY, achp_client_random, 0, 32 );
   SHA1_Update( ACHL_SHA_ARRAY, ADSL_RDPA_F->chrl_server_random, 0, 32 );
   SHA1_Final( ACHL_SHA_ARRAY, ACHL_SHA_DIG, 0 );
   MD5_Init( ACHL_MD5_ARRAY );
   MD5_Update( ACHL_MD5_ARRAY, achp_client_random, 0, 24 );
   MD5_Update( ACHL_MD5_ARRAY, ADSL_RDPA_F->chrl_server_random, 0, 24 );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_SHA_DIG, 0, 20 );
   MD5_Final( ACHL_MD5_ARRAY, ACHL_PRE_HASH + 0, 0 );
   printf( "s%05d l%05d M_SALTHASH() ACHL_PRE_HASH + 0:\n",
           19,                  /* source line no for errors */
           __LINE__ );                      /* line number for errors  */
   m_console_out( (char *) ACHL_PRE_HASH + 0, 16 );
   /* make second pre master hash                                      */
   SHA1_Init( ACHL_SHA_ARRAY );
   SHA1_Update( ACHL_SHA_ARRAY, (char *) ucrs_crypt_ini_02, 0, sizeof(ucrs_crypt_ini_02) );
   SHA1_Update( ACHL_SHA_ARRAY, achp_client_random, 0, 24 );
   SHA1_Update( ACHL_SHA_ARRAY, ADSL_RDPA_F->chrl_server_random, 0, 24 );
   SHA1_Update( ACHL_SHA_ARRAY, achp_client_random, 0, 32 );
   SHA1_Update( ACHL_SHA_ARRAY, ADSL_RDPA_F->chrl_server_random, 0, 32 );
   SHA1_Final( ACHL_SHA_ARRAY, ACHL_SHA_DIG, 0 );
   MD5_Init( ACHL_MD5_ARRAY );
   MD5_Update( ACHL_MD5_ARRAY, achp_client_random, 0, 24 );
   MD5_Update( ACHL_MD5_ARRAY, ADSL_RDPA_F->chrl_server_random, 0, 24 );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_SHA_DIG, 0, 20 );
   MD5_Final( ACHL_MD5_ARRAY, ACHL_PRE_HASH + 16, 0 );
   printf( "s%05d l%05d M_SALTHASH() ACHL_PRE_HASH + 16:\n",
           19,                  /* source line no for errors */
           __LINE__ );                      /* line number for errors  */
   m_console_out( (char *) ACHL_PRE_HASH + 16, 16 );
   /* make third pre master hash                                       */
   SHA1_Init( ACHL_SHA_ARRAY );
   SHA1_Update( ACHL_SHA_ARRAY, (char *) ucrs_crypt_ini_03, 0, sizeof(ucrs_crypt_ini_03) );
   SHA1_Update( ACHL_SHA_ARRAY, achp_client_random, 0, 24 );
   SHA1_Update( ACHL_SHA_ARRAY, ADSL_RDPA_F->chrl_server_random, 0, 24 );
   SHA1_Update( ACHL_SHA_ARRAY, achp_client_random, 0, 32 );
   SHA1_Update( ACHL_SHA_ARRAY, ADSL_RDPA_F->chrl_server_random, 0, 32 );
   SHA1_Final( ACHL_SHA_ARRAY, ACHL_SHA_DIG, 0 );
   MD5_Init( ACHL_MD5_ARRAY );
   MD5_Update( ACHL_MD5_ARRAY, achp_client_random, 0, 24 );
   MD5_Update( ACHL_MD5_ARRAY, ADSL_RDPA_F->chrl_server_random, 0, 24 );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_SHA_DIG, 0, 20 );
   MD5_Final( ACHL_MD5_ARRAY, ACHL_PRE_HASH + 32, 0 );
   printf( "s%05d l%05d M_SALTHASH() ACHL_PRE_HASH + 32:\n",
           19,                  /* source line no for errors */
           __LINE__ );                      /* line number for errors  */
   m_console_out( (char *) ACHL_PRE_HASH + 32, 16 );
   /* make first master hash                                           */
   SHA1_Init( ACHL_SHA_ARRAY );
   SHA1_Update( ACHL_SHA_ARRAY, (char *) ucrs_crypt_ini_04, 0, sizeof(ucrs_crypt_ini_04) );
   SHA1_Update( ACHL_SHA_ARRAY, ACHL_PRE_HASH, 0, 48 );
   SHA1_Update( ACHL_SHA_ARRAY, achp_client_random, 0, 32 );
   SHA1_Update( ACHL_SHA_ARRAY, ADSL_RDPA_F->chrl_server_random, 0, 32 );
   SHA1_Final( ACHL_SHA_ARRAY, ACHL_SHA_DIG, 0 );
   MD5_Init( ACHL_MD5_ARRAY );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_PRE_HASH, 0, 48 );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_SHA_DIG, 0, 20 );
   MD5_Final( ACHL_MD5_ARRAY, ACHL_MASTER_H_1, 0 );
   printf( "s%05d l%05d M_SALTHASH() ACHL_MASTER_H_1:\n",
           19,                  /* source line no for errors */
           __LINE__ );                      /* line number for errors  */
   m_console_out( (char *) ACHL_MASTER_H_1, 16 );
   /* make second master hash                                          */
   SHA1_Init( ACHL_SHA_ARRAY );
   SHA1_Update( ACHL_SHA_ARRAY, (char *) ucrs_crypt_ini_05, 0, sizeof(ucrs_crypt_ini_05) );
   SHA1_Update( ACHL_SHA_ARRAY, ACHL_PRE_HASH, 0, 48 );
   SHA1_Update( ACHL_SHA_ARRAY, achp_client_random, 0, 32 );
   SHA1_Update( ACHL_SHA_ARRAY, ADSL_RDPA_F->chrl_server_random, 0, 32 );
   SHA1_Final( ACHL_SHA_ARRAY, ACHL_SHA_DIG, 0 );
   MD5_Init( ACHL_MD5_ARRAY );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_PRE_HASH, 0, 48 );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_SHA_DIG, 0, 20 );
   MD5_Final( ACHL_MD5_ARRAY, ACHL_MASTER_H_2, 0 );
   printf( "s%05d l%05d M_SALTHASH() ACHL_MASTER_H_2:\n",
           19,                  /* source line no for errors */
           __LINE__ );                      /* line number for errors  */
   m_console_out( (char *) ACHL_MASTER_H_2, 16 );
   /* make third master hash                                           */
   SHA1_Init( ACHL_SHA_ARRAY );
   SHA1_Update( ACHL_SHA_ARRAY, (char *) ucrs_crypt_ini_06, 0, sizeof(ucrs_crypt_ini_06) );
   SHA1_Update( ACHL_SHA_ARRAY, ACHL_PRE_HASH, 0, 48 );
   SHA1_Update( ACHL_SHA_ARRAY, achp_client_random, 0, 32 );
   SHA1_Update( ACHL_SHA_ARRAY, ADSL_RDPA_F->chrl_server_random, 0, 32 );
   SHA1_Final( ACHL_SHA_ARRAY, ACHL_SHA_DIG, 0 );
   MD5_Init( ACHL_MD5_ARRAY );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_PRE_HASH, 0, 48 );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_SHA_DIG, 0, 20 );
   MD5_Final( ACHL_MD5_ARRAY, ACHL_MASTER_H_3, 0 );
   printf( "s%05d l%05d M_SALTHASH() ACHL_MASTER_H_3:\n",
           19,                  /* source line no for errors */
           __LINE__ );                      /* line number for errors  */
   m_console_out( (char *) ACHL_MASTER_H_3, 16 );
   /* signature                                                        */
   memcpy( adsp_rdp_co->chrc_sig, ACHL_MASTER_H_1, sizeof(adsp_rdp_co->chrc_sig) );
   /* client receive pre key data                                      */
   MD5_Init( ACHL_MD5_ARRAY );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_MASTER_H_2, 0, 16 );
   MD5_Update( ACHL_MD5_ARRAY, achp_client_random, 0, 32 );
   MD5_Update( ACHL_MD5_ARRAY, ADSL_RDPA_F->chrl_server_random, 0, 32 );
   MD5_Final( ACHL_MD5_ARRAY, adsp_rdp_co->dsc_encry_se2cl.chrc_cl_pkd, 0 );
   /* save original key data for future key update calculations        */
   memcpy( adsp_rdp_co->dsc_encry_se2cl.chrc_orig_pkd,
           adsp_rdp_co->dsc_encry_se2cl.chrc_cl_pkd,
           sizeof(adsp_rdp_co->dsc_encry_se2cl.chrc_orig_pkd) );
#ifdef TRACEHL1
   printf( "receive pre key data :" );
   achl1 = adsp_rdp_co->dsc_encry_se2cl.chrc_cl_pkd;
   achl2 = achl1 + 16;
   achl3 = achl1 + 4;
   do {
     if (achl1 == achl3) {
       printf( " " );
       achl3 = achl1 + 4;
     }
     printf( " %02X", (unsigned char) *achl1++ );
   } while (achl1 < achl2);
   printf( "\n" );
#endif
   /* client transmit pre key data                                     */
   MD5_Init( ACHL_MD5_ARRAY );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_MASTER_H_3, 0, 16 );
   MD5_Update( ACHL_MD5_ARRAY, achp_client_random, 0, 32 );
   MD5_Update( ACHL_MD5_ARRAY, ADSL_RDPA_F->chrl_server_random, 0, 32 );
   MD5_Final( ACHL_MD5_ARRAY, adsp_rdp_co->dsc_encry_cl2se.chrc_cl_pkd, 0 );
   /* save original key data for future key update calculations        */
   memcpy( adsp_rdp_co->dsc_encry_cl2se.chrc_orig_pkd,
           adsp_rdp_co->dsc_encry_cl2se.chrc_cl_pkd,
           sizeof(adsp_rdp_co->dsc_encry_cl2se.chrc_orig_pkd) );
#ifdef TRACEHL1
   printf( "transmit pre key data:" );
   achl1 = adsp_rdp_co->dsc_encry_cl2se.chrc_cl_pkd;
   achl2 = achl1 + 16;
   achl3 = achl1 + 4;
   do {
     if (achl1 == achl3) {
       printf( " " );
       achl3 = achl1 + 4;
     }
     printf( " %02X", (unsigned char) *achl1++ );
   } while (achl1 < achl2);
   printf( "\n" );
#endif
   return;
#ifndef HELP_DEBUG
#undef ADSL_RDPA_F
#endif
#undef ACHL_SHA_ARRAY
#undef ACHL_SHA_DIG
#undef ACHL_MD5_ARRAY
#undef ACHL_PRE_HASH
#undef ACHL_MASTER_H_1
#undef ACHL_MASTER_H_2
#undef ACHL_MASTER_H_3
} /* end m_gen_keys()                                                  */

/* prepare keys for RDP encryption                                     */
static BOOL m_prepare_keys( struct dsd_call_rdpclient_1 *adsp_hl_clib_1,
     struct dsd_rdp_co_client *adsp_rdp_co ) {  /* output in RDP communication */
#ifdef HELP_DEBUG
   struct dsd_rdpa_f *ADSL_RDPA_F;
#endif

#ifndef HELP_DEBUG
#define ADSL_RDPA_F ((struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext)
#else
   ADSL_RDPA_F = (struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext;
#endif
   /* shorten the keys                                                 */
   switch ( adsp_rdp_co->imc_keytype) {
     case 1:
       memcpy( adsp_rdp_co->dsc_encry_se2cl.chrc_cl_pkd, ucrs_ks_01, sizeof(ucrs_ks_01) );
       memcpy( adsp_rdp_co->dsc_encry_cl2se.chrc_cl_pkd, ucrs_ks_01, sizeof(ucrs_ks_01) );
       adsp_rdp_co->imc_used_keylen = 8;
       break;
     case 2:
       adsp_rdp_co->imc_used_keylen = 16;
       break;
     case 4:
     case 8:
       adsp_rdp_co->dsc_encry_se2cl.chrc_cl_pkd[0] = (char) 0XD1;
       adsp_rdp_co->dsc_encry_cl2se.chrc_cl_pkd[0] = (char) 0XD1;
       adsp_rdp_co->imc_used_keylen = 8;
       break;
     default:
       return FALSE;                        /* protocol error          */
   }
   return TRUE;                             /* all valid               */
#ifndef HELP_DEBUG
#undef ADSL_RDPA_F
#endif
} /* end m_prepare_keys()                                              */

static void m_update_keys( struct dsd_rdp_co_client *adsp_rdp_co,
                           struct dsd_rdp_encry *adsp_encry,
                           char *achp_work_area ) {
// char       chrl_work_1[ SHA_ARRAY_SIZE * sizeof(int)
//                         + MD5_ARRAY_SIZE * sizeof(int) ];
   char       chrl_work_1[ 2048 ];

   printf( "s%05d l%05d m_update_keys() adsp_encry=%p imc_count_sent=%d/0X%X\n",
           37383,                  /* source line no for errors */
           __LINE__,                        /* line number for errors  */
           adsp_encry, adsp_encry->imc_count_sent, adsp_encry->imc_count_sent );
#define ACHL_CONST_SHA1 ((char *) chrl_work_1)
#define ACHL_CONST_MD5 ((char *) chrl_work_1 + 40)
#define ACHL_WORK_SHA1 ((int *) ((char *) chrl_work_1 + 40 + 48))
#define ACHL_WORK_MD5 ((int *) ((char *) ACHL_WORK_SHA1 + SHA_ARRAY_SIZE * sizeof(int)))
//#define ACHL_SAVE_SHA1 ((char *) ACHL_WORK_MD5 + MD5_ARRAY_SIZE * sizeof(int))
//#define ACHL_SAVE_MD5 ((char *) ACHL_SAVE_SHA1 + MD5_ARRAY_SIZE * sizeof(int) + sizeof(adsp_encry->imrc_sha1_state))
//#define ACHL_WORK_UTIL_01 ((char *) ACHL_SAVE_MD5 + sizeof(adsp_encry->imrc_md5_state))
#define ACHL_WORK_UTIL_01 ((char *) ACHL_WORK_MD5 + MD5_ARRAY_SIZE * sizeof(int))
#define ACHL_WORK_UTIL_02 ((char *) ACHL_WORK_UTIL_01 + 128)
// memcpy( ACHL_SAVE_SHA1, adsp_encry->imrc_sha1_state, sizeof(adsp_encry->imrc_sha1_state) );  /* save old key */
// memcpy( ACHL_SAVE_MD5, adsp_encry->imrc_md5_state, sizeof(adsp_encry->imrc_md5_state) );  /* save old key */
   memset( ACHL_CONST_SHA1, 0X36, 40 );
   memset( ACHL_CONST_MD5, 0X5C, 48 );
   SHA1_Init( ACHL_WORK_SHA1 );
   SHA1_Update( ACHL_WORK_SHA1, adsp_encry->chrc_orig_pkd,
                0, adsp_rdp_co->imc_used_keylen );
   SHA1_Update( ACHL_WORK_SHA1, ACHL_CONST_SHA1, 0, 40 );
   SHA1_Update( ACHL_WORK_SHA1, adsp_encry->chrc_cl_pkd,
                0, adsp_rdp_co->imc_used_keylen );
   SHA1_Final( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0 );
   MD5_Init( ACHL_WORK_MD5 );
   MD5_Update( ACHL_WORK_MD5, adsp_encry->chrc_orig_pkd,
               0, adsp_rdp_co->imc_used_keylen );
   MD5_Update( ACHL_WORK_MD5, ACHL_CONST_MD5, 0, 48 );
   MD5_Update( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0, 20 );
   MD5_Final( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0 );
   switch ( adsp_rdp_co->imc_keytype) {
     case 1:
       memcpy( adsp_encry->chrc_cl_pkd, ACHL_WORK_UTIL_01, 8 );
       RC4_SetKey( ACHL_WORK_UTIL_02,
                   adsp_encry->chrc_cl_pkd, 0,
                   8 );
       RC4( adsp_encry->chrc_cl_pkd, 0, 8, adsp_encry->chrc_cl_pkd, 0, ACHL_WORK_UTIL_02 );
       memcpy( adsp_encry->chrc_cl_pkd, ucrs_ks_01, sizeof(ucrs_ks_01) );
       break;
     case 2:
       memcpy( adsp_encry->chrc_cl_pkd, ACHL_WORK_UTIL_01, 16 );
       RC4_SetKey( ACHL_WORK_UTIL_02,
                   adsp_encry->chrc_cl_pkd, 0,
                   16 );
       RC4( adsp_encry->chrc_cl_pkd, 0, 16, adsp_encry->chrc_cl_pkd, 0, ACHL_WORK_UTIL_02 );
       break;
     case 4:
     case 8:
       memcpy( adsp_encry->chrc_cl_pkd, ACHL_WORK_UTIL_01, 8 );
       RC4_SetKey( ACHL_WORK_UTIL_02,
                   adsp_encry->chrc_cl_pkd, 0,
                   8 );
       RC4( adsp_encry->chrc_cl_pkd, 0, 8, adsp_encry->chrc_cl_pkd, 0, ACHL_WORK_UTIL_02 );
       adsp_encry->chrc_cl_pkd[0] = (char) 0XD1;
       break;
   }
   RC4_SetKey( adsp_encry->chrc_rc4_state,
               adsp_encry->chrc_cl_pkd, 0,
               adsp_rdp_co->imc_used_keylen );
   return;
#undef ACHL_WORK_SHA1
#undef ACHL_WORK_MD5
#undef ACHL_WORK_UTIL_01
#undef ACHL_WORK_UTIL_02
} /* end m_update_keys()                                               */

/* generate keys for licensing encryption, [MS-RDPELE] 5.1.3 .. 5.1.6  */
static void m_gen_lic_keys( struct dsd_rdp_lic_d* adsp_lic_neg,
     char *achp_work_area ) {               /* work area               */
#define ACHL_SHA_ARRAY ((int *) (achp_work_area + 0))
#define ACHL_SHA_DIG ((char *) ACHL_SHA_ARRAY + 24 * sizeof(int))
#define ACHL_MD5_ARRAY ((int *) (ACHL_SHA_DIG + 20))
#define ACHL_PRE_HASH ((char *) ACHL_MD5_ARRAY + 24 * sizeof(int))
#define ACHL_MASTER_H_1 (ACHL_PRE_HASH + 16 * 3)
#define ACHL_MASTER_H_2 (ACHL_MASTER_H_1 + 16)
#define ACHL_WORK_UTIL_01 (ACHL_MASTER_H_2 + 16)
   /* invert the client premaster to little endian                     */
   char       *achl1, *achl2;               /* working variables       */
   achl1 = ACHL_WORK_UTIL_01 + adsp_lic_neg->dsc_lic_pms.usc_bb_len;
   achl2 = adsp_lic_neg->dsc_lic_pms.achc_bb_data;
   do {
     *(--achl1) = *achl2++;
   } while (achl1 > ACHL_WORK_UTIL_01);
#define CLRAND adsp_lic_neg->chrc_lic_clrand
#define SERAND adsp_lic_neg->chrc_lic_serand
   /* make first pre master hash                                       */
   SHA1_Init( ACHL_SHA_ARRAY );
   SHA1_Update( ACHL_SHA_ARRAY, (char *) ucrs_crypt_ini_01, 0, sizeof(ucrs_crypt_ini_01) );
   SHA1_Update( ACHL_SHA_ARRAY, ACHL_WORK_UTIL_01, 0, adsp_lic_neg->dsc_lic_pms.usc_bb_len );
   SHA1_Update( ACHL_SHA_ARRAY, CLRAND, 0, sizeof(CLRAND) );
   SHA1_Update( ACHL_SHA_ARRAY, SERAND, 0, sizeof(SERAND) );
   SHA1_Final( ACHL_SHA_ARRAY, ACHL_SHA_DIG, 0 );
   MD5_Init( ACHL_MD5_ARRAY );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_WORK_UTIL_01, 0, adsp_lic_neg->dsc_lic_pms.usc_bb_len );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_SHA_DIG, 0, 20 );
   MD5_Final( ACHL_MD5_ARRAY, ACHL_PRE_HASH + 0, 0 );
   printf( "s%05d l%05d M_SALTHASH() ACHL_PRE_HASH + 0:\n",
           19,                  /* source line no for errors */
           __LINE__ );                      /* line number for errors  */
   m_console_out( (char *) ACHL_PRE_HASH + 0, 16 );
   /* make second pre master hash                                      */
   SHA1_Init( ACHL_SHA_ARRAY );
   SHA1_Update( ACHL_SHA_ARRAY, (char *) ucrs_crypt_ini_02, 0, sizeof(ucrs_crypt_ini_02) );
   SHA1_Update( ACHL_SHA_ARRAY, ACHL_WORK_UTIL_01, 0, adsp_lic_neg->dsc_lic_pms.usc_bb_len );
   SHA1_Update( ACHL_SHA_ARRAY, CLRAND, 0, sizeof(CLRAND) );
   SHA1_Update( ACHL_SHA_ARRAY, SERAND, 0, sizeof(SERAND) );
   SHA1_Final( ACHL_SHA_ARRAY, ACHL_SHA_DIG, 0 );
   MD5_Init( ACHL_MD5_ARRAY );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_WORK_UTIL_01, 0, adsp_lic_neg->dsc_lic_pms.usc_bb_len );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_SHA_DIG, 0, 20 );
   MD5_Final( ACHL_MD5_ARRAY, ACHL_PRE_HASH + 16, 0 );
   printf( "s%05d l%05d M_SALTHASH() ACHL_PRE_HASH + 16:\n",
           19,                  /* source line no for errors */
           __LINE__ );                      /* line number for errors  */
   m_console_out( (char *) ACHL_PRE_HASH + 16, 16 );
   /* make third pre master hash                                       */
   SHA1_Init( ACHL_SHA_ARRAY );
   SHA1_Update( ACHL_SHA_ARRAY, (char *) ucrs_crypt_ini_03, 0, sizeof(ucrs_crypt_ini_03) );
   SHA1_Update( ACHL_SHA_ARRAY, ACHL_WORK_UTIL_01, 0, adsp_lic_neg->dsc_lic_pms.usc_bb_len );
   SHA1_Update( ACHL_SHA_ARRAY, CLRAND, 0, sizeof(CLRAND) );
   SHA1_Update( ACHL_SHA_ARRAY, SERAND, 0, sizeof(SERAND) );
   SHA1_Final( ACHL_SHA_ARRAY, ACHL_SHA_DIG, 0 );
   MD5_Init( ACHL_MD5_ARRAY );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_WORK_UTIL_01, 0, adsp_lic_neg->dsc_lic_pms.usc_bb_len );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_SHA_DIG, 0, 20 );
   MD5_Final( ACHL_MD5_ARRAY, ACHL_PRE_HASH + 32, 0 );
   printf( "s%05d l%05d M_SALTHASH() ACHL_PRE_HASH + 32:\n",
           19,                  /* source line no for errors */
           __LINE__ );                      /* line number for errors  */
   m_console_out( (char *) ACHL_PRE_HASH + 32, 16 );
   /* make first master hash                                           */
   SHA1_Init( ACHL_SHA_ARRAY );
   SHA1_Update( ACHL_SHA_ARRAY, (char *) ucrs_crypt_ini_01, 0, sizeof(ucrs_crypt_ini_01) );
   SHA1_Update( ACHL_SHA_ARRAY, ACHL_PRE_HASH, 0, 48 );
   SHA1_Update( ACHL_SHA_ARRAY, SERAND, 0, sizeof(SERAND) );
   SHA1_Update( ACHL_SHA_ARRAY, CLRAND, 0, sizeof(CLRAND) );
   SHA1_Final( ACHL_SHA_ARRAY, ACHL_SHA_DIG, 0 );
   MD5_Init( ACHL_MD5_ARRAY );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_PRE_HASH, 0, 48 );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_SHA_DIG, 0, 20 );
   MD5_Final( ACHL_MD5_ARRAY, ACHL_MASTER_H_1, 0 );
   printf( "s%05d l%05d M_SALTHASH() ACHL_MASTER_H_1:\n",
           19,                  /* source line no for errors */
           __LINE__ );                      /* line number for errors  */
   m_console_out( (char *) ACHL_MASTER_H_1, 16 );
   /* make second master hash                                          */
   SHA1_Init( ACHL_SHA_ARRAY );
   SHA1_Update( ACHL_SHA_ARRAY, (char *) ucrs_crypt_ini_02, 0, sizeof(ucrs_crypt_ini_02) );
   SHA1_Update( ACHL_SHA_ARRAY, ACHL_PRE_HASH, 0, 48 );
   SHA1_Update( ACHL_SHA_ARRAY, SERAND, 0, sizeof(SERAND) );
   SHA1_Update( ACHL_SHA_ARRAY, CLRAND, 0, sizeof(CLRAND) );
   SHA1_Final( ACHL_SHA_ARRAY, ACHL_SHA_DIG, 0 );
   MD5_Init( ACHL_MD5_ARRAY );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_PRE_HASH, 0, 48 );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_SHA_DIG, 0, 20 );
   MD5_Final( ACHL_MD5_ARRAY, ACHL_MASTER_H_2, 0 );
   printf( "s%05d l%05d M_SALTHASH() ACHL_MASTER_H_2:\n",
           19,                  /* source line no for errors */
           __LINE__ );                      /* line number for errors  */
   m_console_out( (char *) ACHL_MASTER_H_2, 16 );
   /* make third master hash, as part of the spec ...
   *M_SALTHASH( ACHL_PRE_HASH, '48', -, 0, 3, SERAND, 'sizeof(SERAND)', CLRAND, 'sizeof(CLRAND)', 'ACHL_MASTER_H_3' );
      which however seems irrelevant; the last 128 bits are not used   */
#define ACHL_RC4_KEY ACHL_WORK_UTIL_01
#define ACHL_CONST_SIX (ACHL_RC4_KEY + 16)
#define ACHL_CONST_BS (ACHL_CONST_SIX + 40)
   /* encryption key                                                   */
   MD5_Init( ACHL_MD5_ARRAY );
   MD5_Update( ACHL_MD5_ARRAY, ACHL_MASTER_H_2, 0, 16 );
   MD5_Update( ACHL_MD5_ARRAY, CLRAND, 0, sizeof(CLRAND) );
   MD5_Update( ACHL_MD5_ARRAY, SERAND, 0, sizeof(SERAND) );
   MD5_Final( ACHL_MD5_ARRAY, ACHL_RC4_KEY , 0 );
#undef CLRAND
#undef SERAND
   /* initialise server and client RC4 with the same key               */
   RC4_SetKey( adsp_lic_neg->chrc_rc4_state_se2cl,
               ACHL_RC4_KEY,
               0, 16 );
   memcpy( adsp_lic_neg->chrc_rc4_state_cl2se,
           adsp_lic_neg->chrc_rc4_state_se2cl,
           RC4_STATE_SIZE );
   /* prepare state arrays for hash generation                         */
   memset( ACHL_CONST_SIX, 0X36, 40 );
   memset( ACHL_CONST_BS, 0X5C, 48 );
   SHA1_Init( adsp_lic_neg->imrc_sha1_state );
   SHA1_Update( adsp_lic_neg->imrc_sha1_state, ACHL_MASTER_H_1, 0, 16 );
   SHA1_Update( adsp_lic_neg->imrc_sha1_state, ACHL_CONST_SIX, 0, 40 );
   MD5_Init( adsp_lic_neg->imrc_md5_state );
   MD5_Update( adsp_lic_neg->imrc_md5_state, ACHL_MASTER_H_1, 0, 16 );
   MD5_Update( adsp_lic_neg->imrc_md5_state, ACHL_CONST_BS, 0, 48 );
#undef ACHL_RC4_KEY
#undef ACHL_CONST_SIX
#undef ACHL_CONST_BS
#undef ACHL_WORK_UTIL_01
#undef ACHL_SHA_ARRAY
#undef ACHL_SHA_DIG
#undef ACHL_MD5_ARRAY
#undef ACHL_PRE_HASH
#undef ACHL_MASTER_H_1
#undef ACHL_MASTER_H_2
} /* end m_gen_lic_keys()                                              */

/* prepare a screen buffer                                             */
static BOOL m_make_screen( struct dsd_call_rdpclient_1 *adsp_hl_clib_1,
     char *achp_param ) {                   /* parameters are here     */
   BOOL       bol1;                         /* working variable        */
   int        iml1;                         /* working variable        */
   int        iml_width, iml_height, iml_coldep, iml_bpp;
   struct dsd_progaddr_1 *adsl_progaddr_1;  /* program addresses       */
#ifdef HELP_DEBUG
   struct dsd_rdpa_f *ADSL_RDPA_F;
#endif

#ifndef HELP_DEBUG
#define ADSL_RDPA_F ((struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext)
#else
   ADSL_RDPA_F = (struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext;
#endif
   iml_width = (unsigned char) *(achp_param + 0)
                  | ((unsigned char) *(achp_param + 1) << 8);
   if (iml_width == 0) return FALSE;
   iml_height  = (unsigned char) *(achp_param + 2)
                  | ((unsigned char) *(achp_param + 3) << 8);
   if (iml_height == 0) return FALSE;
   iml_coldep = (unsigned char) *(achp_param + 4)
                  | ((unsigned char) *(achp_param + 5) << 8);
   switch (iml_coldep) {
     case 8:
       iml_bpp = 1;
       adsl_progaddr_1 = (struct dsd_progaddr_1 *) &dsrs_progaddr_1[0];
       break;
     case 15:
     case 16:
       iml_bpp = 2;
       adsl_progaddr_1 = (struct dsd_progaddr_1 *) &dsrs_progaddr_1[1];
       break;
     case 24:
       iml_bpp = 4;
       adsl_progaddr_1 = (struct dsd_progaddr_1 *) &dsrs_progaddr_1[2];
       break;
     case 32:
       iml_bpp = 4;
       adsl_progaddr_1 = (struct dsd_progaddr_1 *) &dsrs_progaddr_1[3];
       break;
     default:
       return FALSE;
   }
   /* release Bitmap Caches                                            */
/* UUUU 19.08.06 KB - missing */
   /* release all caches                                               */
/* 05.01.05 KB UUUU */
   iml1 = iml_width * iml_height * iml_bpp;
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imc_dim_x = iml_width;
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imc_dim_y = iml_height;
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imc_s_coldep = iml_coldep;
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imc_bpp = iml_bpp;
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.adsc_progaddr_1 = adsl_progaddr_1;
   ADSL_RDPA_F->dsc_rdp_cl_1.imc_cmp_dim_x = iml_width;
   ADSL_RDPA_F->dsc_rdp_cl_1.imc_cmp_dim_y = iml_height;
#ifdef TEMPSCR2                            /* 15.06.05 KB - send screen */
   if (iml_bpp == 2)
       {
         unsigned short int *aush1 = (unsigned short int *) ADSL_RDPA_F->ac_screen_buffer;
         unsigned short int *aush2 = (unsigned short int *) ADSL_RDPA_F->ac_screen_buffer
                                       + iml_width * iml_height;
         do {
           *aush1++ = (unsigned short int) 0XF0F0;
         } while (aush1 < aush2);
       }
#endif /* TEMPSCR2                            15.06.05 KB - send screen */
   return TRUE;
#ifndef HELP_DEBUG
#undef ADSL_RDPA_F
#endif
} /* end m_make_screen()                                               */



static BOOL m_decomp_01_s( struct dsd_call_rdpclient_1 *adsp_hl_clib_1,
     struct dsd_cache_1 *adsp_cache_1,
     char *achp_inp_buf, int imp_inp_len ) {
   int        iml1, iml2, iml3;             /* working variables       */
   BOOL       bol1;                         /* working variable        */
   BOOL       bol_fill9;                    /* last command was Fill 9 */
#ifdef OLD01
   int        iml_width;                    /* width of cache in pixels */
#endif
   unsigned short int xxl_mix;              /* Mix Value               */
   unsigned short int xxl_col_1;            /* Value Colour 1          */
   unsigned short int xxl_col_2;            /* Value Colour 2          */
   char       *achl_cobu_next;              /* address next command    */
   char       *achl_cobu_cur;               /* current buffer address  */
   char       *achl_cobu_end;               /* end of buffer           */
   unsigned short int *axxl_pibu_next;      /* pixel buffer next command */
   unsigned short int *axxl_pibu_cur;       /* current pixel buffer    */
   unsigned short int *axxl_pibu_end;       /* end pixel buffer        */
#ifdef OLD01
   unsigned short int *axxl_pibu_line;      /* current line pixel buffer */
#endif
   unsigned short int *axxl_pibu_temp1;     /* temporary pointer pixel buffer */
#ifdef HELP_DEBUG
   struct dsd_rdpa_f *ADSL_RDPA_F;
   struct dsd_rdp_client_1 *D_ADSL_RCL1;
   struct dsd_rdp_co_client *D_ADSL_RCO1;  /* RDP communication client */
   struct dsd_output_area_1 *ADSL_OA1;
#endif

#ifndef HELP_DEBUG
#define ADSL_RDPA_F ((struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext)
#else
   ADSL_RDPA_F = (struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext;
#endif
#ifndef HELP_DEBUG
#define D_ADSL_RCL1 (&ADSL_RDPA_F->dsc_rdp_cl_1)
#define D_ADSL_RCO1 (&D_ADSL_RCL1->dsc_rdp_co_1)
#else
   D_ADSL_RCL1 = &ADSL_RDPA_F->dsc_rdp_cl_1;
   D_ADSL_RCO1 = &D_ADSL_RCL1->dsc_rdp_co_1;
#endif
   achl_cobu_next = achp_inp_buf;           /* address next command    */
   achl_cobu_end = achp_inp_buf + imp_inp_len;  /* end of buffer       */
#ifdef OLD01
   axxl_pibu_next = (unsigned short int *) (adsp_cache_1 + 1);
   axxl_pibu_line = (unsigned short int *) (adsp_cache_1 + 1);
   switch (adsp_cache_1->inc_id) {
     case 0:
       iml_width = 0X10;
       break;
     case 1:
       iml_width = 0X20;
       break;
     case 2:
       iml_width = 0X40;
       break;
     default:
       return FALSE;
   }
   if (D_ADSL_RCL1->ucc_prot_r5_pdu_ord_width == 0) return FALSE;
   if (D_ADSL_RCL1->ucc_prot_r5_pdu_ord_width > iml_width) return FALSE;
   if (D_ADSL_RCL1->ucc_prot_r5_pdu_ord_height == 0) return FALSE;
   if (D_ADSL_RCL1->ucc_prot_r5_pdu_ord_height > iml_width) return FALSE;
#endif
   m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d m_decomp_01_s() imp_inp_len=%d imc_order_flags=%d/0X%04X pdu_ord_type=0X%02X.",
                 __LINE__, 40138,  /* line number for errors  */
                 imp_inp_len,
                 D_ADSL_RCL1->imc_order_flags,
                 (unsigned short int) D_ADSL_RCL1->imc_order_flags,
                 D_ADSL_RCL1->chc_prot_r5_pdu_ord_type );
   m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d m_decomp_01_s() pdu_ord_width=%d pdu_ord_height=%d imc_prot_1=%d.",
                 __LINE__, 40144,  /* line number for errors  */
                 D_ADSL_RCL1->ucc_prot_r5_pdu_ord_width,
                 D_ADSL_RCL1->ucc_prot_r5_pdu_ord_height,
                 D_ADSL_RCL1->imc_prot_1 );
   iml1 = D_ADSL_RCL1->ucc_prot_r5_pdu_ord_width
            * D_ADSL_RCL1->ucc_prot_r5_pdu_ord_height;
   D_ADSL_RCL1->achc_prot_1 = (char *) m_aux_stor_alloc( &ADSL_RDPA_F->dsc_stor_sdh_1,
                                                         iml1 * sizeof(unsigned short int) );
#define AXXL_PIBU_START ((unsigned short int *) D_ADSL_RCL1->achc_prot_1)
#define UCL_WIDTH (D_ADSL_RCL1->ucc_prot_r5_pdu_ord_width)
   axxl_pibu_next = AXXL_PIBU_START;
   axxl_pibu_end = axxl_pibu_next + iml1;
   bol_fill9 = FALSE;                       /* this command is not Fill 9 */
   xxl_mix = 0XFFFF;                        /* Mix Value               */

   pdeco20:                                 /* decode command          */
   m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d m_decomp_01_s() achl_cobu_next=%d *cmd=%d/0X%02X axxl_pibu_next=%d bol_fill9=%d.",
                 __LINE__, 40234,  /* line number for errors  */
                 achl_cobu_next - achp_inp_buf,
                 *achl_cobu_next,
                 (unsigned char) *achl_cobu_next,
                 axxl_pibu_next - AXXL_PIBU_START,
                 bol_fill9 );
   /* pay attention that command is not behind last byte in buffer     */
   achl_cobu_cur = achl_cobu_next;          /* address next command    */
   achl_cobu_next++;                        /* after this input        */
   axxl_pibu_cur = axxl_pibu_next;          /* address next pixel buffer */
   /* shift only 4 bits, so shift 3 bits occurs double                 */
   switch (((unsigned char) *achl_cobu_cur) >> 4) {
     case (0 * 2):                          /* Fill 9                  */
     case (0 * 2 + 1):                      /* Fill 9                  */
       iml1 = *achl_cobu_cur & 0X1F;        /* get length in 5 bits    */
       if (iml1 == 0) {                     /* length follows next byte */
         achl_cobu_next++;                  /* add length of length byte */
         if (achl_cobu_next > achl_cobu_end) return FALSE;
         iml1 = 32 + (unsigned char) *(achl_cobu_cur + 1);
       }
       axxl_pibu_next += iml1;
       if (axxl_pibu_next > axxl_pibu_end) return FALSE;
       if (bol_fill9) {                     /* last command was Fill 9 */
         /* one single pixel mix                                       */
         iml2 = UCL_WIDTH - (axxl_pibu_cur - AXXL_PIBU_START);
         if (iml2 > 0) {                    /* part is in first line   */
           *axxl_pibu_next++ = xxl_mix;     /* one pixel mix           */
         } else {
           *axxl_pibu_cur = *(axxl_pibu_cur - UCL_WIDTH) ^ xxl_mix;
         }
         iml1--;                            /* one pixel done          */
         if (iml1 == 0) break;              /* all done                */
         axxl_pibu_cur++;                   /* continue from this position */
       }
       bol_fill9 = TRUE;                    /* last command was Fill 9 */
       iml2 = UCL_WIDTH - (axxl_pibu_cur - AXXL_PIBU_START);
       if (iml2 > 0) {                      /* part is in first line   */
         if (iml2 > iml1) iml2 = iml1;      /* only as long as length  */
         iml1 -= iml2;                      /* this part has been done */
         memset( axxl_pibu_cur, 0, iml2 * sizeof(unsigned short int) );
         if (iml1 == 0) break;              /* all done                */
         axxl_pibu_cur += iml2;             /* continue from this position */
       }
#ifdef OLD01
       memmove( axxl_pibu_cur,
                axxl_pibu_cur - UCL_WIDTH,
                iml1 * sizeof(unsigned short int) );
#endif
       do {
         *axxl_pibu_cur = *(axxl_pibu_cur - UCL_WIDTH);
         axxl_pibu_cur++;
       } while (axxl_pibu_cur < axxl_pibu_next);
       break;
     case (1 * 2):                          /* Mix                     */
     case (1 * 2 + 1):                      /* Mix                     */
#ifdef OLD01
       iml1 = *achl_cobu_next & 0X1F;       /* get length in 5 bits    */
       if (iml1 == 0) {                     /* length follows next byte */
         achl_cobu_next++;                  /* add length command      */
         if (achl_cobu_next > achl_cobu_end) return FALSE;
         iml1 = 32 + (unsigned char) *achl_cobu_next;
       }
       achl_cobu_next++;                    /* add length command      */
       if (achl_cobu_next > achl_cobu_end) return FALSE;
       iml1 = *achl_cobu_cur & 0X1F;
       axxl_pibu_next += iml1;
       if (axxl_pibu_next > axxl_pibu_end) return FALSE;
       memset( axxl_pibu_cur, 0, iml1 * sizeof(unsigned short int) );
       axxl_pibu_cur += iml1;
       break;
#endif
       iml1 = *achl_cobu_cur & 0X1F;        /* get length in 5 bits    */
       if (iml1 == 0) {                     /* length follows next byte */
         achl_cobu_next++;                  /* add length of length byte */
         if (achl_cobu_next > achl_cobu_end) return FALSE;
         iml1 = 32 + (unsigned char) *(achl_cobu_cur + 1);
       }
       axxl_pibu_next += iml1;
       if (axxl_pibu_next > axxl_pibu_end) return FALSE;
       bol_fill9 = FALSE;                   /* this command is not Fill 9 */
       iml2 = UCL_WIDTH - (axxl_pibu_cur - AXXL_PIBU_START);
       if (iml2 > 0) {                      /* part is in first line   */
         if (iml2 > iml1) iml2 = iml1;      /* only as long as length  */
         iml1 -= iml2;                      /* this part has been done */
         axxl_pibu_temp1 = axxl_pibu_cur + iml2;  /* compute end loop  */
         do {                               /* fill with mix           */
           *axxl_pibu_cur++ = xxl_mix;
         } while (axxl_pibu_cur < axxl_pibu_temp1);
         if (iml1 == 0) break;              /* all done                */
       }
       do {                                 /* loop to XOR remaining part */
         *axxl_pibu_cur = *(axxl_pibu_cur - UCL_WIDTH) ^ xxl_mix;
         axxl_pibu_cur++;                   /* increment position pixel */
       } while (axxl_pibu_cur < axxl_pibu_next);
       break;
     case (2 * 2):                          /* FillOrMix               */
     case (2 * 2 + 1):                      /* FillOrMix               */
       iml1 = (*achl_cobu_cur & 0X1F) << 3;  /* get length in 5 bits, shifted */
       if (iml1 == 0) {                     /* length follows next byte */
         achl_cobu_next++;                  /* add length command      */
         if (achl_cobu_next > achl_cobu_end) return FALSE;
         iml1 = 1 + (unsigned char) *(achl_cobu_cur + 1);
       }
       iml3 = (iml1 + 7) >> 3;              /* number of bytes Mask    */
       achl_cobu_cur = achl_cobu_next;      /* save start mask minus one */
       achl_cobu_next += iml3;              /* add length mask         */
       if (achl_cobu_next > achl_cobu_end) return FALSE;
       bol_fill9 = FALSE;                   /* this command is not Fill 9 */
       iml3 = 1;                            /* mask byte filled        */
       iml2 = UCL_WIDTH - (axxl_pibu_cur - AXXL_PIBU_START);
       if (iml2 > 0) {                      /* part is in first line   */
         if (iml2 > iml1) iml2 = iml1;      /* only as long as length  */
         iml1 -= iml2;                      /* this part has been done */
         axxl_pibu_temp1 = axxl_pibu_next + iml2;  /* compute end loop */
         do {                               /* fill with mix           */
           if (iml3 == 256) {               /* mask byte exhausted     */
             achl_cobu_cur++;               /* get next byte mask      */
             iml3 = 1;                      /* start with LSB          */
           }
           *axxl_pibu_next = 0;
           if (*((unsigned char *) achl_cobu_cur) & iml3) {  /* mask-bit set */
             *axxl_pibu_next = xxl_mix;
           }
           axxl_pibu_next++;
           iml3 <<= 1;                      /* take next bit in mask   */
         } while (axxl_pibu_next < axxl_pibu_temp1);
         if (iml1 == 0) break;              /* all done                */
         axxl_pibu_cur = axxl_pibu_next;    /* continue from this position */
       }
       axxl_pibu_next += iml1;
       if (axxl_pibu_next > axxl_pibu_end) return FALSE;
       do {                                 /* loop to XOR remaining part */
         if (iml3 == 256) {                 /* mask byte exhausted     */
           achl_cobu_cur++;                 /* get next byte mask      */
           iml3 = 1;                        /* start with LSB          */
         }
         *axxl_pibu_cur = *(axxl_pibu_cur - UCL_WIDTH);
         if (*((unsigned char *) achl_cobu_cur) & iml3) {  /* mask-bit set */
           *axxl_pibu_cur ^= xxl_mix;
         }
         axxl_pibu_cur++;                   /* increment position pixel */
         iml3 <<= 1;                        /* take next bit in mask   */
       } while (axxl_pibu_cur < axxl_pibu_next);
       break;                               /* all done                */
     case (3 * 2):                          /* Color                   */
     case (3 * 2 + 1):                      /* Color                   */
       iml1 = *achl_cobu_cur & 0X1F;        /* get length in 5 bits    */
       if (iml1 == 0) {                     /* length follows next byte */
         achl_cobu_next++;                  /* add length of length byte */
         if (achl_cobu_next > achl_cobu_end) return FALSE;
         iml1 = 32 + (unsigned char) *(achl_cobu_cur + 1);
       }
       achl_cobu_next += sizeof(unsigned short int);  /* add length colour */
       if (achl_cobu_next > achl_cobu_end) return FALSE;
       /* attention little endian / big endian / alignment UUUU 25.08.06 KB */
       xxl_col_1 = *((unsigned char *) achl_cobu_next - 2)
                      | (*((unsigned char *) achl_cobu_next - 1) << 8);
       axxl_pibu_next += iml1;
       if (axxl_pibu_next > axxl_pibu_end) return FALSE;
       do {                                 /* loop to fill in colour  */
         *axxl_pibu_cur++ = xxl_col_1;
       } while (axxl_pibu_cur < axxl_pibu_next);
       bol_fill9 = FALSE;                   /* this command is not Fill 9 */
       break;                               /* all done                */
     case (4 * 2):                          /* Copy                    */
     case (4 * 2 + 1):                      /* Copy                    */
       iml1 = *achl_cobu_cur & 0X1F;        /* get length in 5 bits    */
       if (iml1 == 0) {                     /* length follows next byte */
         achl_cobu_next++;                  /* add length of length byte */
         if (achl_cobu_next > achl_cobu_end) return FALSE;
         iml1 = 32 + (unsigned char) *(achl_cobu_cur + 1);
       }
       achl_cobu_cur = achl_cobu_next;      /* save position for copy  */
       achl_cobu_next += iml1 * sizeof(unsigned short int);  /* add length command */
       if (achl_cobu_next > achl_cobu_end) return FALSE;
       axxl_pibu_next += iml1;
       if (axxl_pibu_next > axxl_pibu_end) return FALSE;
/* UUUU ERROR ??? little / big endian 31.12.06 KB */
       memcpy( axxl_pibu_cur, achl_cobu_cur, iml1 * sizeof(unsigned short int) );
       bol_fill9 = FALSE;                   /* this command is not Fill 9 */
       break;
     case 0X0C:                             /* SetMix_Mix              */
       iml1 = *achl_cobu_cur & 0X0F;        /* get length in 4 bits    */
       if (iml1 == 0) {                     /* length follows next byte */
         achl_cobu_next++;                  /* add length of length byte */
         if (achl_cobu_next > achl_cobu_end) return FALSE;
         iml1 = 16 + (unsigned char) *(achl_cobu_cur + 1);
       }
       achl_cobu_next += sizeof(unsigned short int);  /* add length colour */
       if (achl_cobu_next > achl_cobu_end) return FALSE;
       /* attention little endian / big endian / alignment UUUU 25.08.06 KB */
       xxl_mix = *((unsigned char *) achl_cobu_next - 2)
                    | (*((unsigned char *) achl_cobu_next - 1) << 8);
       bol_fill9 = FALSE;                   /* this command is not Fill 9 */
       iml2 = UCL_WIDTH - (axxl_pibu_cur - AXXL_PIBU_START);
       if (iml2 > 0) {                      /* part is in first line   */
         if (iml2 > iml1) iml2 = iml1;      /* only as long as length  */
         iml1 -= iml2;                      /* this part has been done */
         axxl_pibu_temp1 = axxl_pibu_next + iml2;  /* compute end loop */
         do {                               /* fill with mix           */
           *axxl_pibu_next++ = xxl_mix;
         } while (axxl_pibu_next < axxl_pibu_temp1);
         if (iml1 == 0) break;              /* all done                */
         axxl_pibu_cur = axxl_pibu_next;    /* continue from this position */
       }
       axxl_pibu_next += iml1;
       if (axxl_pibu_next > axxl_pibu_end) return FALSE;
       do {                                 /* loop to XOR remaining part */
         *axxl_pibu_cur = *(axxl_pibu_cur - UCL_WIDTH) ^ xxl_mix;
         axxl_pibu_cur++;                   /* increment position pixel */
       } while (axxl_pibu_cur < axxl_pibu_next);
       break;                               /* all done                */
     case 0X0D:                             /* SetMix_FillOrMix        */
       iml1 = (*achl_cobu_cur & 0X0F) << 3;  /* get length in 4 bits, shifted */
       if (iml1 == 0) {                     /* length follows next byte */
         achl_cobu_next++;                  /* add length command      */
         if (achl_cobu_next > achl_cobu_end) return FALSE;
         iml1 = 1 + (unsigned char) *(achl_cobu_cur + 1);
       }
       iml3 = (iml1 + 7) >> 3;              /* number of bytes Mask    */
       achl_cobu_next += sizeof(unsigned short int);  /* add length colour */
       achl_cobu_cur = achl_cobu_next;      /* save start mask         */
       achl_cobu_next += iml3;              /* add length mask         */
       if (achl_cobu_next > achl_cobu_end) return FALSE;
       /* attention little endian / big endian / alignment UUUU 25.08.06 KB */
       xxl_mix = *((unsigned char *) achl_cobu_cur - 2)
                    | (*((unsigned char *) achl_cobu_cur - 1) << 8);
       bol_fill9 = FALSE;                   /* this command is not Fill 9 */
       iml3 = 1;                            /* mask byte filled        */
       iml2 = UCL_WIDTH - (axxl_pibu_cur - AXXL_PIBU_START);
       if (iml2 > 0) {                      /* part is in first line   */
         if (iml2 > iml1) iml2 = iml1;      /* only as long as length  */
         iml1 -= iml2;                      /* this part has been done */
         axxl_pibu_temp1 = axxl_pibu_next + iml2;  /* compute end loop */
         do {                               /* fill with mix           */
           if (iml3 == 256) {               /* mask byte exhausted     */
             achl_cobu_cur++;               /* get next byte mask      */
             iml3 = 1;                      /* start with LSB          */
           }
           *axxl_pibu_next = 0;
           if (*((unsigned char *) achl_cobu_cur) & iml3) {  /* mask-bit set */
             *axxl_pibu_next = xxl_mix;
           }
           axxl_pibu_next++;
           iml3 <<= 1;                      /* take next bit in mask   */
         } while (axxl_pibu_next < axxl_pibu_temp1);
         if (iml1 == 0) break;              /* all done                */
         axxl_pibu_cur = axxl_pibu_next;    /* continue from this position */
       }
       axxl_pibu_next += iml1;
       if (axxl_pibu_next > axxl_pibu_end) return FALSE;
       do {                                 /* loop to XOR remaining part */
         if (iml3 == 256) {                 /* mask byte exhausted     */
           achl_cobu_cur++;                 /* get next byte mask      */
           iml3 = 1;                        /* start with LSB          */
         }
         *axxl_pibu_cur = *(axxl_pibu_cur - UCL_WIDTH);
         if (*((unsigned char *) achl_cobu_cur) & iml3) {  /* mask-bit set */
           *axxl_pibu_cur ^= xxl_mix;
         }
         axxl_pibu_cur++;                   /* increment position pixel */
         iml3 <<= 1;                        /* take next bit in mask   */
       } while (axxl_pibu_cur < axxl_pibu_next);
       break;                               /* all done                */
     case 0X0E:                             /* Bicolor                 */
       iml1 = *achl_cobu_cur & 0X0F;        /* get length in 4 bits    */
       if (iml1 == 0) {                     /* length follows next byte */
         achl_cobu_next++;                  /* add length of length byte */
         if (achl_cobu_next > achl_cobu_end) return FALSE;
         iml1 = 16 + (unsigned char) *(achl_cobu_cur + 1);
       }
       achl_cobu_next += 2 * sizeof(unsigned short int);  /* add length colours */
       if (achl_cobu_next > achl_cobu_end) return FALSE;
       /* attention little endian / big endian / alignment UUUU 25.08.06 KB */
       xxl_col_1 = *((unsigned char *) achl_cobu_next - 4)
                      | (*((unsigned char *) achl_cobu_next - 3) << 8);
       xxl_col_2 = *((unsigned char *) achl_cobu_next - 2)
                      | (*((unsigned char *) achl_cobu_next - 1) << 8);
       axxl_pibu_next += iml1 * 2;
       if (axxl_pibu_next > axxl_pibu_end) return FALSE;
       do {                                 /* loop to fill in colours */
         *axxl_pibu_cur++ = xxl_col_1;
         *axxl_pibu_cur++ = xxl_col_2;
       } while (axxl_pibu_cur < axxl_pibu_next);
       bol_fill9 = FALSE;                   /* this command is not Fill 9 */
       break;                               /* all done                */
     case 0X0F:                             /* extended Opcodes        */
       switch ((unsigned char) *achl_cobu_cur) {
         case 0XF0:                         /* Fill 9                  */
           achl_cobu_next += sizeof(unsigned short int);  /* add length length */
           if (achl_cobu_next > achl_cobu_end) return FALSE;
           iml1 = *((unsigned char *) achl_cobu_next - 2)
                     | (*((unsigned char *) achl_cobu_next - 1) << 8);
           if (iml1 == 0) return FALSE;
           axxl_pibu_next += iml1;
           if (axxl_pibu_next > axxl_pibu_end) return FALSE;
           if (bol_fill9) {                 /* last command was Fill 9 */
             /* one single pixel mix                                   */
             iml2 = UCL_WIDTH - (axxl_pibu_cur - AXXL_PIBU_START);
             if (iml2 > 0) {                /* part is in first line   */
               *axxl_pibu_next++ = xxl_mix;  /* one pixel mix          */
             } else {
               *axxl_pibu_cur = *(axxl_pibu_cur - UCL_WIDTH) ^ xxl_mix;
             }
             iml1--;                        /* one pixel done          */
             if (iml1 == 0) break;          /* all done                */
             axxl_pibu_cur++;               /* continue from this position */
           }
           bol_fill9 = TRUE;                /* last command was Fill 9 */
           iml2 = UCL_WIDTH - (axxl_pibu_cur - AXXL_PIBU_START);
           if (iml2 > 0) {                  /* part is in first line   */
             if (iml2 > iml1) iml2 = iml1;  /* only as long as length  */
             iml1 -= iml2;                  /* this part has been done */
             memset( axxl_pibu_cur, 0, iml2 * sizeof(unsigned short int) );
             if (iml1 == 0) break;          /* all done                */
             axxl_pibu_cur += iml2;         /* continue from this position */
           }
#ifdef OLD01
           memmove( axxl_pibu_cur,
                    axxl_pibu_cur - UCL_WIDTH,
                    iml1 * sizeof(unsigned short int) );
#endif
           do {
             *axxl_pibu_cur = *(axxl_pibu_cur - UCL_WIDTH);
             axxl_pibu_cur++;
           } while (axxl_pibu_cur < axxl_pibu_next);
           break;
         case 0XF2:                         /* FillOrMix               */
           achl_cobu_next += sizeof(unsigned short int);  /* add length length */
           if (achl_cobu_next > achl_cobu_end) return FALSE;
           iml1 = *((unsigned char *) achl_cobu_next - 2)
                     | (*((unsigned char *) achl_cobu_next - 1) << 8);
           if (iml1 == 0) return FALSE;
           iml3 = (iml1 + 7) >> 3;          /* number of bytes Mask    */
           achl_cobu_cur = achl_cobu_next;  /* save start mask minus one */
           achl_cobu_next += iml3;          /* add length mask         */
           if (achl_cobu_next > achl_cobu_end) return FALSE;
           bol_fill9 = FALSE;               /* this command is not Fill 9 */
           iml3 = 1;                        /* mask byte filled        */
           iml2 = UCL_WIDTH - (axxl_pibu_cur - AXXL_PIBU_START);
           if (iml2 > 0) {                  /* part is in first line   */
             if (iml2 > iml1) iml2 = iml1;  /* only as long as length  */
             iml1 -= iml2;                  /* this part has been done */
             axxl_pibu_temp1 = axxl_pibu_next + iml2;  /* compute end loop */
             do {                           /* fill with mix           */
               if (iml3 == 256) {           /* mask byte exhausted     */
                 achl_cobu_cur++;           /* get next byte mask      */
                 iml3 = 1;                  /* start with LSB          */
               }
               *axxl_pibu_next = 0;
               if (*((unsigned char *) achl_cobu_cur) & iml3) {  /* mask-bit set */
                 *axxl_pibu_next = xxl_mix;
               }
               axxl_pibu_next++;
               iml3 <<= 1;                  /* take next bit in mask   */
             } while (axxl_pibu_next < axxl_pibu_temp1);
             if (iml1 == 0) break;          /* all done                */
             axxl_pibu_cur = axxl_pibu_next;  /* continue from this position */
           }
           axxl_pibu_next += iml1;
           if (axxl_pibu_next > axxl_pibu_end) return FALSE;
           do {                             /* loop to XOR remaining part */
             if (iml3 == 256) {             /* mask byte exhausted     */
               achl_cobu_cur++;             /* get next byte mask      */
               iml3 = 1;                    /* start with LSB          */
             }
             *axxl_pibu_cur = *(axxl_pibu_cur - UCL_WIDTH);
             if (*((unsigned char *) achl_cobu_cur) & iml3) {  /* mask-bit set */
               *axxl_pibu_cur ^= xxl_mix;
             }
             axxl_pibu_cur++;               /* increment position pixel */
             iml3 <<= 1;                    /* take next bit in mask   */
           } while (axxl_pibu_cur < axxl_pibu_next);
           break;                           /* all done                */
         case 0XF3:                         /* Color                   */
           achl_cobu_next += 2 * sizeof(unsigned short int);  /* add length length and colour */
           if (achl_cobu_next > achl_cobu_end) return FALSE;
           iml1 = *((unsigned char *) achl_cobu_next - 4)
                     | (*((unsigned char *) achl_cobu_next - 3) << 8);
           if (iml1 == 0) return FALSE;
           xxl_col_1 = *((unsigned char *) achl_cobu_next - 2)
       /* attention little endian / big endian / alignment UUUU 25.08.06 KB */
                          | (*((unsigned char *) achl_cobu_next - 1) << 8);
           axxl_pibu_next += iml1;
           if (axxl_pibu_next > axxl_pibu_end) return FALSE;
           do {                             /* loop to fill in colour  */
             *axxl_pibu_cur++ = xxl_col_1;
           } while (axxl_pibu_cur < axxl_pibu_next);
           bol_fill9 = FALSE;               /* this command is not Fill 9 */
           break;                           /* all done                */
         case 0XF4:                         /* Copy                    */
           achl_cobu_next += sizeof(unsigned short int);  /* add length length */
           if (achl_cobu_next > achl_cobu_end) return FALSE;
           iml1 = *((unsigned char *) achl_cobu_next - 2)
                     | (*((unsigned char *) achl_cobu_next - 1) << 8);
           if (iml1 == 0) return FALSE;
           achl_cobu_cur = achl_cobu_next;  /* save position for copy  */
           achl_cobu_next += iml1 * sizeof(unsigned short int);  /* add length command */
           if (achl_cobu_next > achl_cobu_end) return FALSE;
           axxl_pibu_next += iml1;
           if (axxl_pibu_next > axxl_pibu_end) return FALSE;
           memcpy( axxl_pibu_cur, achl_cobu_cur, iml1 * sizeof(unsigned short int) );
           bol_fill9 = FALSE;               /* this command is not Fill 9 */
           break;
         case 0XF7:                         /* SetMix_FillOrMix        */
           achl_cobu_next += 2 * sizeof(unsigned short int);  /* add length length and colour */
           if (achl_cobu_next > achl_cobu_end) return FALSE;
           iml1 = *((unsigned char *) achl_cobu_next - 4)
                     | (*((unsigned char *) achl_cobu_next - 3) << 8);
           if (iml1 == 0) return FALSE;
           iml3 = (iml1 + 7) >> 3;          /* number of bytes Mask    */
           achl_cobu_cur = achl_cobu_next;  /* save start mask         */
           achl_cobu_next += iml3;          /* add length mask         */
           if (achl_cobu_next > achl_cobu_end) return FALSE;
       /* attention little endian / big endian / alignment UUUU 25.08.06 KB */
           xxl_mix = *((unsigned char *) achl_cobu_cur - 2)
                        | (*((unsigned char *) achl_cobu_cur - 1) << 8);
           bol_fill9 = FALSE;               /* this command is not Fill 9 */
           iml3 = 1;                        /* mask byte filled        */
           iml2 = UCL_WIDTH - (axxl_pibu_cur - AXXL_PIBU_START);
           if (iml2 > 0) {                  /* part is in first line   */
             if (iml2 > iml1) iml2 = iml1;  /* only as long as length  */
             iml1 -= iml2;                  /* this part has been done */
             axxl_pibu_temp1 = axxl_pibu_next + iml2;  /* compute end loop */
             do {                           /* fill with mix           */
               if (iml3 == 256) {           /* mask byte exhausted     */
                 achl_cobu_cur++;           /* get next byte mask      */
                 iml3 = 1;                  /* start with LSB          */
               }
               *axxl_pibu_next = 0;
               if (*((unsigned char *) achl_cobu_cur) & iml3) {  /* mask-bit set */
                 *axxl_pibu_next = xxl_mix;
               }
               axxl_pibu_next++;
               iml3 <<= 1;                  /* take next bit in mask   */
             } while (axxl_pibu_next < axxl_pibu_temp1);
             if (iml1 == 0) break;          /* all done                */
             axxl_pibu_cur = axxl_pibu_next;  /* continue from this position */
           }
           axxl_pibu_next += iml1;
           if (axxl_pibu_next > axxl_pibu_end) return FALSE;
           do {                             /* loop to XOR remaining part */
             if (iml3 == 256) {             /* mask byte exhausted     */
               achl_cobu_cur++;             /* get next byte mask      */
               iml3 = 1;                    /* start with LSB          */
             }
             *axxl_pibu_cur = *(axxl_pibu_cur - UCL_WIDTH);
             if (*((unsigned char *) achl_cobu_cur) & iml3) {  /* mask-bit set */
               *axxl_pibu_cur ^= xxl_mix;
             }
             axxl_pibu_cur++;               /* increment position pixel */
             iml3 <<= 1;                    /* take next bit in mask   */
           } while (axxl_pibu_cur < axxl_pibu_next);
           break;                           /* all done                */
         case 0XFD:                         /* White                   */
           axxl_pibu_next++;                /* only one pixel          */
           if (axxl_pibu_next > axxl_pibu_end) return FALSE;
           *axxl_pibu_cur = (unsigned short int) 0XFFFF;
           bol_fill9 = FALSE;               /* this command is not Fill 9 */
           break;                           /* all done                */
         case 0XFE:                         /* Black                   */
           axxl_pibu_next++;                /* only one pixel          */
           if (axxl_pibu_next > axxl_pibu_end) return FALSE;
           *axxl_pibu_cur = 0;
           bol_fill9 = FALSE;               /* this command is not Fill 9 */
           break;                           /* all done                */
         default:
           return FALSE;                    /* command unknown         */
       }
       break;
     default:
       return FALSE;                        /* command unknown         */
   }
   if (achl_cobu_next < achl_cobu_end) {
#ifdef OLD01
     if (axxl_pibu_next == axxl_pibu_end) {
       axxl_pibu_line += iml_width;
       if (((unsigned short int *) (adsp_cache_1 + 1)
             + D_ADSL_RCL1->ucc_prot_r5_pdu_ord_height * iml_width)
             >= axxl_pibu_line) {
         return FALSE;                      /* more than height        */
       }
       axxl_pibu_next = axxl_pibu_line;     /* start in new line       */
       axxl_pibu_end = axxl_pibu_next + D_ADSL_RCL1->ucc_prot_r5_pdu_ord_width;
     }
#endif
     goto pdeco20;                          /* decode command          */
   }
#undef AXXL_PIBU_START
#undef UCL_WIDTH
#ifdef OLD01
   iml1 = (D_ADSL_RCL1->ucc_prot_r5_pdu_ord_height - 1) * iml_width
          + D_ADSL_RCL1->ucc_prot_r5_pdu_ord_width;
   if (axxl_pibu_next != ((unsigned short int *) (adsp_cache_1 + 1) + iml1)) {
     return FALSE;
   }
#endif
   if (axxl_pibu_next != axxl_pibu_end) {
     return FALSE;
   }
   return TRUE;
#ifndef HELP_DEBUG
#undef D_ADSL_RCL1
#undef D_ADSL_RCO1
#undef ADSL_OA1
#undef ADSL_RDPA_F
#endif
} /* end m_decomp_01_s()                                               */



/* send RDP5-style input from client to server                         */
static BOOL m_send_cl2se_rdp5( struct dsd_call_rdpclient_1 *adsp_hl_clib_1,
                               struct dsd_output_area_1 *adsp_output_area_1,
                               char *achp_data, int imp_len_data,
                               int imp_no_order ) {
   int        iml1;                         /* working-variable        */
   char       *achl_out;                    /* output pointer          */
#ifdef OLD01
   struct dsd_gather_i_1 *adsl_gai1_out_1;  /* output data             */
   struct dsd_gather_i_1 *adsl_gai1_out_2;  /* output data             */
#endif
#ifdef HELP_DEBUG
   struct dsd_rdpa_f *ADSL_RDPA_F;
   struct dsd_output_area_1 *ADSL_OA1;
#endif
   char       chrl_work_1[ 256 ];           /* work area               */

#ifndef HELP_DEBUG
#define ADSL_RDPA_F ((struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext)
#define ADSL_OA1 adsp_output_area_1
#else
   ADSL_RDPA_F = (struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext;
#endif
#ifdef HELP_DEBUG
   ADSL_OA1 = adsp_output_area_1;
#endif
   m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d m_send_cl2se_rdp5() send len=%d imp_no_order=%d ADSL_OA1->achc_lower=%p ADSL_OA1->achc_upper=%p.",
                 __LINE__, 41144,  /* line number for errors  */
                 imp_len_data, imp_no_order, ADSL_OA1->achc_lower, ADSL_OA1->achc_upper );
   m_sdh_console_out( adsp_hl_clib_1, achp_data, imp_len_data );
   ADSL_OA1->achc_upper -= sizeof(struct dsd_gather_i_1);
   if (ADSL_OA1->achc_upper < ADSL_OA1->achc_lower) {
     m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d m_send_cl2se_rdp5() output-area too small",
                   __LINE__, 41171 );  /* line number for errors */
     return FALSE;
   }
#define ADSL_GAI1_OUT_G ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)
   ADSL_GAI1_OUT_G->adsc_next = NULL;
   iml1 = 1 + 1 + D_SIZE_HASH + imp_len_data;
   if (iml1 >= 128) {                       /* length in two bytes     */
     iml1++;                                /* additional length byte  */
   }
#ifdef OLD01
   adsl_gai1_out_1->achc_ginp_cur = achl_out = ADSL_OA1->achc_lower;
   adsl_gai1_out_1->achc_ginp_end = ADSL_OA1->achc_lower + iml1;
#endif
   ADSL_GAI1_OUT_G->achc_ginp_cur = achl_out = ADSL_OA1->achc_lower;
   ADSL_GAI1_OUT_G->achc_ginp_end = ADSL_OA1->achc_lower + iml1;
   ADSL_OA1->achc_lower += iml1;               /* space in output area    */
   if (ADSL_OA1->achc_upper < ADSL_OA1->achc_lower) {
     m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d output-area too small",
                   __LINE__, 41207 );  /* line number for errors */
     return FALSE;
   }
   *ADSL_OA1->aadsc_gai1_out_to_server = ADSL_GAI1_OUT_G;  /* output data to server */
   ADSL_OA1->aadsc_gai1_out_to_server = &ADSL_GAI1_OUT_G->adsc_next;  /* new chain output data to server */
#undef ADSL_GAI1_OUT_G
   *achl_out++ = (char) (0X80 | (imp_no_order << 2));
   if (iml1 < 128) {                        /* length in one byte      */
     *achl_out++ = (char) iml1;             /* length follows          */
   } else {                                 /* length in two bytes     */
     *achl_out++ = (unsigned char) (0X80 | (iml1 >> 8));  /* length byte one follows */
     *achl_out++ = (unsigned char) iml1;    /* length byte two follows */
   }
   if ((ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.imc_count_sent & (4096 - 1)) == 0){
     if (ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.imc_count_sent) {
       m_update_keys( &ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1, &ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se, NULL );
     }
   }
   /* generate random                                                  */
#define ACHL_WORK_SHA1 ((int *) chrl_work_1)
#define ACHL_WORK_MD5 ((int *) ((char *) ((char *) ACHL_WORK_SHA1 + SHA_ARRAY_SIZE * sizeof(int))))
#define ACHL_WORK_UTIL_01 ((char *) ACHL_WORK_MD5 + MD5_ARRAY_SIZE * sizeof(int))
   memcpy( ACHL_WORK_SHA1,
           ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_sha1_state,
           sizeof(ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_sha1_state) );
   memcpy( ACHL_WORK_MD5,
           ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_md5_state,
           sizeof(ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_md5_state) );
   m_put_le4( ACHL_WORK_UTIL_01, imp_len_data );
   SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0, 4 );
   SHA1_Update( ACHL_WORK_SHA1, achp_data, 0, imp_len_data );
#ifdef NOT_YET_060930
   if (D_ADSL_RSE1->chc_prot_rt03 & 0X08) {  /* flag for block count   */
     m_put_le4( ACHL_WORK_UTIL_01, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imc_count_client_sent );
     SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0, 4 );
   }
#endif
   /* UUUU 30.09.06 KB - not good solution - pass parameter different */
   if (imp_no_order & 0X10) {               /* flag for block count    */
     m_put_le4( ACHL_WORK_UTIL_01, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.imc_count_sent );
     SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0, 4 );
   }
   SHA1_Final( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0 );
   MD5_Update( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0, 20 );
   MD5_Final( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0 );
   memcpy( achl_out, ACHL_WORK_UTIL_01, D_SIZE_HASH );
#undef ACHL_WORK_SHA1
#undef ACHL_WORK_MD5
#undef ACHL_WORK_UTIL_01
   achl_out += D_SIZE_HASH;                 /* add length hash         */
   RC4( achp_data, 0, imp_len_data,
        achl_out, 0,
        ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.chrc_rc4_state );
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.imc_count_sent++;  /* count block sent */
// adsl_gai1_out_2 = adsl_gai1_out_1;       /* save this field         */
   return TRUE;                             /* all done                */
#ifndef HELP_DEBUG
#undef ADSL_OA1
#undef ADSL_RDPA_F
#endif
} /* end m_send_cl2se_rdp5()                                           */

/* send Confirm Active PDU from client to server                       */
static void m_send_cl2se_conf_act_pdu( struct dsd_call_rdpclient_1 *adsp_hl_clib_1,
                                       struct dsd_output_area_1 *adsp_output_area_1 ) {
   int        iml1;                         /* working-variable        */
   char       *achl_out;                    /* output pointer          */
#ifdef OLD01
   struct dsd_gather_i_1 *adsl_gai1_out_1;  /* output data             */
   struct dsd_gather_i_1 *adsl_gai1_out_2;  /* output data             */
#endif
#ifdef HELP_DEBUG
   struct dsd_rdpa_f *ADSL_RDPA_F;
   struct dsd_output_area_1 *ADSL_OA1;
#endif
   char       chrl_work_1[ 256 ];           /* work area               */

#ifndef HELP_DEBUG
#define ADSL_RDPA_F ((struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext)
#define ADSL_OA1 adsp_output_area_1
#else
   ADSL_RDPA_F = (struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext;
#endif
#ifdef HELP_DEBUG
   ADSL_OA1 = adsp_output_area_1;
#endif
#ifdef TRACEHL1
   printf( "l%05d s%05d m_send_cl2se_conf_act_pdu() ADSL_OA1->achc_lower=%p ADSL_OA1->achc_upper=%p\n",
           __LINE__, 41343, ADSL_OA1->achc_lower, ADSL_OA1->achc_upper );
#endif
   achl_out = ADSL_OA1->achc_lower + 1 + 1 + 2 + sizeof(ucrs_x224_p01) + 1 + 2 + 2 + 1 + 2 + 2 + 2 + D_SIZE_HASH;
   *(achl_out + 2) = (unsigned char) 0X13;  /* Confirm Active PDU      */
   *(achl_out + 3) = 0;                     /* padding                 */
// to-do 13.02.09 share-id from server
// temporary F0 03 EA 03  01 00 EA 03
// *(achl_out + 4) = (unsigned char) 0XF0;
// *(achl_out + 5) = (unsigned char) 0X03;
   m_put_le2( achl_out + 4, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_chno_cont );
// JB 04.02.11: shareID is only 0x000103EA, if this ist a new connection.
// In case of a reconnect to an existing session, it is different.
   m_put_le4( achl_out + 6, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imc_shareid );
   *(achl_out + 10) = (unsigned char) 0XEA;
   *(achl_out + 11) = (unsigned char) 0X03;
   memcpy( achl_out + 12, ucrs_capabilities_resp, sizeof(ucrs_capabilities_resp) );
   m_put_le2( achl_out, 12 + sizeof(ucrs_capabilities_resp) );
   /* encrypt the data                                                 */
#define ACHL_WORK_SHA1 ((int *) chrl_work_1)
#define ACHL_WORK_MD5 ((int *) ((char *) ((char *) ACHL_WORK_SHA1 + SHA_ARRAY_SIZE * sizeof(int))))
#define ACHL_WORK_UTIL_01 ((char *) ACHL_WORK_MD5 + MD5_ARRAY_SIZE * sizeof(int))
   memcpy( ACHL_WORK_SHA1,
           ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_sha1_state,
           sizeof(ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_sha1_state) );
   memcpy( ACHL_WORK_MD5,
           ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_md5_state,
           sizeof(ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_md5_state) );
   m_put_le4( ACHL_WORK_UTIL_01, 12 + sizeof(ucrs_capabilities_resp) );
   SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0, 4 );
   SHA1_Update( ACHL_WORK_SHA1, achl_out, 0, 12 + sizeof(ucrs_capabilities_resp) );
   SHA1_Final( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0 );
   MD5_Update( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0, 20 );
   MD5_Final( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0 );
   memcpy( achl_out - D_SIZE_HASH, ACHL_WORK_UTIL_01, D_SIZE_HASH );
#undef ACHL_WORK_SHA1
#undef ACHL_WORK_MD5
#undef ACHL_WORK_UTIL_01
   RC4( achl_out, 0, 12 + sizeof(ucrs_capabilities_resp),
        achl_out, 0,
        ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.chrc_rc4_state );
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.imc_count_sent++;  /* count block sent */
   ADSL_OA1->achc_upper -= sizeof(struct dsd_gather_i_1);
   if (ADSL_OA1->achc_upper < (achl_out + 12 + sizeof(ucrs_capabilities_resp))) {
     printf( "output-area too small\n" );
#ifndef HL_UNIX
     ExitProcess( 1 );
#else
     exit( 1 );
#endif
   }
#define ADSL_GAI1_OUT_G ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)
   ADSL_GAI1_OUT_G->adsc_next = NULL;
   ADSL_GAI1_OUT_G->achc_ginp_end = achl_out + 12 + sizeof(ucrs_capabilities_resp);
   ADSL_OA1->achc_lower = ADSL_GAI1_OUT_G->achc_ginp_end;  /* space in output area */
   *ADSL_OA1->aadsc_gai1_out_to_server = ADSL_GAI1_OUT_G;  /* output data to server */
   ADSL_OA1->aadsc_gai1_out_to_server = &ADSL_GAI1_OUT_G->adsc_next;  /* new chain output data to server */
   /* prepare the header                                               */
   *(achl_out - 4 - D_SIZE_HASH) = (unsigned char) 0X38;
   memset( achl_out - 3 - D_SIZE_HASH, 0, 3 );
   iml1 = 4 + D_SIZE_HASH + 12 + sizeof(ucrs_capabilities_resp);
   if (iml1 <= 127) {
     achl_out -= 1 + 4 + D_SIZE_HASH;
     *achl_out = (unsigned char) iml1;
   } else {
     achl_out -= 2 + 4 + D_SIZE_HASH;
     m_put_be2( achl_out, iml1 );
     *achl_out |= 0X80;                     /* length in two bytes     */
   }
   achl_out -= 1 + 1 + 2 + sizeof(ucrs_x224_p01) + 1 + 2 + 2 + 1;
   *achl_out = DEF_CONST_RDP_03;
   *(achl_out + 1) = 0;                     /* second byte zero        */
   m_put_be2( achl_out + 2, ADSL_GAI1_OUT_G->achc_ginp_end - achl_out );
   memcpy( achl_out + 4,
           ucrs_x224_p01,
           sizeof(ucrs_x224_p01) );
   *(achl_out + 4 + sizeof(ucrs_x224_p01)) = (unsigned char) 0X64;  /* send data request */
   m_put_be2( achl_out + 4 + sizeof(ucrs_x224_p01) + 1, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_userid_cl2se );
   m_put_be2( achl_out + 4 + sizeof(ucrs_x224_p01) + 1 + 2, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_chno_disp );
   *(achl_out + 4 + sizeof(ucrs_x224_p01) + 1 + 2 + 2) = (unsigned char) 0X70;  /* priority / segmentation */
   ADSL_GAI1_OUT_G->achc_ginp_cur = achl_out;  /* set start of output  */
#undef ADSL_GAI1_OUT_G
   /* send 2.2.1.14 Client Synchronize PDU                             */
   achl_out = ADSL_OA1->achc_lower;
   memcpy( achl_out, ucrs_pdu_header_01, sizeof(ucrs_pdu_header_01) );
   *(achl_out + 3) = (unsigned char) (sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 6 + sizeof(ucrs_share_id) + sizeof(ucrs_ts_synchronize_pdu));
   m_put_be2( achl_out + 8, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_userid_cl2se );
   m_put_be2( achl_out + 10, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_chno_disp );
   *(achl_out + 13) = (unsigned char) (4 + D_SIZE_HASH + 6 + sizeof(ucrs_share_id) + sizeof(ucrs_ts_synchronize_pdu));
   *(achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH) = (unsigned char) (6 + sizeof(ucrs_share_id) + sizeof(ucrs_ts_synchronize_pdu));
   memset( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 1, 0, 3 );
   *(achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 2) = (unsigned char) 0X17;
   m_put_le2( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 4, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_chno_cont );
   memcpy( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 6, ucrs_share_id, sizeof(ucrs_share_id) );
   memcpy( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 6 + sizeof(ucrs_share_id),
           ucrs_ts_synchronize_pdu, sizeof(ucrs_ts_synchronize_pdu) );
   /* encrypt the data                                                 */
#define ACHL_WORK_SHA1 ((int *) chrl_work_1)
#define ACHL_WORK_MD5 ((int *) ((char *) ((char *) ACHL_WORK_SHA1 + SHA_ARRAY_SIZE * sizeof(int))))
#define ACHL_WORK_UTIL_01 ((char *) ACHL_WORK_MD5 + MD5_ARRAY_SIZE * sizeof(int))
   memcpy( ACHL_WORK_SHA1,
           ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_sha1_state,
           sizeof(ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_sha1_state) );
   memcpy( ACHL_WORK_MD5,
           ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_md5_state,
           sizeof(ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_md5_state) );
   m_put_le4( ACHL_WORK_UTIL_01, 6 + sizeof(ucrs_share_id) + sizeof(ucrs_ts_synchronize_pdu) );
   SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0, 4 );
   SHA1_Update( ACHL_WORK_SHA1, achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH, 0, 6 + sizeof(ucrs_share_id) + sizeof(ucrs_ts_synchronize_pdu) );
   SHA1_Final( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0 );
   MD5_Update( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0, 20 );
   MD5_Final( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0 );
   memcpy( achl_out + sizeof(ucrs_pdu_header_01), ACHL_WORK_UTIL_01, D_SIZE_HASH );
#undef ACHL_WORK_SHA1
#undef ACHL_WORK_MD5
#undef ACHL_WORK_UTIL_01
   RC4( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH, 0, 6 + sizeof(ucrs_share_id) + sizeof(ucrs_ts_synchronize_pdu),
        achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH, 0,
        ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.chrc_rc4_state );
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.imc_count_sent++;  /* count block sent */
   achl_out += sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 6 + sizeof(ucrs_share_id) + sizeof(ucrs_ts_synchronize_pdu);
   /* send 2.2.1.15 Client Control PDU - Cooperate                     */
   memcpy( achl_out, ucrs_pdu_header_01, sizeof(ucrs_pdu_header_01) );
   *(achl_out + 3) = (unsigned char) (sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 6 + sizeof(ucrs_share_id) + sizeof(ucrs_ctrl_pdu_data_cooperate));
   m_put_be2( achl_out + 8, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_userid_cl2se );
   m_put_be2( achl_out + 10, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_chno_disp );
   *(achl_out + 13) = (unsigned char) (4 + D_SIZE_HASH + 6 + sizeof(ucrs_share_id) + sizeof(ucrs_ctrl_pdu_data_cooperate));
   *(achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH) = (unsigned char) (6 + sizeof(ucrs_share_id) + sizeof(ucrs_ctrl_pdu_data_cooperate));
   memset( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 1, 0, 3 );
   *(achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 2) = (unsigned char) 0X17;
   m_put_le2( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 4, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_chno_cont );
   memcpy( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 6, ucrs_share_id, sizeof(ucrs_share_id) );
   memcpy( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 6 + sizeof(ucrs_share_id),
           ucrs_ctrl_pdu_data_cooperate, sizeof(ucrs_ctrl_pdu_data_cooperate) );
   /* encrypt the data                                                 */
#define ACHL_WORK_SHA1 ((int *) chrl_work_1)
#define ACHL_WORK_MD5 ((int *) ((char *) ((char *) ACHL_WORK_SHA1 + SHA_ARRAY_SIZE * sizeof(int))))
#define ACHL_WORK_UTIL_01 ((char *) ACHL_WORK_MD5 + MD5_ARRAY_SIZE * sizeof(int))
   memcpy( ACHL_WORK_SHA1,
           ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_sha1_state,
           sizeof(ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_sha1_state) );
   memcpy( ACHL_WORK_MD5,
           ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_md5_state,
           sizeof(ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_md5_state) );
   m_put_le4( ACHL_WORK_UTIL_01, 6 + sizeof(ucrs_share_id) + sizeof(ucrs_ctrl_pdu_data_cooperate) );
   SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0, 4 );
   SHA1_Update( ACHL_WORK_SHA1, achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH, 0, 6 + sizeof(ucrs_share_id) + sizeof(ucrs_ctrl_pdu_data_cooperate) );
   SHA1_Final( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0 );
   MD5_Update( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0, 20 );
   MD5_Final( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0 );
   memcpy( achl_out + sizeof(ucrs_pdu_header_01), ACHL_WORK_UTIL_01, D_SIZE_HASH );
#undef ACHL_WORK_SHA1
#undef ACHL_WORK_MD5
#undef ACHL_WORK_UTIL_01
   RC4( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH, 0, 6 + sizeof(ucrs_share_id) + sizeof(ucrs_ctrl_pdu_data_cooperate),
        achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH, 0,
        ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.chrc_rc4_state );
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.imc_count_sent++;  /* count block sent */
   achl_out += sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 6 + sizeof(ucrs_share_id) + sizeof(ucrs_ctrl_pdu_data_cooperate);
   /* send 2.2.1.16 Client Control PDU - Request Control               */
   memcpy( achl_out, ucrs_pdu_header_01, sizeof(ucrs_pdu_header_01) );
   *(achl_out + 3) = (unsigned char) (sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 6 + sizeof(ucrs_share_id) + sizeof(ucrs_ctrl_pdu_data_request_control));
   m_put_be2( achl_out + 8, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_userid_cl2se );
   m_put_be2( achl_out + 10, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_chno_disp );
   *(achl_out + 13) = (unsigned char) (4 + D_SIZE_HASH + 6 + sizeof(ucrs_share_id) + sizeof(ucrs_ctrl_pdu_data_request_control));
   *(achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH) = (unsigned char) (6 + sizeof(ucrs_share_id) + sizeof(ucrs_ctrl_pdu_data_request_control));
   memset( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 1, 0, 3 );
   *(achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 2) = (unsigned char) 0X17;
   m_put_le2( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 4, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_chno_cont );
   memcpy( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 6, ucrs_share_id, sizeof(ucrs_share_id) );
   memcpy( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 6 + sizeof(ucrs_share_id),
           ucrs_ctrl_pdu_data_request_control, sizeof(ucrs_ctrl_pdu_data_request_control) );
   /* encrypt the data                                                 */
#define ACHL_WORK_SHA1 ((int *) chrl_work_1)
#define ACHL_WORK_MD5 ((int *) ((char *) ((char *) ACHL_WORK_SHA1 + SHA_ARRAY_SIZE * sizeof(int))))
#define ACHL_WORK_UTIL_01 ((char *) ACHL_WORK_MD5 + MD5_ARRAY_SIZE * sizeof(int))
   memcpy( ACHL_WORK_SHA1,
           ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_sha1_state,
           sizeof(ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_sha1_state) );
   memcpy( ACHL_WORK_MD5,
           ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_md5_state,
           sizeof(ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_md5_state) );
   m_put_le4( ACHL_WORK_UTIL_01, 6 + sizeof(ucrs_share_id) + sizeof(ucrs_ctrl_pdu_data_request_control) );
   SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0, 4 );
   SHA1_Update( ACHL_WORK_SHA1, achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH, 0, 6 + sizeof(ucrs_share_id) + sizeof(ucrs_ctrl_pdu_data_request_control) );
   SHA1_Final( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0 );
   MD5_Update( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0, 20 );
   MD5_Final( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0 );
   memcpy( achl_out + sizeof(ucrs_pdu_header_01), ACHL_WORK_UTIL_01, D_SIZE_HASH );
#undef ACHL_WORK_SHA1
#undef ACHL_WORK_MD5
#undef ACHL_WORK_UTIL_01
   RC4( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH, 0, 6 + sizeof(ucrs_share_id) + sizeof(ucrs_ctrl_pdu_data_request_control),
        achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH, 0,
        ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.chrc_rc4_state );
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.imc_count_sent++;  /* count block sent */
   achl_out += sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 6 + sizeof(ucrs_share_id) + sizeof(ucrs_ctrl_pdu_data_request_control);
   /* send 2.2.1.17 Client Persistant Key List PDU                     */
   /* is not sent                                                      */
   /* send 2.2.1.18 Client Font List PDU                               */
   memcpy( achl_out, ucrs_pdu_header_01, sizeof(ucrs_pdu_header_01) );
   *(achl_out + 3) = (unsigned char) (sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 6 + sizeof(ucrs_share_id) + sizeof(ucrs_font_list_pdu));
   m_put_be2( achl_out + 8, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_userid_cl2se );
   m_put_be2( achl_out + 10, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_chno_disp );
   *(achl_out + 13) = (unsigned char) (4 + D_SIZE_HASH + 6 + sizeof(ucrs_share_id) + sizeof(ucrs_font_list_pdu));
   *(achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH) = (unsigned char) (6 + sizeof(ucrs_share_id) + sizeof(ucrs_font_list_pdu));
   memset( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 1, 0, 3 );
   *(achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 2) = (unsigned char) 0X17;
   m_put_le2( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 4, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.usc_chno_cont );
   memcpy( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 6, ucrs_share_id, sizeof(ucrs_share_id) );
   memcpy( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 6 + sizeof(ucrs_share_id),
           ucrs_font_list_pdu, sizeof(ucrs_font_list_pdu) );
   /* encrypt the data                                                 */
#define ACHL_WORK_SHA1 ((int *) chrl_work_1)
#define ACHL_WORK_MD5 ((int *) ((char *) ((char *) ACHL_WORK_SHA1 + SHA_ARRAY_SIZE * sizeof(int))))
#define ACHL_WORK_UTIL_01 ((char *) ACHL_WORK_MD5 + MD5_ARRAY_SIZE * sizeof(int))
   memcpy( ACHL_WORK_SHA1,
           ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_sha1_state,
           sizeof(ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_sha1_state) );
   memcpy( ACHL_WORK_MD5,
           ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_md5_state,
           sizeof(ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_md5_state) );
   m_put_le4( ACHL_WORK_UTIL_01, 6 + sizeof(ucrs_share_id) + sizeof(ucrs_font_list_pdu) );
   SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0, 4 );
   SHA1_Update( ACHL_WORK_SHA1, achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH, 0, 6 + sizeof(ucrs_share_id) + sizeof(ucrs_font_list_pdu) );
   SHA1_Final( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0 );
   MD5_Update( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0, 20 );
   MD5_Final( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0 );
   memcpy( achl_out + sizeof(ucrs_pdu_header_01), ACHL_WORK_UTIL_01, D_SIZE_HASH );
#undef ACHL_WORK_SHA1
#undef ACHL_WORK_MD5
#undef ACHL_WORK_UTIL_01
   RC4( achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH, 0, 6 + sizeof(ucrs_share_id) + sizeof(ucrs_font_list_pdu),
        achl_out + sizeof(ucrs_pdu_header_01) + D_SIZE_HASH, 0,
        ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.chrc_rc4_state );
   ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.imc_count_sent++;  /* count block sent */
   achl_out += sizeof(ucrs_pdu_header_01) + D_SIZE_HASH + 6 + sizeof(ucrs_share_id) + sizeof(ucrs_font_list_pdu);
   if (ADSL_OA1->achc_upper < achl_out) {
     printf( "output-area too small\n" );
#ifndef HL_UNIX
     ExitProcess( 1 );
#else
     exit( 1 );
#endif
   }
   ADSL_OA1->achc_lower = achl_out;            /* set end output          */
#define ADSL_GAI1_OUT_G ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)
   ADSL_GAI1_OUT_G->achc_ginp_end = achl_out;  /* set end output       */
#undef ADSL_GAI1_OUT_G
} /* end m_send_cl2se_conf_act_pdu()                                   */

/* send license to server or a client new license request                      */
static BOOL m_send_cl2se_license( struct dsd_call_rdpclient_1 *adsp_hl_clib_1,
                                  struct dsd_output_area_1 *adsp_output_area_1,
                                  struct dsd_cc_pass_license *dsc_cc_pass_license,
                                  char *chr_work_1, int im_len_work_1,
                                  char *chr_work_2, int im_len_work_2 ) {

  BOOL       bol1;                         /* working variable        */
  int        iml1, iml2, iml3, iml4, iml5, iml6; /* working-variables       */
  char       *achl1, *achl2;               /* working variables       */
  char       *achl3, *achl4;               /* working variables       */
  struct dsd_aux_get_workarea dsl_aux_get_workarea;  /* acquire additional work area */

  struct dsd_rdpa_f *ADSL_RDPA_F = (struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext;
  struct dsd_rdp_client_1 *D_ADSL_RCL1 = &ADSL_RDPA_F->dsc_rdp_cl_1;
  struct dsd_rdp_co_client *D_ADSL_RCO1 = &D_ADSL_RCL1->dsc_rdp_co_1;  /* RDP communication client */

  BOOL bo_new_license = (dsc_cc_pass_license->imc_len_content == 0);

  /* fill dsd_lic_neg-structure */
  // if in hook-mode, the dsd_lic_net-structure filled by the new license request, send from the client.

  D_ADSL_RCO1->adsc_lic_neg->imc_lic_pkea = 0x1;
  D_ADSL_RCO1->adsc_lic_neg->imc_lic_platform = D_ADSL_RCO1->imc_platform_id;

  /* Get new client randoms for licensing */
  bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                     DEF_AUX_RANDOM_RAW,  /* calcalute random */
                                     D_ADSL_RCO1->adsc_lic_neg->chrc_lic_clrand,
                                     sizeof(D_ADSL_RCO1->adsc_lic_neg->chrc_lic_clrand) );
  if (bol1 == FALSE) {                     /* aux returned error      */
    adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
    return FALSE;                     /* do cleanup now          */
  }

  /* Get client premaster */
  iml1 = 48; // len premaster
  D_ADSL_RCO1->adsc_lic_neg->dsc_lic_pms.usc_bb_type = 0x0000;
  D_ADSL_RCO1->adsc_lic_neg->dsc_lic_pms.usc_bb_len  = iml1;
   ADSL_RDPA_F->dsc_stor_sdh_1.amc_aux = adsp_hl_clib_1->amc_aux;
   ADSL_RDPA_F->dsc_stor_sdh_1.vpc_userfld = adsp_hl_clib_1->vpc_userfld;
   *((void **) &D_ADSL_RCO1->adsc_lic_neg->dsc_lic_pms.achc_bb_data) = m_aux_stor_alloc( &ADSL_RDPA_F->dsc_stor_sdh_1, iml1 );
  bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                     DEF_AUX_RANDOM_RAW,  /* calcalute random */
                                     D_ADSL_RCO1->adsc_lic_neg->dsc_lic_pms.achc_bb_data,
                                     iml1 );
  if (bol1 == FALSE) {                     /* aux returned error      */
    adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
    return FALSE;                     /* do cleanup now          */
  }

  /* Create the keys                 */
  m_gen_lic_keys( D_ADSL_RCO1->adsc_lic_neg, chr_work_2 );

  /* first encrypt the client random with the server-side keys     */
  iml1 = D_ADSL_RCO1->adsc_lic_neg->dsc_lic_pms.usc_bb_len;
  iml3 = im_len_work_1;
#ifdef __INSURE__
  // rsa_crypt_raw uses lnum, which causes an Insure-error.
  _Insure_checking_enable(0);
#endif
  iml2 = m_rsa_crypt_raw_big( (unsigned char *) D_ADSL_RCO1->adsc_lic_neg->dsc_lic_pms.achc_bb_data,
                              iml1,
                              (unsigned char *) D_ADSL_RCO1->adsc_lic_neg->chrc_lic_cert_exp,
                              D_ADSL_RCO1->adsc_lic_neg->imc_lic_cert_exp_len,
                              (unsigned char *) D_ADSL_RCO1->adsc_lic_neg->chrc_lic_cert_key,
                              D_ADSL_RCO1->adsc_lic_neg->imc_lic_cert_key_len,
                              (unsigned char *) chr_work_1,
                              &iml3 );
#ifdef __INSURE__
  _Insure_checking_enable(1);
#endif
  if (iml2) return FALSE;              /* protocol error          */
  if (iml3 == 0) return FALSE;         /* protocol error          */

// to-do 20.04.12 KB - == TRUE should not be used, unsafe and slow
  if(bo_new_license == TRUE){
    /* Client New License Request */
    /* Username and computername */
// to-do 10.03.12 KB use new function
    iml2 = m_cpy_vx_vx( chr_work_2, im_len_work_2, ied_chs_ascii_850,
                        D_ADSL_RCO1->awcc_loinf_userna_a, D_ADSL_RCO1->usc_loinf_userna_len / sizeof(HL_WCHAR), ied_chs_le_utf_16 );  /* Unicode UTF-16 little endian */
    if (iml2 < 0) return FALSE;
    *(chr_work_2 + iml2) = 0;

    iml1 = 4                             /* Licencing Preamble      */
         + 4                             /* PreferredKeyExchangeAlg */
         + 4                             /* PlatformId              */
         + 32                            /* ClientRandom            */
         + 2                             /* Binary BLOB, type       */
         + 2                             /* Binary BLOB, length     */
         + ADSL_RDPA_F->dsc_rdp_cl_1.imc_len_cert_key + 8 /* length of the re-encrypted licensing premaster with padding */
         + 2 + 2 + strlen(chr_work_2) + 1  /* Blob for username */
         + 2 + 2 + strlen(D_ADSL_RCO1->achc_machine_name) + 1; /* Blob for machinename */
// to-do 20.04.12 KB - == WSP may crash D_ADSL_RCO1->achc_machine_name does not contain terminating zero
// severe security flaw !!!
  } else {
    /* Client License Info */
    iml1 = 4                             /* Licencing Preamble      */
         + 4                             /* PreferredKeyExchangeAlg */
         + 4                             /* PlatformId              */
         + 32                            /* ClientRandom            */
         + 2                             /* Binary BLOB, type       */
         + 2                             /* Binary BLOB, length     */
         + ADSL_RDPA_F->dsc_rdp_cl_1.imc_len_cert_key + 8 /* length of the re-encrypted licensing premaster with padding */
         + 2 + 2 + dsc_cc_pass_license->imc_len_content  /* Blob license info */
         + 2 + 2 + 4 + 0x10                              /* Blob EncryptedHWID */
         + 0X10;                                         /* Hash */
  }

  achl1 = adsp_output_area_1->achc_lower; /* Start of input */

  /* make the gather */
  adsp_output_area_1->achc_upper -= sizeof(dsd_gather_i_1);
  dsd_gather_i_1* ads_gather = (dsd_gather_i_1*) adsp_output_area_1->achc_upper;
  ads_gather->adsc_next = NULL;
  ads_gather->achc_ginp_cur = achl1;

   *adsp_output_area_1->aadsc_gai1_out_to_server = ads_gather;  /* output data to server */
   adsp_output_area_1->aadsc_gai1_out_to_server = &ads_gather->adsc_next;  /* new chain output data to server */

  /* create message */
  achl3 = achl1; /* save start */
  achl4 = achl3; /* save start in this workarea */
  iml6 = 0;      /* count bytes in workareas which are full */
  memset(achl1, 0X42, adsp_output_area_1->achc_upper - achl1); // UUU remove later

  *achl1++ = DEF_CONST_RDP_03;
  *achl1++ = 0;                        /* second byte zero        */
  achl1 += 2;    // save space for length
  memcpy(achl1, ucrs_x224_p01, sizeof(ucrs_x224_p01));
  achl1 += sizeof(ucrs_x224_p01);
  *achl1++ = 0X64;  /* send data request */
  m_put_be2(achl1, D_ADSL_RCL1->dsc_rdp_co_1.usc_userid_cl2se);
  achl1 += 2;
  m_put_be2(achl1, D_ADSL_RCL1->imc_prot_chno);
  achl1 += 2;
  *achl1++ = 0X70;                    /* priority / segmentation */
  if (iml1 <= (127 - 4)) {          /* length in one byte      */
    *achl1++ = (unsigned char) (iml1 + 4);
  } else {
    m_put_be2( achl1, iml1 + 4 );
    *achl1 |= 0X80;            /* length in two bytes     */
    achl1 += 2;
  }
  m_put_le2(achl1, 0X80); /* encyption flags: licensing encryption */
  achl1 += 2;
  m_put_le2(achl1, 0X00); /* padding */
  achl1 += 2;

// to-do 20.04.12 KB - == TRUE should not be used, unsafe and slow
  if(bo_new_license == TRUE){
    /* Client New License Request */
    *achl1++ = 0x13; /* type */
  } else {
    /* Client License Info */
    *achl1++ = 0x12; /* type */
  }

  *achl1++ = D_ADSL_RCO1->adsc_lic_neg->chc_lic_vers;      /* version 2 or 3, and maybe flag 0x80 */
  m_put_le2( achl1, iml1 ); /* len */
  achl1 += 2;
  m_put_le4( achl1, D_ADSL_RCO1->adsc_lic_neg->imc_lic_pkea );
  achl1 += 4;
  m_put_le4( achl1, D_ADSL_RCO1->adsc_lic_neg->imc_lic_platform );
  achl1 += 4;
  memcpy( achl1, D_ADSL_RCO1->adsc_lic_neg->chrc_lic_clrand, sizeof(D_ADSL_RCO1->adsc_lic_neg->chrc_lic_clrand) );
  achl1 += sizeof(D_ADSL_RCO1->adsc_lic_neg->chrc_lic_clrand);
  m_put_le2( achl1, D_ADSL_RCO1->adsc_lic_neg->dsc_lic_pms.usc_bb_type);
  achl1 += 2;
  m_put_le2( achl1, ADSL_RDPA_F->dsc_rdp_cl_1.imc_len_cert_key + 8 );
  achl1 += 2;
  achl2 = achl1 + ADSL_RDPA_F->dsc_rdp_cl_1.imc_len_cert_key + 8;
  while (iml3) {   /* copy re-encrypted lic. premaster BE -> LE */
    *achl1++ = chr_work_1[--iml3];
  }
  memset( achl1, 0, achl2 - achl1 );
  achl1 = achl2;
	
  if (bo_new_license != FALSE) {
    /* Client New License Request */
    /* user name */
    m_put_le2( achl1, 0x000F); /* BB_CLIENT_USER_NAME_BLOB */
    achl1 += 2;
    iml2 = strlen(chr_work_2);
    m_put_le2( achl1, iml2 + 1);   /* write len of username */
    achl1 += 2;
    memcpy(achl1, chr_work_2, iml2); /* copy username */
    achl1 += iml2;
    *achl1++ = 0; /* mark end of string */
	
    /* computer name */
    m_put_le2( achl1, 0x0010); /* B_CLIENT_MACHINE_NAME_BLOB */
    achl1 += 2;
    iml2 = strlen(D_ADSL_RCO1->achc_machine_name);
    m_put_le2( achl1, iml2 + 1);   /* write len of username */
    achl1 += 2;
    memcpy(achl1, D_ADSL_RCO1->achc_machine_name, iml2); /* copy username */
    achl1 += iml2;
    *achl1++ = 0; /* mark end of string */

  } else {
     /* Client License Info */
     /* License Info */
     m_put_le2( achl1, 0x0001 );
     achl1 += 2;
     m_put_le2( achl1, dsc_cc_pass_license->imc_len_content );
     achl1 += 2;
     iml4 = dsc_cc_pass_license->imc_len_content;
     while(true){
       iml5 = adsp_output_area_1->achc_upper - achl1;
       if(iml5 > iml4) iml5 = iml4;
       memcpy( achl1, dsc_cc_pass_license->achc_content, iml5 );
       achl1 += iml5;
       iml4 -= iml5;
       if(iml4 == 0)
         break;

       // new Workarea needed.
       ads_gather->achc_ginp_end = achl1; // End of old gather
       iml6 += achl1 - achl4;
       memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
       bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                          DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                          &dsl_aux_get_workarea,
                                          sizeof(struct dsd_aux_get_workarea) );
       if (bol1 == FALSE) {           /* aux returned error      */
         adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
         exit(1);           /* UUU right error handling missing          */
       }
       adsp_output_area_1->achc_lower = dsl_aux_get_workarea.achc_work_area;
       adsp_output_area_1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
       adsp_output_area_1->achc_upper -= sizeof(dsd_gather_i_1);
       ads_gather = (dsd_gather_i_1*) adsp_output_area_1->achc_upper;
       ads_gather->adsc_next = NULL;
       achl1 = adsp_output_area_1->achc_lower;
       achl4 = achl1;
       ads_gather->achc_ginp_cur = achl1;

       *adsp_output_area_1->aadsc_gai1_out_to_server = ads_gather;  /* output data to server */
       adsp_output_area_1->aadsc_gai1_out_to_server = &ads_gather->adsc_next;  /* new chain output data to server */

     }
     /* EncryptedHWID + Hash */
#define ACHL_WORK_SHA1 ((int *) chr_work_2)
#define ACHL_WORK_MD5 ((int *) ((char *) ACHL_WORK_SHA1 + SHA_ARRAY_SIZE * sizeof(int)))
#define ACHL_WORK_UTIL_01 ((char *) ACHL_WORK_MD5 + MD5_ARRAY_SIZE * sizeof(int))
#define ACHL_WORK_CHLL ((char *) ACHL_WORK_UTIL_01 + 20)
#define ACHL_WORK_RC4 ACHL_WORK_CHLL + 20

    // EncryptedHWID
    m_put_le2( achl1, 0x0009 );
    achl1 += 2;
    m_put_le2( achl1, 0x14);
    achl1 += 0x2;

    achl2 = ACHL_WORK_CHLL; /* Start to write Data on workarea. */
    m_put_le4( achl2, D_ADSL_RCO1->imc_platform_id);
    achl2 += 4;
//  memcpy( achl2, D_ADSL_RCO1->chrc_client_hardware_data, 0x10); /* Data-fields of client hardware identification */
//  achl2 += 0x10;
    memcpy( achl2, D_ADSL_RCO1->chrc_client_hardware_data, sizeof(D_ADSL_RCO1->chrc_client_hardware_data) ); /* Data-fields of client hardware identification */
    achl2 += sizeof(D_ADSL_RCO1->chrc_client_hardware_data);
    /* encrypt data -> JWT initializes the state before every call of RC4. */
    memcpy( ACHL_WORK_RC4, D_ADSL_RCO1->adsc_lic_neg->chrc_rc4_state_cl2se, RC4_STATE_SIZE );
    RC4( ACHL_WORK_CHLL, 0, 4 + 0x10,
         achl1, 0, ACHL_WORK_RC4);
    achl1 += 4 + 0X10;
    /* calculate the hash                            */
    /* JWT initializes the state of SHA1 and MD5 before every call! */
    iml1 = 4 + 0X10;
    memcpy( ACHL_WORK_SHA1,
            D_ADSL_RCO1->adsc_lic_neg->imrc_sha1_state,
            sizeof(D_ADSL_RCO1->adsc_lic_neg->imrc_sha1_state) );
    memcpy( ACHL_WORK_MD5,
            D_ADSL_RCO1->adsc_lic_neg->imrc_md5_state,
            sizeof(D_ADSL_RCO1->adsc_lic_neg->imrc_md5_state) );
    m_put_le4( ACHL_WORK_UTIL_01, iml1 );
    SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0, 4 );
    SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_CHLL, 0, iml1 );
    SHA1_Final( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0 );

    MD5_Update( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0, 20 );
    MD5_Final( ACHL_WORK_MD5, achl1, 0 );
    achl1 += 0X10;

#undef ACHL_WORK_SHA1
#undef ACHL_WORK_MD5
#undef ACHL_WORK_UTIL_01
#undef ACHL_WORK_CHLL
#undef ACHL_WORK_RC4
  }

  m_put_be2(achl3 + 2, (achl1 - achl4) + iml6);
  ads_gather->achc_ginp_end = achl1;
  D_ADSL_RCL1->iec_frse_bl = ied_frse_any_pdu_rec;  /* ????ive block active PDU */

  return TRUE;
} /* end m_send_cl2se_license()                                   */


/* draw bitmap, send to server                                         */
/* pass server update screen command                                   */
static BOOL m_pass_se_update_sc( struct dsd_call_rdpclient_1 *adsp_hl_clib_1,
                                 struct dsd_output_area_1 *adsp_output_area_1,  /* output of subroutine */
                                 struct dsd_sc_draw_sc *adsp_se_update_sc ) {
   BOOL       bol1;                         /* working variable        */
   struct dsd_se_co1 *adsl_se_co1_w1;       /* command from server     */
   struct dsd_se_co1 *adsl_se_co1_last;     /* command from server     */
   struct dsd_aux_get_workarea dsl_aux_get_workarea;  /* acquire additional work area */
#ifdef HELP_DEBUG
   struct dsd_rdpa_f *ADSL_RDPA_F;
#endif

#define ADSL_OA1 adsp_output_area_1
#ifndef HELP_DEBUG
#define ADSL_RDPA_F ((struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext)
#else
   ADSL_RDPA_F = (struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext;
#endif
   adsl_se_co1_w1 = adsp_hl_clib_1->adsc_se_co1_ch;  /* chain commands from server */
   adsl_se_co1_last = NULL;                 /* clear last in chain     */
   if (adsl_se_co1_w1 == NULL) {            /* chain is empty          */
     goto p_check_updsc_80;                 /* append new entry at end of chain */
   }

   p_check_updsc_20:                        /* check this command      */
   if (adsl_se_co1_w1->iec_se_command != ied_sec_update_screen) {  /* is not update the screen */
     goto p_check_updsc_40;                 /* command has been checked, is valid */
   }

   p_check_updsc_40:                        /* command has been checked, is valid */
   adsl_se_co1_last = adsl_se_co1_w1;       /* set last in chain       */
   adsl_se_co1_w1 = adsl_se_co1_w1->adsc_next;  /* get next in chain   */
   if (adsl_se_co1_w1) goto p_check_updsc_20;  /* check this command   */

   p_check_updsc_80:                        /* append new entry at end of chain */
   if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower) < (sizeof(struct dsd_se_co1) + sizeof(struct dsd_sc_draw_sc))) {  /* get new area */
     memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
     bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                        DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                        &dsl_aux_get_workarea,
                                        sizeof(struct dsd_aux_get_workarea) );
     if (bol1 == FALSE) {                   /* aux returned error      */
//     adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
//     goto p_cleanup_20;           /* do cleanup now          */
       return FALSE;
     }
     ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
     ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
   }
   ADSL_OA1->achc_upper -= sizeof(struct dsd_se_co1) + sizeof(struct dsd_sc_draw_sc);
#define ADSL_SE_CO1_G ((struct dsd_se_co1 *) ADSL_OA1->achc_upper)
   ADSL_SE_CO1_G->iec_se_command = ied_sec_update_screen;  /* is update the screen */
   ADSL_SE_CO1_G->adsc_next = NULL;         /* clear chain field       */
   memcpy( ADSL_SE_CO1_G + 1, adsp_se_update_sc, sizeof(struct dsd_sc_draw_sc) );
   *ADSL_OA1->aadsc_se_co1_chain = ADSL_SE_CO1_G;  /* append to chain  */
   ADSL_OA1->aadsc_se_co1_chain = &ADSL_SE_CO1_G->adsc_next;  /* set new end of chain */
#undef ADSL_SE_CO1_G
   return TRUE;
#undef ADSL_OA1
#ifndef HELP_DEBUG
#undef ADSL_RDPA_F
#endif
} /* end m_pass_se_update_sc()                                         */

static BOOL m_send_vch_tose( struct dsd_call_rdpclient_1 *adsp_hl_clib_1,
                             struct dsd_output_area_1 *adsp_output_area_1,
                             struct dsd_rdp_vch_io *adsp_sc_vch_out,
                             char *achp_work ) {
   int        iml1, iml2;                   /* working-variables       */
   BOOL       bol1;                         /* working variable        */
// char       *achl1;                       /* working variable        */
   struct dsd_gather_i_1 *adsl_gai1_w1;     /* working-variable        */
   BOOL       bol_compressed;               /* compress output         */
   char       *achl_out_1;                  /* output-area             */
   char       *achl_out_start;              /* start of output-area    */
   int        iml_out_len;                  /* length output           */
   struct dsd_gather_i_1 *adsl_gai1_out_save;  /* output data          */
   struct dsd_aux_get_workarea dsl_aux_get_workarea;  /* acquire additional work area */
#ifdef HELP_DEBUG
   struct dsd_rdpa_f *ADSL_RDPA_F;
   struct dsd_rdp_client_1 *D_ADSL_RCL1;
   struct dsd_rdp_co_client *D_ADSL_RCO1;  /* RDP communication server */
   struct dsd_output_area_1 *ADSL_OA1;
#endif

#ifndef HELP_DEBUG
#define ADSL_RDPA_F ((struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext)
#define D_ADSL_RCL1 (&ADSL_RDPA_F->dsc_rdp_cl_1)
#define D_ADSL_RCO1 (&D_ADSL_RCL1->dsc_rdp_co_1)
#define ADSL_OA1 adsp_output_area_1
#else
   ADSL_RDPA_F = (struct dsd_rdpa_f *) adsp_hl_clib_1->ac_ext;
   D_ADSL_RCL1 = &ADSL_RDPA_F->dsc_rdp_cl_1;
   D_ADSL_RCO1 = &D_ADSL_RCL1->dsc_rdp_co_1;
   ADSL_OA1 = adsp_output_area_1;
#endif
/* UUUU 12.04.11 KB */
   adsl_gai1_w1 = adsp_sc_vch_out->adsc_gai1_data;  /* output data     */
   iml1 = 0;                                /* clear count             */
   while (adsl_gai1_w1) {                   /* loop over input         */
     iml1 += adsl_gai1_w1->achc_ginp_end - adsl_gai1_w1->achc_ginp_cur;
     adsl_gai1_w1 = adsl_gai1_w1->adsc_next;  /* get next in chain     */
   }
   m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d m_send_vch_tose() vch=0X%04X length=%d/0X%p.",
                 __LINE__, 58677,  /* line number for errors  */
                 adsp_sc_vch_out->adsc_rdp_vc_1->usc_vch_no,  /* virtual channel no com */
                 iml1, iml1 );
   bol_compressed = FALSE;                  /* compress output         */
   if ((ADSL_OA1->achc_upper - ADSL_OA1->achc_lower) < 128) {  /* get new area */
     memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
     bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                        DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                        &dsl_aux_get_workarea,
                                        sizeof(struct dsd_aux_get_workarea) );
     if (bol1 == FALSE) {                   /* aux returned error      */
       adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
       return FALSE;                        /* do cleanup now          */
     }
     ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
     ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
   }
   ADSL_OA1->achc_upper -= sizeof(struct dsd_gather_i_1);
   if (ADSL_OA1->achc_upper < ADSL_OA1->achc_lower) {
     m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d m_send_vch_tose() illogic",
                   __LINE__, 58699);  /* line number for errors */
     return FALSE;                          /* program illogic         */
   }
#define ADSL_GAI1_OUT_G ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)
   ADSL_GAI1_OUT_G->adsc_next = NULL;
   *ADSL_OA1->aadsc_gai1_out_to_server = ADSL_GAI1_OUT_G;  /* output data to server */
   ADSL_OA1->aadsc_gai1_out_to_server = &ADSL_GAI1_OUT_G->adsc_next;  /* new chain output data to server */
   adsl_gai1_out_save = ADSL_GAI1_OUT_G;    /* save start output data  */
   /* compute where to start output                                    */
   achl_out_1 = ADSL_OA1->achc_lower + 4 + sizeof(ucrs_x224_p01) + 1 + 2 + 2 + 1 + 2 + 4 + D_SIZE_HASH + 4 + 2 + 2;
#undef ADSL_GAI1_OUT_G
   achl_out_start = achl_out_1;             /* save position start output */
   adsl_gai1_w1 = adsp_sc_vch_out->adsc_gai1_data;  /* output data     */
   iml_out_len = 0;                         /* clear length output     */
   if (bol_compressed) goto psend_vch_08;   /* send virtual channel data compressed */
   memset( achl_out_1 - 2, 0, 2 );          /* clear compression flags */
   while (TRUE) {
     iml1 = adsl_gai1_w1->achc_ginp_end - adsl_gai1_w1->achc_ginp_cur;
     if (iml1 > (ADSL_OA1->achc_upper - achl_out_1)) iml1 = ADSL_OA1->achc_upper - achl_out_1;
     memcpy( achl_out_1, adsl_gai1_w1->achc_ginp_cur, iml1 );
     adsl_gai1_w1->achc_ginp_cur += iml1;
     achl_out_1 += iml1;
     iml_out_len += iml1;                   /* increment length output */
     if (adsl_gai1_w1->achc_ginp_cur >= adsl_gai1_w1->achc_ginp_end) {
       adsl_gai1_w1 = adsl_gai1_w1->adsc_next;
       if (adsl_gai1_w1 == NULL) {          /* already end of chain    */
         break;                             /* all data copied         */
       }
     }
     if (achl_out_1 < ADSL_OA1->achc_upper) continue;  /* still space in output-area */
     ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)->achc_ginp_end = achl_out_1;  /* set current end */
     /* get new block for more output                                  */
     memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
     bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                        DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                        &dsl_aux_get_workarea,
                                        sizeof(struct dsd_aux_get_workarea) );
     if (bol1 == FALSE) {                   /* aux returned error        */
       adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
       return FALSE;                        /* do cleanup now          */
     }
     ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
     ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
     ADSL_OA1->achc_upper -= sizeof(struct dsd_gather_i_1);
     if (ADSL_OA1->achc_upper < ADSL_OA1->achc_lower) {
       m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d m_send_vch_tose() illogic",
                     __LINE__, 58762);  /* line number for errors */
       return FALSE;                        /* program illogic         */
     }
#define ADSL_GAI1_OUT_G ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)
     ADSL_GAI1_OUT_G->adsc_next = NULL;
     ADSL_GAI1_OUT_G->achc_ginp_cur = ADSL_OA1->achc_lower;
     *ADSL_OA1->aadsc_gai1_out_to_server = ADSL_GAI1_OUT_G;  /* output data to server */
     ADSL_OA1->aadsc_gai1_out_to_server = &ADSL_GAI1_OUT_G->adsc_next;  /* new chain output data to server */
#undef ADSL_GAI1_OUT_G
     achl_out_1 = ADSL_OA1->achc_lower;        /* here is next output     */
   }
   goto psend_vch_20;                       /* output finished         */

   psend_vch_08:                            /* send virtual channel data compressed */
// to-do 21.02.12 KB - only copied - is correct ??? UUUU
   /* prepare gather input to be compressed                            */
   D_ADSL_RCO1->dsc_cdrf_enc.vpc_userfld = adsp_hl_clib_1->vpc_userfld;
   D_ADSL_RCO1->dsc_cdrf_enc.amc_aux = adsp_hl_clib_1->amc_aux;
   D_ADSL_RCO1->dsc_cdrf_enc.adsc_gai1_in = adsl_gai1_w1;  /* input data */
   D_ADSL_RCO1->dsc_cdrf_enc.boc_mp_flush = TRUE;  /* end-of-record input */
   D_ADSL_RCO1->dsc_cdrf_enc.achc_out_cur = achl_out_1;  /* current end of output data */
   D_ADSL_RCO1->dsc_cdrf_enc.achc_out_end = ADSL_OA1->achc_upper;  /* end of buffer for output data */
   while (TRUE) {                           /* loop over gather input  */
     char *achh_out = D_ADSL_RCO1->dsc_cdrf_enc.achc_out_cur;
     D_ADSL_RCO1->amc_cdr_enc( &D_ADSL_RCO1->dsc_cdrf_enc );
     m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d psend_vch_08 enc &dsc_cdrf_enc=%p imc_return=%d len=%d/0X%X.",
                   __LINE__, 58887,  /* line number for errors */
                   &D_ADSL_RCO1->dsc_cdrf_enc,
                   D_ADSL_RCO1->dsc_cdrf_enc.imc_return,
                   D_ADSL_RCO1->dsc_cdrf_enc.achc_out_cur - achh_out,
                   D_ADSL_RCO1->dsc_cdrf_enc.achc_out_cur - achh_out );
     if (D_ADSL_RCO1->dsc_cdrf_enc.imc_return != DEF_IRET_NORMAL) {
       m_sdh_printf( adsp_hl_clib_1, "xlrdpac1 l%05d s%05d compression error %d.",
                     __LINE__, 58895,  /* line number for errors */
                     D_ADSL_RCO1->dsc_cdrf_enc.imc_return );
       return FALSE;                        /* do cleanup now          */
     }
     iml_out_len += D_ADSL_RCO1->dsc_cdrf_enc.achc_out_cur - achl_out_1;
     achl_out_1 = D_ADSL_RCO1->dsc_cdrf_enc.achc_out_cur;  /* set end of output */
     ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)->achc_ginp_end = achl_out_1;  /* set current end */
     if (D_ADSL_RCO1->dsc_cdrf_enc.boc_sr_flush) break;  /* end-of-record output */
     /* get new block for more output                                  */
     memset( &dsl_aux_get_workarea, 0, sizeof(struct dsd_aux_get_workarea) );  /* acquire additional work area */
     bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                        DEF_AUX_GET_WORKAREA,  /* get additional work area */
                                        &dsl_aux_get_workarea,
                                        sizeof(struct dsd_aux_get_workarea) );
     if (bol1 == FALSE) {                   /* aux returned error      */
       adsp_hl_clib_1->inc_return = DEF_IRET_ERRAU;  /* fatal error occured */
       return FALSE;                        /* do cleanup now          */
     }
     ADSL_OA1->achc_lower = dsl_aux_get_workarea.achc_work_area;
     ADSL_OA1->achc_upper = dsl_aux_get_workarea.achc_work_area + dsl_aux_get_workarea.imc_len_work_area;
     ADSL_OA1->achc_upper -= sizeof(struct dsd_gather_i_1);
     if (ADSL_OA1->achc_upper < ADSL_OA1->achc_lower) {
       return FALSE;                        /* program illogic         */
     }
#define ADSL_GAI1_OUT_G ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)
     ADSL_GAI1_OUT_G->adsc_next = NULL;
     ADSL_GAI1_OUT_G->achc_ginp_cur = ADSL_OA1->achc_lower;
     *ADSL_OA1->aadsc_gai1_out_to_server = ADSL_GAI1_OUT_G;  /* output data to server */
     ADSL_OA1->aadsc_gai1_out_to_server = &ADSL_GAI1_OUT_G->adsc_next;  /* new chain output data to server */
#undef ADSL_GAI1_OUT_G
     achl_out_1 = ADSL_OA1->achc_lower;        /* here is next output     */
   }
   *(achl_out_start - 2) = D_ADSL_RCO1->dsc_cdrf_enc.chrc_header[ 0 ];  /* copy compression header */
   *(achl_out_start - 1) = 0;               /* second byte compression header */

   psend_vch_20:                            /* output finished         */
   ADSL_OA1->achc_lower = ((struct dsd_gather_i_1 *) ADSL_OA1->achc_upper)->achc_ginp_end = achl_out_1;  /* set end of block */
   /* make header of output                                            */
   achl_out_start -= 4 + 2 + 2;             /* length uncompressed, segmentation flags and compression flags */
   m_put_le4( achl_out_start, adsp_sc_vch_out->umc_vch_ulen );
   memcpy( achl_out_start + 4, adsp_sc_vch_out->chrc_vch_segfl, sizeof(adsp_sc_vch_out->chrc_vch_segfl) );
   iml_out_len += 4 + 2 + 2;                /* add length output       */
   if ((ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.imc_count_sent & (4096 - 1)) == 0){
     if (ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.imc_count_sent) {
       m_update_keys( &ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1, &ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se, NULL );
     }
   }
// 25.04.12 KB - send virtual channel always encrypted to server
   {
     /* generate random                                                */
#define ACHL_WORK_SHA1 ((int *) achp_work)
#define ACHL_WORK_MD5 ((int *) ((char *) ((char *) ACHL_WORK_SHA1 + SHA_ARRAY_SIZE * sizeof(int))))
#define ACHL_WORK_UTIL_01 ((char *) ACHL_WORK_MD5 + MD5_ARRAY_SIZE * sizeof(int))
     memcpy( ACHL_WORK_SHA1,
             ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_sha1_state,
             sizeof(ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_sha1_state) );
     memcpy( ACHL_WORK_MD5,
             ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_md5_state,
             sizeof(ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.imrc_md5_state) );
     m_put_le4( ACHL_WORK_UTIL_01, iml_out_len );
     SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0, 4 );
     adsl_gai1_out_save->achc_ginp_cur = achl_out_start;
     adsl_gai1_w1 = adsl_gai1_out_save;
     iml2 = iml_out_len;                    /* get length output       */
     while (TRUE) {                         /* loop over all gather structures input */
       iml1 = adsl_gai1_w1->achc_ginp_end - adsl_gai1_w1->achc_ginp_cur;
       if (iml1 > iml2) {
         iml1 = iml2;                       /* only data in this frame */
       }
       SHA1_Update( ACHL_WORK_SHA1,
                    adsl_gai1_w1->achc_ginp_cur,
                    0, iml1 );
       RC4( adsl_gai1_w1->achc_ginp_cur, 0, iml1,
            adsl_gai1_w1->achc_ginp_cur, 0,
            ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.chrc_rc4_state );
       iml2 -= iml1;                        /* subtract data processed */
       if (iml2 <= 0) break;                /* all data processed      */
       adsl_gai1_w1 = adsl_gai1_w1->adsc_next;  /* get next gather     */
       if (adsl_gai1_w1 == NULL) {          /* already end of chain    */
         return FALSE;                      /* program illogic         */
       }
     }
//   if (D_ADSL_RCL1->chc_prot_rt03 & 0X08) {  /* flag for block count */
       m_put_le4( ACHL_WORK_UTIL_01, ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.imc_count_sent );
       SHA1_Update( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0, 4 );
//   }
     SHA1_Final( ACHL_WORK_SHA1, ACHL_WORK_UTIL_01, 0 );
     MD5_Update( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0, 20 );
     MD5_Final( ACHL_WORK_MD5, ACHL_WORK_UTIL_01, 0 );
     achl_out_start -= D_SIZE_HASH;         /* subtract length hash    */
     memcpy( achl_out_start, ACHL_WORK_UTIL_01, D_SIZE_HASH );
     iml_out_len += D_SIZE_HASH;            /* add length hash         */
#undef ACHL_WORK_SHA1
#undef ACHL_WORK_MD5
#undef ACHL_WORK_UTIL_01
     ADSL_RDPA_F->dsc_rdp_cl_1.dsc_rdp_co_1.dsc_encry_cl2se.imc_count_sent++;  /* count block sent */
   }
   achl_out_start -= 1 + 2 + 2;             /* length length, fl2, fl3, padding */
// *(achl_out_start + 1 + 0) = D_ADSL_RCL1->chc_prot_rt02;
// *(achl_out_start + 1 + 1) = D_ADSL_RCL1->chc_prot_rt03;
// 25.04.12 KB - send virtual channel always encrypted to server
   {
     *(achl_out_start + 1 + 0) = 0X08;
     *(achl_out_start + 1 + 1) = 0X08;
   }
   /* two bytes padding zero                                           */
   *(achl_out_start + 1 + 2 + 0) = 0;
   *(achl_out_start + 1 + 2 + 1) = 0;
   iml_out_len += 4;                        /* add length header       */
   *achl_out_start = (unsigned char) iml_out_len;  /* one byte length  */
   if (iml_out_len >= 0X0080) {             /* length in two bytes     */
     achl_out_start--;                      /* space for second byte   */
     m_put_be2( achl_out_start, iml_out_len );
     *achl_out_start |= 0X80;               /* flag length two bytes   */
     iml_out_len += 1;                      /* increment length        */
   }
   achl_out_start -= 4 + sizeof(ucrs_x224_p01) + 1 + 2 + 2 + 1;
   iml_out_len += 4 + sizeof(ucrs_x224_p01) + 1 + 2 + 2 + 1 + 1;
   adsl_gai1_out_save->achc_ginp_cur = achl_out_start;
   *achl_out_start = DEF_CONST_RDP_03;
   *(achl_out_start + 1) = 0;               /* second byte zero        */
   m_put_be2( achl_out_start + 2, iml_out_len );
   memcpy( achl_out_start + 4,
           ucrs_x224_p01,
           sizeof(ucrs_x224_p01) );
// *(achl_out_start + 4 + sizeof(ucrs_x224_p01)) = 0X68;  /* Send Data Indication */
   *(achl_out_start + 4 + sizeof(ucrs_x224_p01)) = 0X64;  /* Send Data Indication */
   m_put_be2( achl_out_start + 4 + sizeof(ucrs_x224_p01) + 1, D_ADSL_RCO1->usc_userid_cl2se );
   m_put_be2( achl_out_start + 4 + sizeof(ucrs_x224_p01) + 1 + 2, adsp_sc_vch_out->adsc_rdp_vc_1->usc_vch_no );
// *(achl_out_start + 4 + sizeof(ucrs_x224_p01) + 1 + 2 + 2) = 0XF0;  /* priority / segmentation */
   *(achl_out_start + 4 + sizeof(ucrs_x224_p01) + 1 + 2 + 2) = (unsigned char) 0X70;  /* priority / segmentation */
   return TRUE;                             /* all done                */
#ifndef HELP_DEBUG
#undef D_ADSL_RCL1
#undef D_ADSL_RCO1
#undef ADSL_OA1
#undef ADSL_RDPA_F
#endif
} /* end m_send_vch_tose()                                             */

/* compute position in array chrc_glyph_cache                          */
static inline int m_pos_array_glyph( int *aimp_len, int imp_id, int imp_index ) {
   if (imp_index > 254) return -1;
   switch (imp_id) {
     case 0:
       *aimp_len = 4;
       return (imp_index << 2);
     case 1:
       *aimp_len = 4;
       return (254 * 4 + (imp_index << 2));
     case 2:
       *aimp_len = 8;
       return (2 * 254 * 4 + (imp_index << 3));
     case 3:
       *aimp_len = 8;
       return (2 * 254 * 4 + 254 * 8 + (imp_index << 3));
     case 4:
       *aimp_len = 16;
       return (2 * 254 * 4 + 2 * 254 * 8 + (imp_index << 4));
     case 5:
       *aimp_len = 32;
       return (2 * 254 * 4 + 2 * 254 * 8 + 254 * 16 + (imp_index << 5));
     case 6:
       *aimp_len = 64;
       return (2 * 254 * 4 + 2 * 254 * 8 + 254 * 16 + 254 * 32
                 + (imp_index << 6));
     case 7:
       *aimp_len = 128;
       return (2 * 254 * 4 + 2 * 254 * 8 + 254 * 16
                 + 254 * 32 + 254 * 64
                 + (imp_index << 7));
     case 8:
       *aimp_len = 256;
       return (2 * 254 * 4 + 2 * 254 * 8 + 254 * 16
                 + 254 * 32 + 254 * 64 + 254 * 128
                 + (imp_index << 8));
     case 9:
       *aimp_len = 2048;
       return (2 * 254 * 4 + 2 * 254 * 8 + 254 * 16
                 + 254 * 32 + 254 * 64 + 254 * 128 + 254 * 256
                 + (imp_index << 11));
   }
   return -1;                               /* return error            */
} /* end m_pos_array_glyph()                                           */
static unsigned short int m_rop2_0_s( unsigned short int xxp_dest, unsigned short int xxp_pen ) {
   return 0;                                /* R2_BLACK 0              */
}
static unsigned short int m_rop2_1_s( unsigned short int xxp_dest, unsigned short int xxp_pen ) {
   return ~ (xxp_dest | xxp_pen);           /* R2_NOTMERGEPEN DPon     */
}
static unsigned short int m_rop2_2_s( unsigned short int xxp_dest, unsigned short int xxp_pen ) {
   return xxp_dest & (~ xxp_pen);           /* R2_MASKNOTPEN DPna      */
}
static unsigned short int m_rop2_3_s( unsigned short int xxp_dest, unsigned short int xxp_pen ) {
   return ~ xxp_pen;                        /* R2_NOTCOPYPEN Pn        */
}
static unsigned short int m_rop2_4_s( unsigned short int xxp_dest, unsigned short int xxp_pen ) {
   return (~ xxp_dest) & xxp_pen;           /* R2_MASKPENNOT PDna      */
}
static unsigned short int m_rop2_5_s( unsigned short int xxp_dest, unsigned short int xxp_pen ) {
   return ~ xxp_dest;                       /* R2_NOT Dn               */
}
static unsigned short int m_rop2_6_s( unsigned short int xxp_dest, unsigned short int xxp_pen ) {
   return xxp_dest ^ xxp_pen;               /* R2_XORPEN DPx           */
}
static unsigned short int m_rop2_7_s( unsigned short int xxp_dest, unsigned short int xxp_pen ) {
   return ~ (xxp_dest & xxp_pen);           /* R2_NOTMASKPEN DPan      */
}
static unsigned short int m_rop2_8_s( unsigned short int xxp_dest, unsigned short int xxp_pen ) {
   return xxp_dest & xxp_pen;               /* R2_MASKPEN DPa          */
}
static unsigned short int m_rop2_9_s( unsigned short int xxp_dest, unsigned short int xxp_pen ) {
   return ~ (xxp_dest ^ xxp_pen);           /* R2_NOTXORPEN DPxn       */
}
static unsigned short int m_rop2_a_s( unsigned short int xxp_dest, unsigned short int xxp_pen ) {
   return xxp_dest;                         /* R2_NOP D                */
}
static unsigned short int m_rop2_b_s( unsigned short int xxp_dest, unsigned short int xxp_pen ) {
   return xxp_dest | (~ xxp_pen);           /* R2_MERGENOTPEN DPno     */
}
static unsigned short int m_rop2_c_s( unsigned short int xxp_dest, unsigned short int xxp_pen ) {
   return xxp_pen;                          /* R2_COPYPEN P            */
}
static unsigned short int m_rop2_d_s( unsigned short int xxp_dest, unsigned short int xxp_pen ) {
   return (~ xxp_dest) | xxp_pen;           /* R2_MERGEPENNOT PDno     */
}
static unsigned short int m_rop2_e_s( unsigned short int xxp_dest, unsigned short int xxp_pen ) {
   return xxp_dest | xxp_pen;               /* R2_MERGEPEN PDo         */
}
static unsigned short int m_rop2_f_s( unsigned short int xxp_dest, unsigned short int xxp_pen ) {
   return 0XFFFFFFFF;                       /* R2_WHITE 1              */
}
static unsigned int m_rop2_0_24oi( unsigned int xxp_dest, unsigned int xxp_pen ) {
   return 0;                                /* R2_BLACK 0              */
}
static unsigned int m_rop2_1_24oi( unsigned int xxp_dest, unsigned int xxp_pen ) {
   return ~ (xxp_dest | xxp_pen);           /* R2_NOTMERGEPEN DPon     */
}
static unsigned int m_rop2_2_24oi( unsigned int xxp_dest, unsigned int xxp_pen ) {
   return xxp_dest & (~ xxp_pen);           /* R2_MASKNOTPEN DPna      */
}
static unsigned int m_rop2_3_24oi( unsigned int xxp_dest, unsigned int xxp_pen ) {
   return ~ xxp_pen;                        /* R2_NOTCOPYPEN Pn        */
}
static unsigned int m_rop2_4_24oi( unsigned int xxp_dest, unsigned int xxp_pen ) {
   return (~ xxp_dest) & xxp_pen;           /* R2_MASKPENNOT PDna      */
}
static unsigned int m_rop2_5_24oi( unsigned int xxp_dest, unsigned int xxp_pen ) {
   return ~ xxp_dest;                       /* R2_NOT Dn               */
}
static unsigned int m_rop2_6_24oi( unsigned int xxp_dest, unsigned int xxp_pen ) {
   return xxp_dest ^ xxp_pen;               /* R2_XORPEN DPx           */
}
static unsigned int m_rop2_7_24oi( unsigned int xxp_dest, unsigned int xxp_pen ) {
   return ~ (xxp_dest & xxp_pen);           /* R2_NOTMASKPEN DPan      */
}
static unsigned int m_rop2_8_24oi( unsigned int xxp_dest, unsigned int xxp_pen ) {
   return xxp_dest & xxp_pen;               /* R2_MASKPEN DPa          */
}
static unsigned int m_rop2_9_24oi( unsigned int xxp_dest, unsigned int xxp_pen ) {
   return ~ (xxp_dest ^ xxp_pen);           /* R2_NOTXORPEN DPxn       */
}
static unsigned int m_rop2_a_24oi( unsigned int xxp_dest, unsigned int xxp_pen ) {
   return xxp_dest;                         /* R2_NOP D                */
}
static unsigned int m_rop2_b_24oi( unsigned int xxp_dest, unsigned int xxp_pen ) {
   return xxp_dest | (~ xxp_pen);           /* R2_MERGENOTPEN DPno     */
}
static unsigned int m_rop2_c_24oi( unsigned int xxp_dest, unsigned int xxp_pen ) {
   return xxp_pen;                          /* R2_COPYPEN P            */
}
static unsigned int m_rop2_d_24oi( unsigned int xxp_dest, unsigned int xxp_pen ) {
   return (~ xxp_dest) | xxp_pen;           /* R2_MERGEPENNOT PDno     */
}
static unsigned int m_rop2_e_24oi( unsigned int xxp_dest, unsigned int xxp_pen ) {
   return xxp_dest | xxp_pen;               /* R2_MERGEPEN PDo         */
}
static unsigned int m_rop2_f_24oi( unsigned int xxp_dest, unsigned int xxp_pen ) {
   return 0XFFFFFFFF;                       /* R2_WHITE 1              */
}

/* input two bytes little endian                                       */
static inline short int m_get_le2( char *achp_source ) {
   return *((short int *) achp_source);
}

/* input four bytes little endian                                      */
static inline int m_get_le4( char *achp_source ) {
   return *((int *) achp_source);
}

/* output two bytes little endian                                      */
static inline void m_put_le2( char *achp_target, int inp1 ) {
   *((unsigned short int *) achp_target) = (unsigned short int) inp1;
}

/* output four bytes little endian                                     */
static inline void m_put_le4( char *achp_target, int inp1 ) {
   *((unsigned int *) achp_target) = (unsigned int) inp1;
}

/* output two bytes big endian                                         */
#define GHHW(str) ((unsigned short int) ((str & 0X00FF) << 8) \
        | ((str >> 8) & 0X00FF))
static inline void m_put_be2( char *achp_target, int inp1 ) {
   *((unsigned short int *) achp_target) = GHHW( inp1 );
}

#ifdef D_CONSOLE_OUT
static void m_console_out( char *achp_buff, int implength ) {
   int        iml1, iml2, iml3, iml4, iml5, iml6;  /* working variable */
   char       byl1;                         /* working-variable        */
   char       chrlwork1[ 76 ];              /* buffer to print         */

   iml1 = 0;
   while (iml1 < implength) {
     iml2 = iml1 + 16;
     if (iml2 > implength) iml2 = implength;
     for ( iml3 = 4; iml3 < 75; iml3++ ) {
       chrlwork1[iml3] = ' ';
     }
     chrlwork1[58] = '*';
     chrlwork1[75] = '*';
     iml3 = 4;
     do {
       iml3--;
       chrlwork1[ iml3 ] = chrstrans[ (iml1 >> ((4 - 1 - iml3) << 2)) & 0X0F ];
     } while (iml3 > 0);
     iml4 = 6;                              /* start hexa digits here  */
     iml5 = 59;                             /* start ASCII here        */
     iml6 = 4;                              /* times normal            */
     do {
       byl1 = achp_buff[ iml1++ ];
       chrlwork1[ iml4++ ] = chrstrans[ (byl1 >> 4) & 0X0F ];
       chrlwork1[ iml4++ ] = chrstrans[ byl1 & 0X0F ];
       iml4++;
       if (byl1 > 0X20) {
         chrlwork1[ iml5 ] = byl1;
       }
       iml5++;
       iml6--;
       if (iml6 == 0) {
         iml4++;
         iml6 = 4;
       }
     } while (iml1 < iml2);
     printf( "%.*s\n", sizeof(chrlwork1), chrlwork1 );
   }
   fflush( stdout );
} /* end m_console_out()                                            */
#endif


/* subroutine for output to console                                    */
static int m_sdh_printf( struct dsd_call_rdpclient_1 *adsp_hl_clib_1, char *achptext, ... ) {
   BOOL       bol1;                         /* working variable        */
   int        iml1;                         /* working variable        */
   va_list    dsl_argptr;
   char       chrl_out1[512];

   va_start( dsl_argptr, achptext );
   iml1 = vsnprintf( chrl_out1, sizeof(chrl_out1), achptext, dsl_argptr );
   va_end( dsl_argptr );
   bol1 = (*adsp_hl_clib_1->amc_aux)( adsp_hl_clib_1->vpc_userfld,
                                      DEF_AUX_CONSOLE_OUT,  /* output to console */
                                      chrl_out1, iml1 );
   return iml1;
} /* end m_sdh_printf()                                                */

/* subroutine to dump storage-content to console                       */
static void m_sdh_console_out( struct dsd_call_rdpclient_1 *adsp_hl_clib_1,
                               char *achp_buff, int implength ) {
   int        iml1, iml2, iml3, iml4, iml5, iml6;  /* working variable */
   char       byl1;                         /* working-variable        */
   char       chrlwork1[ 76 ];              /* buffer to print         */

   iml1 = 0;
   while (iml1 < implength) {
     iml2 = iml1 + 16;
     if (iml2 > implength) iml2 = implength;
     for ( iml3 = 4; iml3 < 75; iml3++ ) {
       chrlwork1[iml3] = ' ';
     }
     chrlwork1[58] = '*';
     chrlwork1[75] = '*';
     iml3 = 4;
     do {
       iml3--;
       chrlwork1[ iml3 ] = chrstrans[ (iml1 >> ((4 - 1 - iml3) << 2)) & 0X0F ];
     } while (iml3 > 0);
     iml4 = 6;                              /* start hexa digits here  */
     iml5 = 59;                             /* start ASCII here        */
     iml6 = 4;                              /* times normal            */
     do {
       byl1 = achp_buff[ iml1++ ];
       chrlwork1[ iml4++ ] = chrstrans[ (byl1 >> 4) & 0X0F ];
       chrlwork1[ iml4++ ] = chrstrans[ byl1 & 0X0F ];
       iml4++;
       if (byl1 > 0X20) {
         chrlwork1[ iml5 ] = byl1;
       }
       iml5++;
       iml6--;
       if (iml6 == 0) {
         iml4++;
         iml6 = 4;
       }
     } while (iml1 < iml2);
     m_sdh_printf( adsp_hl_clib_1, "%.*s", sizeof(chrlwork1), chrlwork1 );
   }
} /* end m_sdh_console_out()                                           */


static char * m_ret_t_ied_fsfp_bl( ied_fsfp_bl iel_fsfp_bl ) {
   switch (iel_fsfp_bl) {
     case ied_fsfp_invalid:                 /* invalid data received   */
       return "ied_fsfp_invalid";
     case ied_fsfp_constant:                /* is in constant          */
       return "ied_fsfp_constant";
     case ied_fsfp_status:                  /* status from server      */
       return "ied_fsfp_status";
     case ied_fsfp_x224_p01:                /* is in x224 header       */
       return "ied_fsfp_x224_p01";
     case ied_fsfp_ignore:                  /* ignore data             */
       return "ied_fsfp_ignore";
     case ied_fsfp_copy:                    /* copy data               */
       return "ied_fsfp_copy";
     case ied_fsfp_rec_type:                /* receive record type     */
       return "ied_fsfp_rec_type";
     case ied_fsfp_byte01:                  /* receive byte 01         */
       return "ied_fsfp_byte01";
     case ied_fsfp_lencons_2:               /* two bytes length remain */
       return "ied_fsfp_lencons_2";
     case ied_fsfp_lencons_1:               /* one byte length remains */
       return "ied_fsfp_lencons_1";
     case ied_fsfp_mcs_c1:                  /* x224 MCS command 1      */
       return "ied_fsfp_mcs_c1";
     case ied_fsfp_mcs_c2:                  /* x224 MCS command 2      */
       return "ied_fsfp_mcs_c2";
     case ied_fsfp_userid_se2cl:            /* userid server to client */
       return "ied_fsfp_userid_se2cl";
     case ied_fsfp_userid_cl2se:            /* userid client to server */
       return "ied_fsfp_userid_cl2se";
     case ied_fsfp_chno:                    /* channel number          */
       return "ied_fsfp_chno";
     case ied_fsfp_prio_seg:                /* Priority / Segmentation */
       return "ied_fsfp_prio_seg";
     case ied_fsfp_rt02:                    /* record type 2           */
       return "ied_fsfp_rt02";
     case ied_fsfp_rt03:                    /* record type 3           */
       return "ied_fsfp_rt03";
     case ied_fsfp_padd_1:                  /* padding                 */
       return "ied_fsfp_padd_1";
     case ied_fsfp_rdp4_hash:               /* hash RDP4 block         */
       return "ied_fsfp_rdp4_hash";
     case ied_fsfp_sch_len:                 /* Share Control Header length */
       return "ied_fsfp_sch_len";
     case ied_fsfp_sch_pdu_type:            /* Share Control Header PDU type */
       return "ied_fsfp_sch_pdu_type";
     case ied_fsfp_sch_pdu_source:          /* Share Control Header PDU source */
       return "ied_fsfp_sch_pdu_source";
     case ied_fsfp_r04_rdp_v:               /* block 4 RDP version     */
       return "ied_fsfp_r04_rdp_v";
     case ied_fsfp_int_lit_e:               /* int little endian       */
       return "ied_fsfp_int_lit_e";
     case ied_fsfp_int_big_e:               /* int big endian          */
       return "ied_fsfp_int_big_e";
     case ied_fsfp_asn1_tag:                /* ASN.1 tag               */
       return "ied_fsfp_asn1_tag:";
     case ied_fsfp_asn1_l1_fi:              /* ASN.1 length field      */
       return "ied_fsfp_asn1_l1_fi";
     case ied_fsfp_asn1_l1_p2:              /* ASN.1 length part two   */
       return "ied_fsfp_asn1_l1_p2";
     case ied_fsfp_mu_len_1:                /* multi length 1          */
       return "ied_fsfp_mu_len_1";
     case ied_fsfp_mu_len_2:                /* multi length 2          */
       return "ied_fsfp_mu_len_2";
     case ied_fsfp_r5_len_1:                /* RDP 5 multi length 1    */
       return "ied_fsfp_r5_len_1";
     case ied_fsfp_r5_len_2:                /* RDP 5 multi length 2    */
       return "ied_fsfp_r5_len_2";
     case ied_fsfp_r5_hash:                 /* RDP 5 hash              */
       return "ied_fsfp_r5_hash";
     case ied_fsfp_r5_pdu_typ:              /* RDP 5 PDU type          */
       return "ied_fsfp_r5_pdu_typ";
     case ied_fsfp_r5_pdu_cofl:             /* RDP 5 compression flags */
       return "ied_fsfp_r5_pdu_cofl";
     case ied_fsfp_r5_pdu_len:              /* RDP 5 PDU length        */
       return "ied_fsfp_r5_pdu_len";
     case ied_fsfp_r5_pdu_compr:            /* RDP 5 PDU compressed    */
       return "ied_fsfp_r5_pdu_compr";
     case ied_fsfp_r5_pdu_no_ord:           /* RDP 5 PDU number of orders */
       return "ied_fsfp_r5_pdu_no_ord";
     case ied_fsfp_r5_pdu_ord_fl:           /* RDP 5 control order flags   */
       return "ied_fsfp_r5_pdu_ord_fl";
     case ied_fsfp_r5_pdu_ord_prim:         /* RDP 5 primary order     */
       return "ied_fsfp_r5_pdu_ord_prim";
     case ied_fsfp_r5_pdu_ord_prfl:         /* RDP 5 primary order flags */
       return "ied_fsfp_r5_pdu_ord_prfl";
     case ied_fsfp_r5_pdu_ord_bofl:         /* RDP 5 bounds flags      */
       return "ied_fsfp_r5_pdu_ord_bofl";
     case ied_fsfp_r5_po_bounds_abs_left:   /* RDP 5 bounds absolute left */
       return "ied_fsfp_r5_po_bounds_abs_left";
     case ied_fsfp_r5_po_bounds_abs_top:    /* RDP 5 bounds absolute top */
       return "ied_fsfp_r5_po_bounds_abs_top";
     case ied_fsfp_r5_po_bounds_abs_right:  /* RDP 5 bounds absolute right */
       return "ied_fsfp_r5_po_bounds_abs_right";
     case ied_fsfp_r5_po_bounds_abs_bottom: /* RDP 5 bounds absolute bottom */
       return "ied_fsfp_r5_po_bounds_abs_bottom";
     case ied_fsfp_r5_po_bounds_delta_left: /* RDP 5 bounds delta left */
       return "ied_fsfp_r5_po_bounds_delta_left";
     case ied_fsfp_r5_po_bounds_delta_top:  /* RDP 5 bounds delta top */
       return "ied_fsfp_r5_po_bounds_delta_top";
     case ied_fsfp_r5_po_bounds_delta_right:/* RDP 5 bounds delta right */
       return "ied_fsfp_r5_po_bounds_delta_right";
     case ied_fsfp_r5_po_bounds_delta_bottom:/* RDP 5 bounds delta bottom */
       return "ied_fsfp_r5_po_bounds_delta_bottom";
     case ied_fsfp_r5_sec_cache_index:      /* RDP 5 secondary cache index */
       return "ied_fsfp_r5_sec_cache_index";
     case ied_fsfp_r5_sec_coor_left_1:      /* RDP 5 secondary coor left 1 */
       return "ied_fsfp_r5_sec_coor_left_1";
     case ied_fsfp_r5_sec_coor_left_2:      /* RDP 5 secondary coor left 2 */
       return "ied_fsfp_r5_sec_coor_left_2";
     case ied_fsfp_r5_sec_coor_top_1:       /* RDP 5 secondary coor top 1 */
       return "ied_fsfp_r5_sec_coor_top_1";
     case ied_fsfp_r5_sec_coor_top_2:       /* RDP 5 secondary coor top 2 */
       return "ied_fsfp_r5_sec_coor_top_2";
     case ied_fsfp_r5_sec_coor_width_1:     /* RDP 5 secondary coor width 1 */
       return "ied_fsfp_r5_sec_coor_width_1";
     case ied_fsfp_r5_sec_coor_width_2:     /* RDP 5 secondary coor width 2 */
       return "ied_fsfp_r5_sec_coor_width_2";
     case ied_fsfp_r5_sec_coor_height_1:    /* RDP 5 secondary coor height 1 */
       return "ied_fsfp_r5_sec_coor_height_1";
     case ied_fsfp_r5_sec_coor_height_2:    /* RDP 5 secondary coor height 2 */
       return "ied_fsfp_r5_sec_coor_height_2";
     case ied_fsfp_bitmap_header:           /* bitmap header           */
       return "ied_fsfp_bitmap_header";
     case ied_fsfp_bitmap_compr_flag:       /* bitmap compression flag */
       return "ied_fsfp_bitmap_compr_flag";
     case ied_fsfp_bitmap_ign_byte:         /* bitmap ignore this byte */
       return "ied_fsfp_bitmap_ign_byte";
     case ied_fsfp_bitmap_uncomp_len:       /* bitmap length uncompressed */
       return "ied_fsfp_bitmap_uncomp_len";
     case ied_fsfp_bitmap_out:              /* output of bitmap elements */
       return "ied_fsfp_bitmap_out";
     case ied_fsfp_bitmap_spec_lef:         /* bitmap special length encoding flag */
       return "ied_fsfp_bitmap_spec_lef";
     case ied_fsfp_bitmap_comp_len:         /* bitmap length compressed */
       return "ied_fsfp_bitmap_comp_len";
     case ied_fsfp_bitmap_comp_data:        /* bitmap compressed data  */
       return "ied_fsfp_bitmap_comp_data";
     case ied_fsfp_r5_o00_abs_left:         /* RDP 5 order 0 absolute left */
       return "ied_fsfp_r5_o00_abs_left";
     case ied_fsfp_r5_o00_abs_top:          /* RDP 5 order 0 absolute top */
       return "ied_fsfp_r5_o00_abs_top";
     case ied_fsfp_r5_o00_abs_width:        /* RDP 5 order 0 absolute width */
       return "ied_fsfp_r5_o00_abs_width";
     case ied_fsfp_r5_o00_abs_height:       /* RDP 5 order 0 absolute height */
       return "ied_fsfp_r5_o00_abs_height";
     case ied_fsfp_r5_o00_delta_left:       /* RDP 5 order 0 delta left */
       return "ied_fsfp_r5_o00_delta_left";
     case ied_fsfp_r5_o00_delta_top:        /* RDP 5 order 0 delta top */
       return "ied_fsfp_r5_o00_delta_top";
     case ied_fsfp_r5_o00_delta_width:      /* RDP 5 order 0 delta width */
       return "ied_fsfp_r5_o00_delta_width";
     case ied_fsfp_r5_o00_delta_height:     /* RDP 5 order 0 delta height */
       return "ied_fsfp_r5_o00_delta_height";
     case ied_fsfp_r5_o00_rop3:             /* RDP 5 order 0 ROP3      */
       return "ied_fsfp_r5_o00_rop3";
     case ied_fsfp_r5_o01_abs_left:         /* RDP 5 order 1 absolute left */
       return "ied_fsfp_r5_o01_abs_left";
     case ied_fsfp_r5_o01_abs_top:          /* RDP 5 order 1 absolute top */
       return "ied_fsfp_r5_o01_abs_top";
     case ied_fsfp_r5_o01_abs_width:        /* RDP 5 order 1 absolute width */
       return "ied_fsfp_r5_o01_abs_width";
     case ied_fsfp_r5_o01_abs_height:       /* RDP 5 order 1 absolute height */
       return "ied_fsfp_r5_o01_abs_height";
     case ied_fsfp_r5_o01_delta_left:       /* RDP 5 order 1 delta left */
       return "ied_fsfp_r5_o01_delta_left";
     case ied_fsfp_r5_o01_delta_top:        /* RDP 5 order 1 delta top */
       return "ied_fsfp_r5_o01_delta_top";
     case ied_fsfp_r5_o01_delta_width:      /* RDP 5 order 1 delta width */
       return "ied_fsfp_r5_o01_delta_width";
     case ied_fsfp_r5_o01_delta_height:     /* RDP 5 order 1 delta height */
       return "ied_fsfp_r5_o01_delta_height";
     case ied_fsfp_r5_o01_rop3:             /* RDP 5 order 1 ROP3      */
       return "ied_fsfp_r5_o01_rop3";
     case ied_fsfp_r5_o01_col_backgr:       /* RDP 5 order 1 background colour */
       return "ied_fsfp_r5_o01_col_backgr";
     case ied_fsfp_r5_o01_col_foregr:       /* RDP 5 order 1 foreground colour */
       return "ied_fsfp_r5_o01_col_foregr";
     case ied_fsfp_r5_o01_brush_x:          /* RDP 5 order 1 brush X   */
       return "ied_fsfp_r5_o01_brush_x";
     case ied_fsfp_r5_o01_brush_y:          /* RDP 5 order 1 brush Y   */
       return "ied_fsfp_r5_o01_brush_y";
     case ied_fsfp_r5_o01_brush_style:      /* RDP 5 order 1 brush style */
       return "ied_fsfp_r5_o01_brush_style";
     case ied_fsfp_r5_o01_brush_hatch:      /* RDP 5 order 1 brush hatch */
       return "ied_fsfp_r5_o01_brush_hatch";
     case ied_fsfp_r5_o0a_abs_left:         /* RDP 5 order 10/0AH absolute left */
       return "ied_fsfp_r5_o0a_abs_left";
     case ied_fsfp_r5_o0a_abs_top:          /* RDP 5 order 10/0AH absolute top */
       return "ied_fsfp_r5_o0a_abs_top";
     case ied_fsfp_r5_o0a_abs_width:        /* RDP 5 order 10/0AH absolute width */
       return "ied_fsfp_r5_o0a_abs_width";
     case ied_fsfp_r5_o0a_abs_height:       /* RDP 5 order 10/0AH absolute height */
       return "ied_fsfp_r5_o0a_abs_height";
     case ied_fsfp_r5_o0a_delta_left:       /* RDP 5 order 10/0AH delta left */
       return "ied_fsfp_r5_o0a_delta_left";
     case ied_fsfp_r5_o0a_delta_top:        /* RDP 5 order 10/0AH delta top */
       return "ied_fsfp_r5_o0a_delta_top";
     case ied_fsfp_r5_o0a_delta_width:      /* RDP 5 order 10/0AH delta width */
       return "ied_fsfp_r5_o0a_delta_width";
     case ied_fsfp_r5_o0a_delta_height:     /* RDP 5 order 10/0AH delta height */
       return "ied_fsfp_r5_o0a_delta_height";
     case ied_fsfp_r5_o0a_colour:           /* RDP 5 order 10/0AH colour */
       return "ied_fsfp_r5_o0a_colour";
     case ied_fsfp_r5_o0b_saveoffset:       /* RDP 5 order 11 SaveOffset */
       return "ied_fsfp_r5_o0b_saveoffset";
     case ied_fsfp_r5_o0b_abs_left:         /* RDP 5 order 11 absolute left */
       return "ied_fsfp_r5_o0b_abs_left";
     case ied_fsfp_r5_o0b_abs_top:          /* RDP 5 order 11 absolute top */
       return "ied_fsfp_r5_o0b_abs_top";
     case ied_fsfp_r5_o0b_abs_right:        /* RDP 5 order 11 absolute right */
       return "ied_fsfp_r5_o0b_abs_right";
     case ied_fsfp_r5_o0b_abs_bottom:       /* RDP 5 order 11 absolute bottom */
       return "ied_fsfp_r5_o0b_abs_bottom";
     case ied_fsfp_r5_o0b_delta_left:       /* RDP 5 order 11 delta left */
       return "ied_fsfp_r5_o0b_delta_left";
     case ied_fsfp_r5_o0b_delta_top:        /* RDP 5 order 11 delta top */
       return "ied_fsfp_r5_o0b_delta_top";
     case ied_fsfp_r5_o0b_delta_right:      /* RDP 5 order 11 delta right */
       return "ied_fsfp_r5_o0b_delta_right";
     case ied_fsfp_r5_o0b_delta_bottom:     /* RDP 5 order 11 delta bottom */
       return "ied_fsfp_r5_o0b_delta_bottom";
     case ied_fsfp_r5_o0b_oper:             /* RDP 5 order 11/0BH operation */
       return "ied_fsfp_r5_o0b_oper";
     case ied_fsfp_r5_o0d_cache_id:         /* RDP 5 order 13/0DH cacheId */
       return "ied_fsfp_r5_o0d_cache_id";
     case ied_fsfp_r5_o0d_abs_left:         /* RDP 5 order 13 absolute left */
       return "ied_fsfp_r5_o0d_abs_left";
     case ied_fsfp_r5_o0d_abs_top:          /* RDP 5 order 13 absolute top */
       return "ied_fsfp_r5_o0d_abs_top";
     case ied_fsfp_r5_o0d_abs_width:        /* RDP 5 order 13/0DH absolute width */
       return "ied_fsfp_r5_o0d_abs_width";
     case ied_fsfp_r5_o0d_abs_height:       /* RDP 5 order 13/0DH absolute height */
       return "ied_fsfp_r5_o0d_abs_height";
     case ied_fsfp_r5_o0d_delta_left:       /* RDP 5 order 13 delta left */
       return "ied_fsfp_r5_o0d_delta_left";
     case ied_fsfp_r5_o0d_delta_top:        /* RDP 5 order 13 delta top */
       return "ied_fsfp_r5_o0d_delta_top";
     case ied_fsfp_r5_o0d_delta_width:      /* RDP 5 order 13/0DH delta width */
       return "ied_fsfp_r5_o0d_delta_width";
     case ied_fsfp_r5_o0d_delta_height:     /* RDP 5 order 13/0DH delta height */
       return "ied_fsfp_r5_o0d_delta_height";
     case ied_fsfp_r5_o0d_rop3:             /* RDP 5 order 13 ROP3     */
       return "ied_fsfp_r5_o0d_rop3";
     case ied_fsfp_r5_o0d_abs_source_x:     /* RDP 5 order 13 abs source X */
       return "ied_fsfp_r5_o0d_abs_source_x";
     case ied_fsfp_r5_o0d_abs_source_y:     /* RDP 5 order 13 abs source Y */
       return "ied_fsfp_r5_o0d_abs_source_y";
     case ied_fsfp_r5_o0d_delta_source_x:   /* RDP 5 order 13 delta source X */
       return "ied_fsfp_r5_o0d_delta_source_x";
     case ied_fsfp_r5_o0d_delta_source_y:   /* RDP 5 order 13 delta source Y */
       return "ied_fsfp_r5_o0d_delta_source_y";
     case ied_fsfp_r5_o0d_bitmapcind:       /* RDP 5 order 13 BitmapCacheIndex */
       return "ied_fsfp_r5_o0d_bitmapcind";
     case ied_fsfp_r5_o0e_cache_id:         /* RDP 5 order 14/0EH cacheId */
       return "ied_fsfp_r5_o0e_cache_id";
     case ied_fsfp_r5_o0e_abs_left:         /* RDP 5 order 14 absolute left */
       return "ied_fsfp_r5_o0e_abs_left";
     case ied_fsfp_r5_o0e_abs_top:          /* RDP 5 order 14 absolute top */
       return "ied_fsfp_r5_o0e_abs_top";
     case ied_fsfp_r5_o0e_abs_width:        /* RDP 5 order 14 absolute width */
       return "ied_fsfp_r5_o0e_abs_width";
     case ied_fsfp_r5_o0e_abs_height:       /* RDP 5 order 14 absolute height */
       return "ied_fsfp_r5_o0e_abs_height";
     case ied_fsfp_r5_o0e_delta_left:       /* RDP 5 order 14 delta left */
       return "ied_fsfp_r5_o0e_delta_left";
     case ied_fsfp_r5_o0e_delta_top:        /* RDP 5 order 14 delta top */
       return "ied_fsfp_r5_o0e_delta_top";
     case ied_fsfp_r5_o0e_delta_width:      /* RDP 5 order 14/0EH delta width */
       return "ied_fsfp_r5_o0e_delta_width";
     case ied_fsfp_r5_o0e_delta_height:     /* RDP 5 order 14/0EH delta height */
       return "ied_fsfp_r5_o0e_delta_height";
     case ied_fsfp_r5_o0e_rop3:             /* RDP 5 order 14 ROP3     */
       return "ied_fsfp_r5_o0e_rop3";
     case ied_fsfp_r5_o0e_abs_source_x:     /* RDP 5 order 14 abs source X */
       return "ied_fsfp_r5_o0e_abs_source_x";
     case ied_fsfp_r5_o0e_abs_source_y:     /* RDP 5 order 14 abs source Y */
       return "ied_fsfp_r5_o0e_abs_source_y";
     case ied_fsfp_r5_o0e_delta_source_x:   /* RDP 5 order 14 delta source X */
       return "ied_fsfp_r5_o0e_delta_source_x";
     case ied_fsfp_r5_o0e_delta_source_y:   /* RDP 5 order 14 delta source Y */
       return "ied_fsfp_r5_o0e_delta_source_y";
     case ied_fsfp_r5_o0e_col_backgr:       /* RDP 5 order 14 background colour */
       return "ied_fsfp_r5_o0e_col_backgr";
     case ied_fsfp_r5_o0e_col_foregr:       /* RDP 5 order 14 foreground colour */
       return "ied_fsfp_r5_o0e_col_foregr";
     case ied_fsfp_r5_o0e_brush_x:          /* RDP 5 order 14 brush X   */
       return "ied_fsfp_r5_o0e_brush_x";
     case ied_fsfp_r5_o0e_brush_y:          /* RDP 5 order 14 brush Y   */
       return "ied_fsfp_r5_o0e_brush_y";
     case ied_fsfp_r5_o0e_brush_style:      /* RDP 5 order 14 brush style */
       return "ied_fsfp_r5_o0e_brush_style";
     case ied_fsfp_r5_o0e_brush_hatch:      /* RDP 5 order 14 brush hatch */
       return "ied_fsfp_r5_o0e_brush_hatch";
     case ied_fsfp_r5_o0e_bitmapcind:       /* RDP 5 order 14 BitmapCacheIndex */
       return "ied_fsfp_r5_o0e_bitmapcind";
     case ied_fsfp_r5_o12_abs_left:         /* RDP 5 order 18/12H absolute left */
       return "ied_fsfp_r5_o12_abs_left";
     case ied_fsfp_r5_o12_abs_top:          /* RDP 5 order 18/12H absolute top */
       return "ied_fsfp_r5_o12_abs_top";
     case ied_fsfp_r5_o12_abs_width:        /* RDP 5 order 18/12H absolute width */
       return "ied_fsfp_r5_o12_abs_width";
     case ied_fsfp_r5_o12_abs_height:       /* RDP 5 order 18/12H absolute height */
       return "ied_fsfp_r5_o12_abs_height";
     case ied_fsfp_r5_o12_delta_left:       /* RDP 5 order 18/12H delta left */
       return "ied_fsfp_r5_o12_delta_left";
     case ied_fsfp_r5_o12_delta_top:        /* RDP 5 order 18/12H delta top */
       return "ied_fsfp_r5_o12_delta_top";
     case ied_fsfp_r5_o12_delta_width:      /* RDP 5 order 18/12H delta width */
       return "ied_fsfp_r5_o12_delta_width";
     case ied_fsfp_r5_o12_delta_height:     /* RDP 5 order 18/12H delta height */
       return "ied_fsfp_r5_o12_delta_height";
     case ied_fsfp_r5_o12_no_delta_entries:  /* RDP 5 order 18/12H nDeltaEntries - number of delta entries */
       return "ied_fsfp_r5_o12_no_delta_entries";
     case ied_fsfp_r5_o12_len_delta:        /* RDP 5 order 18/12H length CodedDeltaList */
       return "ied_fsfp_r5_o12_len_delta";
     case ied_fsfp_r5_o13_cache_id:         /* RDP 5 order 19 cache Id */
       return "ied_fsfp_r5_o13_cache_id";
     case ied_fsfp_r5_o13_fdrawing:         /* RDP 5 order 19/13H fDrawing */
       return "ied_fsfp_r5_o13_fdrawing";
     case ied_fsfp_r5_o13_col_foregr:       /* RDP 5 order 19 foreground colour */
       return "ied_fsfp_r5_o13_col_foregr";
     case ied_fsfp_r5_o13_col_backgr:       /* RDP 5 order 19 background colour */
       return "ied_fsfp_r5_o13_col_backgr";
     case ied_fsfp_r5_o13_abs_left:         /* RDP 5 order 19 absolute left */
       return "ied_fsfp_r5_o13_abs_left";
     case ied_fsfp_r5_o13_abs_top:          /* RDP 5 order 19 absolute top */
       return "ied_fsfp_r5_o13_abs_top";
     case ied_fsfp_r5_o13_abs_right:        /* RDP 5 order 19 absolute right */
       return "ied_fsfp_r5_o13_abs_right";
     case ied_fsfp_r5_o13_abs_bottom:       /* RDP 5 order 19 absolute bottom */
       return "ied_fsfp_r5_o13_abs_bottom";
     case ied_fsfp_r5_o13_delta_left:       /* RDP 5 order 19 delta left */
       return "ied_fsfp_r5_o13_delta_left";
     case ied_fsfp_r5_o13_delta_top:        /* RDP 5 order 19 delta top */
       return "ied_fsfp_r5_o13_delta_top";
     case ied_fsfp_r5_o13_delta_right:      /* RDP 5 order 19 delta right */
       return "ied_fsfp_r5_o13_delta_right";
     case ied_fsfp_r5_o13_delta_bottom:     /* RDP 5 order 19 delta bottom */
       return "ied_fsfp_r5_o13_delta_bottom";
     case ied_fsfp_r5_o13_r2_abs_left:      /* RDP 5 order 19 absolute rect2 left */
       return "ied_fsfp_r5_o13_r2_abs_left";
     case ied_fsfp_r5_o13_r2_abs_top:       /* RDP 5 order 19 absolute rect2 top */
       return "ied_fsfp_r5_o13_r2_abs_top";
     case ied_fsfp_r5_o13_r2_abs_right:     /* RDP 5 order 19 absolute rect2 right */
       return "ied_fsfp_r5_o13_r2_abs_right";
     case ied_fsfp_r5_o13_r2_abs_bottom:    /* RDP 5 order 19 absolute rect2 bottom */
       return "ied_fsfp_r5_o13_r2_abs_bottom";
     case ied_fsfp_r5_o13_r2_delta_left:    /* RDP 5 order 19 rect2 delta left */
       return "ied_fsfp_r5_o13_r2_delta_left";
     case ied_fsfp_r5_o13_r2_delta_top:     /* RDP 5 order 19 rect2 delta top */
       return "ied_fsfp_r5_o13_r2_delta_top";
     case ied_fsfp_r5_o13_r2_delta_right:   /* RDP 5 order 19 rect2 delta right */
       return "ied_fsfp_r5_o13_r2_delta_right";
     case ied_fsfp_r5_o13_r2_delta_bottom:  /* RDP 5 order 19 rect2 delta bottom */
       return "ied_fsfp_r5_o13_r2_delta_bottom";
     case ied_fsfp_r5_o13_abs_start_x:      /* RDP 5 order 19 abs start X */
       return "ied_fsfp_r5_o13_abs_start_x";
     case ied_fsfp_r5_o13_abs_start_y:      /* RDP 5 order 19 abs start Y */
       return "ied_fsfp_r5_o13_abs_start_y";
     case ied_fsfp_r5_o13_delta_start_x:    /* RDP 5 order 19 delta start X */
       return "ied_fsfp_r5_o13_delta_start_x";
     case ied_fsfp_r5_o13_delta_start_y:    /* RDP 5 order 19 delta start Y */
       return "ied_fsfp_r5_o13_delta_start_y";
     case ied_fsfp_r5_o13_len_glyph:        /* RDP 5 order 19 length glyph */
       return "ied_fsfp_r5_o13_len_glyph";
     case ied_fsfp_r5_o18_cache_id:         /* RDP 5 order 24 cache Id */
       return "ied_fsfp_r5_o18_cache_id";
     case ied_fsfp_r5_o18_fdrawing:         /* RDP 5 order 24/18H fDrawing */
       return "ied_fsfp_r5_o18_fdrawing";
     case ied_fsfp_r5_o18_col_backgr:       /* RDP 5 order 24 background colour */
       return "ied_fsfp_r5_o18_col_backgr";
     case ied_fsfp_r5_o18_col_foregr:       /* RDP 5 order 24 foreground colour */
       return "ied_fsfp_r5_o18_col_foregr";
     case ied_fsfp_r5_o18_abs_left:         /* RDP 5 order 24 absolute left */
       return "ied_fsfp_r5_o18_abs_left";
     case ied_fsfp_r5_o18_abs_top:          /* RDP 5 order 24 absolute top */
       return "ied_fsfp_r5_o18_abs_top";
     case ied_fsfp_r5_o18_abs_right:        /* RDP 5 order 24 absolute right */
       return "ied_fsfp_r5_o18_abs_right";
     case ied_fsfp_r5_o18_abs_bottom:       /* RDP 5 order 24 absolute bottom */
       return "ied_fsfp_r5_o18_abs_bottom";
     case ied_fsfp_r5_o18_delta_left:       /* RDP 5 order 24 delta left */
       return "ied_fsfp_r5_o18_delta_left";
     case ied_fsfp_r5_o18_delta_top:        /* RDP 5 order 24 delta top */
       return "ied_fsfp_r5_o18_delta_top";
     case ied_fsfp_r5_o18_delta_right:      /* RDP 5 order 24 delta right */
       return "ied_fsfp_r5_o18_delta_right";
     case ied_fsfp_r5_o18_delta_bottom:     /* RDP 5 order 24 delta bottom */
       return "ied_fsfp_r5_o18_delta_bottom";
     case ied_fsfp_r5_o18_r2_abs_left:          /* RDP 5 order 24 rect2 left */
       return "ied_fsfp_r5_o18_r2_abs_left";
     case ied_fsfp_r5_o18_r2_abs_top:           /* RDP 5 order 24 rect2 top */
       return "ied_fsfp_r5_o18_r2_abs_top";
     case ied_fsfp_r5_o18_r2_abs_right:         /* RDP 5 order 24 rect2 right */
       return "ied_fsfp_r5_o18_r2_abs_right";
     case ied_fsfp_r5_o18_r2_abs_bottom:        /* RDP 5 order 24 rect2 bottom */
       return "ied_fsfp_r5_o18_r2_abs_bottom";
     case ied_fsfp_r5_o18_abs_start_x:      /* RDP 5 order 24 abs start X */
       return "ied_fsfp_r5_o18_abs_start_x";
     case ied_fsfp_r5_o18_abs_start_y:      /* RDP 5 order 24 abs start Y */
       return "ied_fsfp_r5_o18_abs_start_y";
     case ied_fsfp_r5_o18_delta_start_x:    /* RDP 5 order 24 delta start X */
       return "ied_fsfp_r5_o18_delta_start_x";
     case ied_fsfp_r5_o18_delta_start_y:    /* RDP 5 order 24 delta start Y */
       return "ied_fsfp_r5_o18_delta_start_y";
     case ied_fsfp_r5_o18_len_glyph:        /* RDP 5 order 24 length glyph */
       return "ied_fsfp_r5_o18_len_glyph";
     case ied_fsfp_r5_pdu_ord_len:          /* RDP 5 PDU order length  */
       return "ied_fsfp_r5_pdu_ord_len";
     case ied_fsfp_r5_pdu_sec_data:         /* RDP 5 PDU Secondary Drawing Orders data */
       return "ied_fsfp_r5_pdu_sec_data";
     case ied_fsfp_r5_po_new_buf_ind:       /* RDP 5 PDU new order, buffer index */
       return "ied_fsfp_r5_po_new_buf_ind";
     case ied_fsfp_r5_po_new_buf_param:     /* RDP 5 PDU new order, buffer param */
       return "ied_fsfp_r5_po_new_buf_param";
     case ied_fsfp_r5_po_new_buf_no_free:   /* RDP 5 PDU new order, number of buffers to free */
       return "ied_fsfp_r5_po_new_buf_no_free";
     case ied_fsfp_r5_po_new_buf_free_ind:  /* RDP 5 PDU new order, index of buffer to free */
       return "ied_fsfp_r5_po_new_buf_free_ind";
     case ied_fsfp_send_from_server:        /* send data to client     */
       return "ied_fsfp_send_from_server";
     case ied_fsfp_end_com:                 /* end of communication    */
       return "ied_fsfp_end_com";
     case ied_fsfp_no_session:              /* no more session         */
       return "ied_fsfp_no_session";
   }
   return "-undef-";
}  /* end m_ret_t_ied_fsfp_bl()                                        */


static char * m_ret_t_ied_frse_bl( ied_frse_bl iel_frse_bl ) {
   switch (iel_frse_bl) {
     case ied_frse_start:                   /* start of communication  */
       return "ied_frse_start";
     case ied_frse_rec_04:                  /* receive block 4         */
       return "ied_frse_rec_04";
     case ied_frse_r04_asn1_1:              /* block 4 ASN-1 field 1   */
       return "ied_frse_r04_asn1_1";
     case ied_frse_r04_asn1_2:              /* block 4 ASN-1 field 2   */
       return "ied_frse_r04_asn1_2";
     case ied_frse_r04_asn1_3:              /* block 4 ASN-1 field 3   */
       return "ied_frse_r04_asn1_3";
     case ied_frse_r04_asn1_4:              /* block 4 ASN-1 field 4   */
       return "ied_frse_r04_asn1_4";
     case ied_frse_r04_sel_t:               /* block 4 selection tag   */
       return "ied_frse_r04_sel_t";
     case ied_frse_r04_sel_l:               /* block 4 selection length */
       return "ied_frse_r04_sel_l";
     case ied_frse_r04_rdp_v:               /* block 4 RDP version     */
       return "ied_frse_r04_rdp_v";
     case ied_frse_r04_ch_disp:             /* block 4 display channel */
       return "ied_frse_r04_ch_disp";
     case ied_frse_r04_vch_no:              /* block 4 no virtual channels */
       return "ied_frse_r04_vch_no";
     case ied_frse_r04_vch_var:             /* block 4 variable channel */
       return "ied_frse_r04_vch_var";
     case ied_frse_r04_vch_del:             /* block 4 vch delemiter   */
       return "ied_frse_r04_vch_del";
     case ied_frse_r04_keytype:             /* block 4 security keytype */
       return "ied_frse_r04_keytype";
     case ied_frse_r04_sec_level:           /* block 4 security level  */
       return "ied_frse_r04_sec_level";
     case ied_frse_r04_l_serv_rand:         /* block 4 length server random */
       return "ied_frse_r04_l_serv_rand";
     case ied_frse_r04_l_pub_par:           /* block 4 length public parameters */
       return "ied_frse_r04_l_pub_par";
     case ied_frse_r04_d_serv_rand:         /* block 4 data server random */
       return "ied_frse_r04_d_serv_rand";
     case ied_frse_r04_type_pub_par:        /* block 4 type public parameters */
       return "ied_frse_r04_type_pub_par";
     case ied_frse_r04_ppdir_tag:           /* block 4 public parms direct tag */
       return "ied_frse_r04_ppdir_tag";
     case ied_frse_r04_ppdir_len:           /* block 4 public parms direct lenght */
       return "ied_frse_r04_ppdir_len";
     case ied_frse_r04_d_pub_par:           /* block 4 data public parameters */
       return "ied_frse_r04_d_pub_par";
     case ied_frse_rec_07:                  /* receive block 7         */
       return "ied_frse_rec_07";
     case ied_frse_cjresp_rec:              /* receive block channel join response */
       return "ied_frse_cjresp_rec";
     case ied_frse_lic_pr_1_rec:            /* receive block licence protocol */
       return "ied_frse_lic_pr_1_rec";
     case ied_frse_lic_pr_type:             /* licencing block to check */
       return "ied_frse_lic_pr_type";
     case ied_frse_lic_pr_req_rand:         /* server license request random */
       return "ied_frse_lic_pr_req_rand";
     case ied_frse_lic_pr_req_cert:         /* server license request certificate */
       return "ied_frse_lic_pr_req_cert";
     case ied_frse_lic_pr_req_scopelist:    /* parse scopelist of server license request */
       return "ied_frse_lic_pr_req_scopelist";
     case ied_frse_lic_pr_chll:             /* platform challenge      */
       return "ied_frse_lic_pr_chll";
     case ied_frse_lic_pr_new_license:      /* new license or update license */
       return "ied_frse_lic_pr_new_license";
     case ied_frse_lic_pr_lic_error_mes1:   /* License Error Message */
       return "ied_frse_lic_pr_lic_error_mes1";
     case ied_frse_lic_pr_lic_error_mes2:   /* License Error Message */
       return "ied_frse_lic_pr_lic_error_mes2";
     case ied_frse_act_pdu_rec:             /* receive block active PDU */
       return "ied_frse_act_pdu_rec";
     case ied_frse_actpdu_parse_shareid:    /* parse shareid           */
       return "ied_frse_actpdu_parse_shareid";
     case ied_frse_actpdu_sdl:              /* get source descriptor length */
       return "ied_frse_actpdu_sdl";
     case ied_frse_actpdu_len_cap:          /* get length capabilities */
       return "ied_frse_actpdu_len_cap";
     case ied_frse_actpdu_no_cap:           /* get number capabilities */
       return "ied_frse_actpdu_no_cap";
     case ied_frse_actpdu_cap_ind:          /* get capabilities index  */
       return "ied_frse_actpdu_cap_ind";
     case ied_frse_actpdu_cap_len:          /* get capabilities length */
       return "ied_frse_actpdu_cap_len";
     case ied_frse_actpdu_trail:            /* trailer of act PDU      */
       return "ied_frse_actpdu_trail";
     case ied_frse_error_bl_01:             /* receive error block 01  */
       return"ied_frse_error_bl_01";
     case ied_frse_error_bl_02:             /* receive error block 02  */
       return"ied_frse_error_bl_02";
     case ied_frse_any_pdu_rec:             /* ????ive block active PDU */
       return "ied_frse_any_pdu_rec";
     case ied_frse_rdp4_vch_ulen:           /* virtual channel uncompressed data length */
       return "ied_frse_rdp4_vch_ulen";
     case ied_frse_r5_pdu_ord_buf:          /* RDP 5 PDU order buffer  */
       return "ied_frse_r5_pdu_ord_buf";
     case ied_frse_r5_pdu_primord:          /* RDP 5 PDU primary order */
       return "ied_frse_r5_pdu_primord";
     case ied_frse_r5_pdu_apply_order:      /* RDP 5 PDU apply order   */
       return "ied_frse_r5_pdu_apply_order";
     case ied_frse_r5_ign_single_unic:      /* ignore one single Unicode character */
       return "ied_frse_r5_ign_single_unic";
     case ied_frse_r5_o01_brush_data:       /* RDP 5 order 1 brush data */
       return "ied_frse_r5_o01_brush_data";
     case ied_frse_r5_o0e_brush_data:       /* RDP 5 order 14 brush data */
       return "ied_frse_r5_o0e_brush_data";
     case ied_frse_xyz_end_pdu:             /* end of PDU              */
       return "ied_frse_xyz_end_pdu";
     case ied_frse_xyz_end_order:           /* end of order            */
       return "ied_frse_xyz_end_order";
     case ied_ad_inv_user_x:                /* userid invalid - not fo */
       return "ied_ad_inv_user_x";
     case ied_ad_inv_password_x:            /* password invalid        */
       return "ied_ad_inv_password_x";
   }
   return "-undef-";
}  /* end m_ret_t_ied_frse_bl()                                        */
